{"version":3,"sources":["../../../../../modules/@angular/core/src/profile/wtf_impl.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAA,MAAE,EAAM,MAAA,gBAAA,CAAA;AA4Bf,IAAI,gBAAgB,CAAhB,KAAO,CAAM;AACjB,IAAI,gBAAgB,CAAhB,MAAQ,CAAO;AACnB;;GAEG;AACH,MAFC;IAGC,IAAM,gBAAgB,CAFhB,GAAA,GAAW,CAAA,CAAA,MAAW,CAAA,CAAI,iBAAA,CAAA,CAAmB,KAAC,CAAK,CAAC;IAG1D,EAAE,CAAC,CAAC,GAFC,CAAG,CAAC,CAAA;QAGP,KAAK,GAFG,GAAA,CAAI,OAAC,CAAO,CAAC;QAGrB,EAAE,CAAC,CAAC,KAFC,CAAK,CAAC,CAAA;YAGT,MAAM,GAFG,KAAA,CAAM,QAAC,CAAQ,CAAC;YAGzB,MAAM,CAFC,IAAA,CAAK;QAGd,CAAC;IACH,CAAC;IACD,MAAM,CAFC,KAAA,CAAM;AAGf,CAAC;AACD;;;;GAIG;AACH,MANC,sBAAA,SAAA,EAAA,KAAA;IAAA,sBAAA,EAAA,YAAA;IAOC,MAAM,CANC,MAAA,CAAO,WAAC,CAAW,SAAC,EAAU,KAAA,CAAM,CAAC;AAO9C,CAAC;AACD;;;;GAIG;AACH,MAVC,gBAAA,KAAA,EAAA,WAAA;IAWC,KAAK,CAVC,UAAC,CAAU,KAAC,EAAM,WAAA,CAAY,CAAC;IAWrC,MAAM,CAVC,WAAA,CAAY;AAWrB,CAAC;AACD;;;;GAIG;AACH,MAdC,yBAAA,SAAA,EAAA,MAAA;IAeC,MAAM,CAdC,KAAA,CAAM,cAAC,CAAc,SAAC,EAAU,MAAA,CAAO,CAAC;AAejD,CAAC;AACD;;;GAGG;AACH,MAjBC,uBAAA,KAAA;IAkBC,KAAK,CAjBC,YAAC,CAAY,KAAC,CAAK,CAAC;AAkB5B,CAAC","file":"wtf_impl.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {global} from '../facade/lang';\n\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * @experimental\n */\nexport interface WtfScopeFn { (arg0?: any, arg1?: any): any; }\n\ninterface WTF {\n  trace: Trace;\n}\n\ninterface Trace {\n  events: Events;\n  leaveScope(scope: Scope, returnValue: any): any /** TODO #9100 */;\n  beginTimeRange(rangeType: string, action: string): Range;\n  endTimeRange(range: Range): any /** TODO #9100 */;\n}\n\nexport interface Range {}\n\ninterface Events {\n  createScope(signature: string, flags: any): Scope;\n}\n\nexport interface Scope { (...args: any[] /** TODO #9100 */): any; }\n\nlet /** @type {?} */ trace: Trace;\nlet /** @type {?} */ events: Events;\n/**\n * @return {?}\n */\nexport function detectWTF(): boolean {\n  const /** @type {?} */ wtf: WTF = ( /** @type {?} */((global as any)) /** TODO #9100 */)['wtf'];\n  if (wtf) {\n    trace = wtf['trace'];\n    if (trace) {\n      events = trace['events'];\n      return true;\n    }\n  }\n  return false;\n}\n/**\n * @param {?} signature\n * @param {?=} flags\n * @return {?}\n */\nexport function createScope(signature: string, flags: any = null): any {\n  return events.createScope(signature, flags);\n}\n/**\n * @param {?} scope\n * @param {?=} returnValue\n * @return {?}\n */\nexport function leave<T>(scope: Scope, returnValue?: T): T {\n  trace.leaveScope(scope, returnValue);\n  return returnValue;\n}\n/**\n * @param {?} rangeType\n * @param {?} action\n * @return {?}\n */\nexport function startTimeRange(rangeType: string, action: string): Range {\n  return trace.beginTimeRange(rangeType, action);\n}\n/**\n * @param {?} range\n * @return {?}\n */\nexport function endTimeRange(range: Range): void {\n  trace.endTimeRange(range);\n}\n"]}