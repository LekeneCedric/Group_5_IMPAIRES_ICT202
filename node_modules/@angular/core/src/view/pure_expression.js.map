{"version":3,"sources":["../../../../../modules/@angular/core/src/view/pure_expression.ts"],"names":[],"mappings":"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","file":"pure_expression.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BindingDef, BindingType, DepDef, DepFlags, NodeData, NodeDef, NodeType, ProviderData, PureExpressionData, PureExpressionType, Services, ViewData, asPureExpressionData} from './types';\nimport {checkAndUpdateBinding, tokenKey} from './util';\n/**\n * @param {?} argCount\n * @return {?}\n */\nexport function purePipeDef(argCount: number): NodeDef {\n  // argCount + 1 to include the pipe as first arg\n  return _pureExpressionDef(PureExpressionType.Pipe, new Array(argCount + 1));\n}\n/**\n * @param {?} argCount\n * @return {?}\n */\nexport function pureArrayDef(argCount: number): NodeDef {\n  return _pureExpressionDef(PureExpressionType.Array, new Array(argCount));\n}\n/**\n * @param {?} propertyNames\n * @return {?}\n */\nexport function pureObjectDef(propertyNames: string[]): NodeDef {\n  return _pureExpressionDef(PureExpressionType.Object, propertyNames);\n}\n/**\n * @param {?} type\n * @param {?} propertyNames\n * @return {?}\n */\nfunction _pureExpressionDef(type: PureExpressionType, propertyNames: string[]): NodeDef {\n  const /** @type {?} */ bindings: BindingDef[] = new Array(propertyNames.length);\n  for (let /** @type {?} */ i = 0; i < propertyNames.length; i++) {\n    const /** @type {?} */ prop = propertyNames[i];\n    bindings[i] = {\n      type: BindingType.PureExpressionProperty,\n      name: prop,\n      ns: undefined,\n      nonMinifiedName: prop,\n      securityContext: undefined,\n      suffix: undefined\n    };\n  }\n  return {\n    type: NodeType.PureExpression,\n    // will bet set by the view definition\n    index: undefined,\n    reverseChildIndex: undefined,\n    parent: undefined,\n    renderParent: undefined,\n    bindingIndex: undefined,\n    disposableIndex: undefined,\n    // regular values\n    flags: 0,\n    childFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {},\n    ngContentIndex: undefined,\n    childCount: 0, bindings,\n    disposableCount: 0,\n    element: undefined,\n    provider: undefined,\n    text: undefined,\n    pureExpression: {type},\n    query: undefined,\n    ngContent: undefined\n  };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createPureExpression(view: ViewData, def: NodeDef): PureExpressionData {\n  return {value: undefined};\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdatePureExpressionInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any) {\n  const /** @type {?} */ bindings = def.bindings;\n  let /** @type {?} */ changed = false;\n  // Note: fallthrough is intended!\n  switch (bindings.length) {\n    case 10:\n      if (checkAndUpdateBinding(view, def, 9, v9)) changed = true;\n    case 9:\n      if (checkAndUpdateBinding(view, def, 8, v8)) changed = true;\n    case 8:\n      if (checkAndUpdateBinding(view, def, 7, v7)) changed = true;\n    case 7:\n      if (checkAndUpdateBinding(view, def, 6, v6)) changed = true;\n    case 6:\n      if (checkAndUpdateBinding(view, def, 5, v5)) changed = true;\n    case 5:\n      if (checkAndUpdateBinding(view, def, 4, v4)) changed = true;\n    case 4:\n      if (checkAndUpdateBinding(view, def, 3, v3)) changed = true;\n    case 3:\n      if (checkAndUpdateBinding(view, def, 2, v2)) changed = true;\n    case 2:\n      if (checkAndUpdateBinding(view, def, 1, v1)) changed = true;\n    case 1:\n      if (checkAndUpdateBinding(view, def, 0, v0)) changed = true;\n  }\n\n  const /** @type {?} */ data = asPureExpressionData(view, def.index);\n  if (changed) {\n    let /** @type {?} */ value: any;\n    switch (def.pureExpression.type) {\n      case PureExpressionType.Array:\n        value = new Array(bindings.length);\n        // Note: fallthrough is intended!\n        switch (bindings.length) {\n          case 10:\n            value[9] = v9;\n          case 9:\n            value[8] = v8;\n          case 8:\n            value[7] = v7;\n          case 7:\n            value[6] = v6;\n          case 6:\n            value[5] = v5;\n          case 5:\n            value[4] = v4;\n          case 4:\n            value[3] = v3;\n          case 3:\n            value[2] = v2;\n          case 2:\n            value[1] = v1;\n          case 1:\n            value[0] = v0;\n        }\n        break;\n      case PureExpressionType.Object:\n        value = {};\n        // Note: fallthrough is intended!\n        switch (bindings.length) {\n          case 10:\n            value[bindings[9].name] = v9;\n          case 9:\n            value[bindings[8].name] = v8;\n          case 8:\n            value[bindings[7].name] = v7;\n          case 7:\n            value[bindings[6].name] = v6;\n          case 6:\n            value[bindings[5].name] = v5;\n          case 5:\n            value[bindings[4].name] = v4;\n          case 4:\n            value[bindings[3].name] = v3;\n          case 3:\n            value[bindings[2].name] = v2;\n          case 2:\n            value[bindings[1].name] = v1;\n          case 1:\n            value[bindings[0].name] = v0;\n        }\n        break;\n      case PureExpressionType.Pipe:\n        const /** @type {?} */ pipe = v0;\n        switch (bindings.length) {\n          case 10:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n          case 9:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n            break;\n          case 8:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n            break;\n          case 7:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n            break;\n          case 6:\n            value = pipe.transform(v1, v2, v3, v4, v5);\n            break;\n          case 5:\n            value = pipe.transform(v1, v2, v3, v4);\n            break;\n          case 4:\n            value = pipe.transform(v1, v2, v3);\n            break;\n          case 3:\n            value = pipe.transform(v1, v2);\n            break;\n          case 2:\n            value = pipe.transform(v1);\n            break;\n          case 1:\n            value = pipe.transform(v0);\n            break;\n        }\n        break;\n    }\n    data.value = value;\n  }\n  return data.value;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdatePureExpressionDynamic(view: ViewData, def: NodeDef, values: any[]) {\n  const /** @type {?} */ bindings = def.bindings;\n  let /** @type {?} */ changed = false;\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    // Note: We need to loop over all values, so that\n    // the old values are updates as well!\n    if (checkAndUpdateBinding(view, def, i, values[i])) {\n      changed = true;\n    }\n  }\n  const /** @type {?} */ data = asPureExpressionData(view, def.index);\n  if (changed) {\n    let /** @type {?} */ value: any;\n    switch (def.pureExpression.type) {\n      case PureExpressionType.Array:\n        value = values;\n        break;\n      case PureExpressionType.Object:\n        value = {};\n        for (let /** @type {?} */ i = 0; i < values.length; i++) {\n          value[bindings[i].name] = values[i];\n        }\n        break;\n      case PureExpressionType.Pipe:\n        const /** @type {?} */ pipe = values[0];\n        const /** @type {?} */ params = values.slice(1);\n        value = ( /** @type {?} */((<any>pipe.transform)))(...params);\n        break;\n    }\n    data.value = value;\n  }\n  return data.value;\n}\n"]}