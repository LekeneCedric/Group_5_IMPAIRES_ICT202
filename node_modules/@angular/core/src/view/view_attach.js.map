{"version":3,"sources":["../../../../../modules/@angular/core/src/view/view_attach.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAA,kBAAE,EAAkB,MAAA,SAAA,CAAA;AAE3B,OAAO,EAAA,gBAAE,EAAiB,qBAAA,EAAwC,UAAA,EAAwD,oBAAA,EAAqB,MAAA,QAAA,CAAA;AAC/I;;;;;GAKG;AACH,MALC,6BAAA,WAAA,EAAA,SAAA,EAAA,IAAA;IAMC,IAAI,gBAAgB,CALhB,aAAA,GAAgB,WAAA,CAAY,aAAC,CAAa;IAM9C,EAAE,CAAC,CAAC,SALC,IAAY,IAAA,CAAK,CAAC,CAAA;QAMrB,SAAS,GALG,aAAA,CAAc,MAAC,CAAM;IAMnC,CAAC;IACD,UAAU,CALC,aAAC,EAAc,SAAA,EAAW,IAAA,CAAK,CAAC;IAM3C,IAAM,gBAAgB,CALhB,cAAA,GAAiB,qBAAA,CAAsB,IAAC,CAAI,CAAC;IAMnD,EAAE,CAAC,CAAC,cALC,IAAiB,cAAA,KAAmB,WAAA,CAAY,CAAC,CAAA;QAMpD,IAAI,gBAAgB,CALhB,cAAA,GAAiB,cAAA,CAAe,cAAC,CAAc;QAMnD,EAAE,CAAC,CAAC,CALC,cAAC,CAAc,CAAC,CAAA;YAMnB,cAAc,GALG,cAAA,CAAe,cAAC,GAAgB,EAAA,CAAG;QAMtD,CAAC;QACD,cAAc,CALC,IAAC,CAAI,IAAC,CAAI,CAAC;IAM5B,CAAC;IAED,kBAAkB,CALC,IAAC,CAAI,CAAC;IAOzB,IAAM,gBAAgB,CALhB,QAAA,GAAW,SAAA,GAAY,CAAA,GAAI,aAAA,CAAc,SAAC,GAAW,CAAA,CAAE,GAAG,IAAA,CAAK;IAMrE,wBAAwB,CALC,WAAC,EAAY,QAAA,EAAU,IAAA,CAAK,CAAC;AAMxD,CAAC;AACD;;;;GAIG;AACH,MATC,6BAAA,WAAA,EAAA,SAAA;IAUC,IAAM,gBAAgB,CAThB,aAAA,GAAgB,WAAA,CAAY,aAAC,CAAa;IAUhD,EAAE,CAAC,CAAC,SATC,IAAY,IAAA,CAAK,CAAC,CAAA;QAUrB,SAAS,GATG,aAAA,CAAc,MAAC,CAAM;IAUnC,CAAC;IACD,IAAM,gBAAgB,CAThB,IAAA,GAAO,aAAA,CAAc,SAAC,CAAS,CAAC;IAUtC,eAAe,CATC,aAAC,EAAc,SAAA,CAAU,CAAC;IAW1C,IAAM,gBAAgB,CAThB,cAAA,GAAiB,qBAAA,CAAsB,IAAC,CAAI,CAAC;IAUnD,EAAE,CAAC,CAAC,cATC,IAAiB,cAAA,KAAmB,WAAA,CAAY,CAAC,CAAA;QAUpD,IAAM,gBAAgB,CAThB,cAAA,GAAiB,cAAA,CAAe,cAAC,CAAc;QAUrD,eAAe,CATC,cAAC,EAAe,cAAA,CAAe,OAAC,CAAO,IAAC,CAAI,CAAC,CAAC;IAUhE,CAAC;IAED,kBAAkB,CATC,IAAC,CAAI,CAAC;IAWzB,wBAAwB,CATC,WAAC,EAAY,IAAA,CAAK,CAAC;IAW5C,MAAM,CATC,IAAA,CAAK;AAUd,CAAC;AACD;;;;;GAKG;AACH,MAdC,2BAeG,WAAwB,EAAE,YAAoB,EAAE,YAAoB;IACtE,IAAM,gBAAgB,CAdhB,aAAA,GAAgB,WAAA,CAAY,aAAC,CAAa;IAehD,IAAM,gBAAgB,CAdhB,IAAA,GAAO,aAAA,CAAc,YAAC,CAAY,CAAC;IAezC,eAAe,CAdC,aAAC,EAAc,YAAA,CAAa,CAAC;IAe7C,EAAE,CAAC,CAAC,YAdC,IAAe,IAAA,CAAK,CAAC,CAAA;QAexB,YAAY,GAdG,aAAA,CAAc,MAAC,CAAM;IAetC,CAAC;IACD,UAAU,CAdC,aAAC,EAAc,YAAA,EAAc,IAAA,CAAK,CAAC;IAgB9C,kEAAkE;IAClE,uBAAuB;IAEvB,kBAAkB,CAdC,IAAC,CAAI,CAAC;IAgBzB,wBAAwB,CAdC,WAAC,EAAY,IAAA,CAAK,CAAC;IAe5C,IAAM,gBAAgB,CAdhB,QAAA,GAAW,YAAA,GAAe,CAAA,GAAI,aAAA,CAAc,YAAC,GAAc,CAAA,CAAE,GAAG,IAAA,CAAK;IAe3E,wBAAwB,CAdC,WAAC,EAAY,QAAA,EAAU,IAAA,CAAK,CAAC;IAgBtD,MAAM,CAdC,IAAA,CAAK;AAed,CAAC;AACD;;;;;GAKG;AACH,kCAnBC,WAAA,EAAA,QAAA,EAAA,IAAA;IAoBC,IAAM,gBAAgB,CAnBhB,cAAA,GAoBF,QAAQ,GAnBG,UAAA,CAAW,QAAC,EAAS,QAAA,CAAS,GAAC,CAAG,YAAC,CAAY,GAAG,WAAA,CAAY,aAAC,CAAa;IAoB3F,IAAM,gBAAgB,CAnBhB,UAAA,GAAa,IAAA,CAAK,QAAC,CAAQ,UAAC,CAAU,cAAC,CAAc,CAAC;IAoB5D,IAAM,gBAAgB,CAnBhB,WAAA,GAAc,IAAA,CAAK,QAAC,CAAQ,WAAC,CAAW,cAAC,CAAc,CAAC;IAoB9D,wFAAwF;IACxF,mFAAmF;IACnF,oBAAoB,CAnBC,IAAC,EAAK,gBAAA,CAAiB,YAAC,EAAa,UAAA,EAAY,WAAA,EAAa,SAAA,CAAU,CAAC;AAoBhG,CAAC;AACD;;;;GAIG;AACH,kCAvBC,WAAA,EAAA,IAAA;IAwBC,IAAM,gBAAgB,CAvBhB,UAAA,GAAa,IAAA,CAAK,QAAC,CAAQ,UAAC,CAAU,WAAC,CAAW,aAAC,CAAa,CAAC;IAwBvE,oBAAoB,CAvBC,IAAC,EAAK,gBAAA,CAAiB,WAAC,EAAY,UAAA,EAAY,IAAA,EAAM,SAAA,CAAU,CAAC;AAwBxF,CAAC;AACD;;;;;GAKG;AACH,oBA5BC,GAAA,EAAA,KAAA,EAAA,KAAA;IA6BC,gDAAgD;IAChD,EAAE,CAAC,CAAC,KA5BC,IAAQ,GAAA,CAAI,MAAC,CAAM,CAAC,CAAA;QA6BvB,GAAG,CA5BC,IAAC,CAAI,KAAC,CAAK,CAAC;IA6BlB,CAAC;IA5BC,IAAA,CAAK,CAAA;QA6BL,GAAG,CA5BC,MAAC,CAAM,KAAC,EAAM,CAAA,EAAG,KAAA,CAAM,CAAC;IA6B9B,CAAC;AACH,CAAC;AACD;;;;GAIG;AACH,yBAhCC,GAAA,EAAA,KAAA;IAiCC,+CAA+C;IAC/C,EAAE,CAAC,CAAC,KAhCC,IAAQ,GAAA,CAAI,MAAC,GAAQ,CAAA,CAAE,CAAC,CAAA;QAiC3B,GAAG,CAhCC,GAAC,EAAG,CAAE;IAiCZ,CAAC;IAhCC,IAAA,CAAK,CAAA;QAiCL,GAAG,CAhCC,MAAC,CAAM,KAAC,EAAM,CAAA,CAAE,CAAC;IAiCvB,CAAC;AACH,CAAC","file":"view_attach.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {dirtyParentQueries} from './query';\nimport {ElementData, NodeData, NodeDef, NodeFlags, NodeType, ViewData, asElementData, asProviderData, asTextData} from './types';\nimport {RenderNodeAction, declaredViewContainer, isComponentView, renderNode, rootRenderNodes, visitProjectedRenderNodes, visitRootRenderNodes} from './util';\n/**\n * @param {?} elementData\n * @param {?} viewIndex\n * @param {?} view\n * @return {?}\n */\nexport function attachEmbeddedView(elementData: ElementData, viewIndex: number, view: ViewData) {\n  let /** @type {?} */ embeddedViews = elementData.embeddedViews;\n  if (viewIndex == null) {\n    viewIndex = embeddedViews.length;\n  }\n  addToArray(embeddedViews, viewIndex, view);\n  const /** @type {?} */ dvcElementData = declaredViewContainer(view);\n  if (dvcElementData && dvcElementData !== elementData) {\n    let /** @type {?} */ projectedViews = dvcElementData.projectedViews;\n    if (!projectedViews) {\n      projectedViews = dvcElementData.projectedViews = [];\n    }\n    projectedViews.push(view);\n  }\n\n  dirtyParentQueries(view);\n\n  const /** @type {?} */ prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n  renderAttachEmbeddedView(elementData, prevView, view);\n}\n/**\n * @param {?} elementData\n * @param {?} viewIndex\n * @return {?}\n */\nexport function detachEmbeddedView(elementData: ElementData, viewIndex: number): ViewData {\n  const /** @type {?} */ embeddedViews = elementData.embeddedViews;\n  if (viewIndex == null) {\n    viewIndex = embeddedViews.length;\n  }\n  const /** @type {?} */ view = embeddedViews[viewIndex];\n  removeFromArray(embeddedViews, viewIndex);\n\n  const /** @type {?} */ dvcElementData = declaredViewContainer(view);\n  if (dvcElementData && dvcElementData !== elementData) {\n    const /** @type {?} */ projectedViews = dvcElementData.projectedViews;\n    removeFromArray(projectedViews, projectedViews.indexOf(view));\n  }\n\n  dirtyParentQueries(view);\n\n  renderDetachEmbeddedView(elementData, view);\n\n  return view;\n}\n/**\n * @param {?} elementData\n * @param {?} oldViewIndex\n * @param {?} newViewIndex\n * @return {?}\n */\nexport function moveEmbeddedView(\n    elementData: ElementData, oldViewIndex: number, newViewIndex: number): ViewData {\n  const /** @type {?} */ embeddedViews = elementData.embeddedViews;\n  const /** @type {?} */ view = embeddedViews[oldViewIndex];\n  removeFromArray(embeddedViews, oldViewIndex);\n  if (newViewIndex == null) {\n    newViewIndex = embeddedViews.length;\n  }\n  addToArray(embeddedViews, newViewIndex, view);\n\n  // Note: Don't need to change projectedViews as the order in there\n  // as always invalid...\n\n  dirtyParentQueries(view);\n\n  renderDetachEmbeddedView(elementData, view);\n  const /** @type {?} */ prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n  renderAttachEmbeddedView(elementData, prevView, view);\n\n  return view;\n}\n/**\n * @param {?} elementData\n * @param {?} prevView\n * @param {?} view\n * @return {?}\n */\nfunction renderAttachEmbeddedView(elementData: ElementData, prevView: ViewData, view: ViewData) {\n  const /** @type {?} */ prevRenderNode =\n      prevView ? renderNode(prevView, prevView.def.lastRootNode) : elementData.renderElement;\n  const /** @type {?} */ parentNode = view.renderer.parentNode(prevRenderNode);\n  const /** @type {?} */ nextSibling = view.renderer.nextSibling(prevRenderNode);\n  // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n  // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n  visitRootRenderNodes(view, RenderNodeAction.InsertBefore, parentNode, nextSibling, undefined);\n}\n/**\n * @param {?} elementData\n * @param {?} view\n * @return {?}\n */\nfunction renderDetachEmbeddedView(elementData: ElementData, view: ViewData) {\n  const /** @type {?} */ parentNode = view.renderer.parentNode(elementData.renderElement);\n  visitRootRenderNodes(view, RenderNodeAction.RemoveChild, parentNode, null, undefined);\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction addToArray(arr: any[], index: number, value: any) {\n  // perf: array.push is faster than array.splice!\n  if (index >= arr.length) {\n    arr.push(value);\n  } else {\n    arr.splice(index, 0, value);\n  }\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @return {?}\n */\nfunction removeFromArray(arr: any[], index: number) {\n  // perf: array.pop is faster than array.splice!\n  if (index >= arr.length - 1) {\n    arr.pop();\n  } else {\n    arr.splice(index, 1);\n  }\n}\n"]}