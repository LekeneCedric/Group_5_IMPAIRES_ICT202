{"version":3,"sources":["../../../../../modules/@angular/core/src/view/types.ts"],"names":[],"mappings":"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","file":"types.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PipeTransform} from '../change_detection/change_detection';\nimport {Injector} from '../di';\nimport {ComponentRef} from '../linker/component_factory';\nimport {QueryList} from '../linker/query_list';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {ViewRef} from '../linker/view_ref';\nimport {ViewEncapsulation} from '../metadata/view';\nimport {RendererFactoryV2, RendererTypeV2, RendererV2} from '../render/api';\nimport {Sanitizer, SecurityContext} from '../security';\n\n// -------------------------------------\n// Defs\n// -------------------------------------\n\nexport interface ViewDefinition {\n  flags: ViewFlags;\n  updateDirectives: ViewUpdateFn;\n  updateRenderer: ViewUpdateFn;\n  handleEvent: ViewHandleEventFn;\n  /**\n   * Order: Depth first.\n   * Especially providers are before elements / anchors.\n   */\n  nodes: NodeDef[];\n  /** aggregated NodeFlags for all nodes **/\n  nodeFlags: NodeFlags;\n  /**\n   * Order: parents before children, but children in reverse order.\n   * Especially providers are after elements / anchors.\n   */\n  reverseChildNodes: NodeDef[];\n  lastRootNode: NodeDef;\n  bindingCount: number;\n  disposableCount: number;\n  /**\n   * Binary or of all query ids that are matched by one of the nodes.\n   * This includes query ids from templates as well.\n   * Used as a bloom filter.\n   */\n  nodeMatchedQueries: number;\n}\n\nexport type ViewDefinitionFactory = () => ViewDefinition;\n\nexport type ViewUpdateFn = (check: NodeCheckFn, view: ViewData) => void;\n\n// helper functions to create an overloaded function type.\nexport interface NodeCheckFn {\n  (view: ViewData, nodeIndex: number, argStyle: ArgumentType.Dynamic, values: any[]): any;\n\n  (view: ViewData, nodeIndex: number, argStyle: ArgumentType.Inline, v0?: any, v1?: any, v2?: any,\n   v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any;\n}\n\nexport type ViewHandleEventFn =\n    (view: ViewData, nodeIndex: number, eventName: string, event: any) => boolean;\nexport type ArgumentType = number;\nexport let ArgumentType: any = {};\nArgumentType.Inline = 0;\nArgumentType.Dynamic = 1;\nArgumentType[ArgumentType.Inline] = \"Inline\";\nArgumentType[ArgumentType.Dynamic] = \"Dynamic\";\n\nexport type ViewFlags = number;\nexport let ViewFlags: any = {};\nViewFlags.None = 0;\nViewFlags.OnPush = 2;\nViewFlags[ViewFlags.None] = \"None\";\nViewFlags[ViewFlags.OnPush] = \"OnPush\";\n\n\n/**\n * A node definition in the view.\n *\n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n */\nexport interface NodeDef {\n  type: NodeType;\n  index: number;\n  reverseChildIndex: number;\n  flags: NodeFlags;\n  parent: NodeDef;\n  renderParent: NodeDef;\n  /** this is checked against NgContentDef.index to find matched nodes */\n  ngContentIndex: number;\n  /** number of transitive children */\n  childCount: number;\n  /** aggregated NodeFlags for all children (does not include self) **/\n  childFlags: NodeFlags;\n\n  bindingIndex: number;\n  bindings: BindingDef[];\n  disposableIndex: number;\n  disposableCount: number;\n  /**\n   * references that the user placed on the element\n   */\n  references: {[refId: string]: QueryValueType};\n  /**\n   * ids and value types of all queries that are matched by this node.\n   */\n  matchedQueries: {[queryId: number]: QueryValueType};\n  /** Binary or of all matched query ids of this node. */\n  matchedQueryIds: number;\n  /**\n   * Binary or of all query ids that are matched by one of the children.\n   * This includes query ids from templates as well.\n   * Used as a bloom filter.\n   */\n  childMatchedQueries: number;\n  element: ElementDef;\n  provider: ProviderDef;\n  text: TextDef;\n  pureExpression: PureExpressionDef;\n  query: QueryDef;\n  ngContent: NgContentDef;\n}\nexport type NodeType = number;\nexport let NodeType: any = {};\nNodeType.Element = 0;\nNodeType.Text = 1;\nNodeType.Directive = 2;\nNodeType.Provider = 3;\nNodeType.Pipe = 4;\nNodeType.PureExpression = 5;\nNodeType.Query = 6;\nNodeType.NgContent = 7;\nNodeType[NodeType.Element] = \"Element\";\nNodeType[NodeType.Text] = \"Text\";\nNodeType[NodeType.Directive] = \"Directive\";\nNodeType[NodeType.Provider] = \"Provider\";\nNodeType[NodeType.Pipe] = \"Pipe\";\nNodeType[NodeType.PureExpression] = \"PureExpression\";\nNodeType[NodeType.Query] = \"Query\";\nNodeType[NodeType.NgContent] = \"NgContent\";\n\nexport type NodeFlags = number;\nexport let NodeFlags: any = {};\nNodeFlags.None = 0;\nNodeFlags.OnInit = 1;\nNodeFlags.OnDestroy = 2;\nNodeFlags.DoCheck = 4;\nNodeFlags.OnChanges = 8;\nNodeFlags.AfterContentInit = 16;\nNodeFlags.AfterContentChecked = 32;\nNodeFlags.AfterViewInit = 64;\nNodeFlags.AfterViewChecked = 128;\nNodeFlags.HasEmbeddedViews = 256;\nNodeFlags.HasComponent = 512;\nNodeFlags.HasContentQuery = 1024;\nNodeFlags.HasStaticQuery = 2048;\nNodeFlags.HasDynamicQuery = 4096;\nNodeFlags.HasViewQuery = 8192;\nNodeFlags.LazyProvider = 16384;\nNodeFlags.PrivateProvider = 32768;\nNodeFlags[NodeFlags.None] = \"None\";\nNodeFlags[NodeFlags.OnInit] = \"OnInit\";\nNodeFlags[NodeFlags.OnDestroy] = \"OnDestroy\";\nNodeFlags[NodeFlags.DoCheck] = \"DoCheck\";\nNodeFlags[NodeFlags.OnChanges] = \"OnChanges\";\nNodeFlags[NodeFlags.AfterContentInit] = \"AfterContentInit\";\nNodeFlags[NodeFlags.AfterContentChecked] = \"AfterContentChecked\";\nNodeFlags[NodeFlags.AfterViewInit] = \"AfterViewInit\";\nNodeFlags[NodeFlags.AfterViewChecked] = \"AfterViewChecked\";\nNodeFlags[NodeFlags.HasEmbeddedViews] = \"HasEmbeddedViews\";\nNodeFlags[NodeFlags.HasComponent] = \"HasComponent\";\nNodeFlags[NodeFlags.HasContentQuery] = \"HasContentQuery\";\nNodeFlags[NodeFlags.HasStaticQuery] = \"HasStaticQuery\";\nNodeFlags[NodeFlags.HasDynamicQuery] = \"HasDynamicQuery\";\nNodeFlags[NodeFlags.HasViewQuery] = \"HasViewQuery\";\nNodeFlags[NodeFlags.LazyProvider] = \"LazyProvider\";\nNodeFlags[NodeFlags.PrivateProvider] = \"PrivateProvider\";\n\n\nexport interface BindingDef {\n  type: BindingType;\n  ns: string;\n  name: string;\n  nonMinifiedName: string;\n  securityContext: SecurityContext;\n  suffix: string;\n}\nexport type BindingType = number;\nexport let BindingType: any = {};\nBindingType.ElementAttribute = 0;\nBindingType.ElementClass = 1;\nBindingType.ElementStyle = 2;\nBindingType.ElementProperty = 3;\nBindingType.DirectiveProperty = 4;\nBindingType.TextInterpolation = 5;\nBindingType.PureExpressionProperty = 6;\nBindingType[BindingType.ElementAttribute] = \"ElementAttribute\";\nBindingType[BindingType.ElementClass] = \"ElementClass\";\nBindingType[BindingType.ElementStyle] = \"ElementStyle\";\nBindingType[BindingType.ElementProperty] = \"ElementProperty\";\nBindingType[BindingType.DirectiveProperty] = \"DirectiveProperty\";\nBindingType[BindingType.TextInterpolation] = \"TextInterpolation\";\nBindingType[BindingType.PureExpressionProperty] = \"PureExpressionProperty\";\n\nexport type QueryValueType = number;\nexport let QueryValueType: any = {};\nQueryValueType.ElementRef = 0;\nQueryValueType.RenderElement = 1;\nQueryValueType.TemplateRef = 2;\nQueryValueType.ViewContainerRef = 3;\nQueryValueType.Provider = 4;\nQueryValueType[QueryValueType.ElementRef] = \"ElementRef\";\nQueryValueType[QueryValueType.RenderElement] = \"RenderElement\";\nQueryValueType[QueryValueType.TemplateRef] = \"TemplateRef\";\nQueryValueType[QueryValueType.ViewContainerRef] = \"ViewContainerRef\";\nQueryValueType[QueryValueType.Provider] = \"Provider\";\n\n\nexport interface ElementDef {\n  name: string;\n  ns: string;\n  /** ns, name, value */\n  attrs: [string, string, string][];\n  outputs: ElementOutputDef[];\n  template: ViewDefinition;\n  component: NodeDef;\n  /**\n   * visible public providers for DI in the view,\n   * as see from this element. This does not include private providers.\n   */\n  publicProviders: {[tokenKey: string]: NodeDef};\n  /**\n   * same as visiblePublicProviders, but also includes private providers\n   * that are located on this element.\n   */\n  allProviders: {[tokenKey: string]: NodeDef};\n  source: string;\n}\n\nexport interface ElementOutputDef {\n  target: string;\n  eventName: string;\n}\n\nexport interface ProviderDef {\n  type: ProviderType;\n  token: any;\n  tokenKey: string;\n  value: any;\n  deps: DepDef[];\n  outputs: DirectiveOutputDef[];\n  rendererType: RendererTypeV2;\n  // closure to allow recursive components\n  component: ViewDefinitionFactory;\n}\nexport type ProviderType = number;\nexport let ProviderType: any = {};\nProviderType.Value = 0;\nProviderType.Class = 1;\nProviderType.Factory = 2;\nProviderType.UseExisting = 3;\nProviderType[ProviderType.Value] = \"Value\";\nProviderType[ProviderType.Class] = \"Class\";\nProviderType[ProviderType.Factory] = \"Factory\";\nProviderType[ProviderType.UseExisting] = \"UseExisting\";\n\n\nexport interface DepDef {\n  flags: DepFlags;\n  token: any;\n  tokenKey: string;\n}\nexport type DepFlags = number;\nexport let DepFlags: any = {};\nDepFlags.None = 0;\nDepFlags.SkipSelf = 1;\nDepFlags.Optional = 2;\nDepFlags.Value = 8;\nDepFlags[DepFlags.None] = \"None\";\nDepFlags[DepFlags.SkipSelf] = \"SkipSelf\";\nDepFlags[DepFlags.Optional] = \"Optional\";\nDepFlags[DepFlags.Value] = \"Value\";\n\n\nexport interface DirectiveOutputDef {\n  propName: string;\n  eventName: string;\n}\n\nexport interface TextDef {\n  prefix: string;\n  source: string;\n}\n\nexport interface PureExpressionDef { type: PureExpressionType; }\nexport type PureExpressionType = number;\nexport let PureExpressionType: any = {};\nPureExpressionType.Array = 0;\nPureExpressionType.Object = 1;\nPureExpressionType.Pipe = 2;\nPureExpressionType[PureExpressionType.Array] = \"Array\";\nPureExpressionType[PureExpressionType.Object] = \"Object\";\nPureExpressionType[PureExpressionType.Pipe] = \"Pipe\";\n\n\nexport interface QueryDef {\n  id: number;\n  // variant of the id that can be used to check against NodeDef.matchedQueryIds, ...\n  filterId: number;\n  bindings: QueryBindingDef[];\n}\n\nexport interface QueryBindingDef {\n  propName: string;\n  bindingType: QueryBindingType;\n}\nexport type QueryBindingType = number;\nexport let QueryBindingType: any = {};\nQueryBindingType.First = 0;\nQueryBindingType.All = 1;\nQueryBindingType[QueryBindingType.First] = \"First\";\nQueryBindingType[QueryBindingType.All] = \"All\";\n\n\nexport interface NgContentDef {\n  /**\n   * this index is checked against NodeDef.ngContentIndex to find the nodes\n   * that are matched by this ng-content.\n   * Note that a NodeDef with an ng-content can be reprojected, i.e.\n   * have a ngContentIndex on its own.\n   */\n  index: number;\n}\n\n// -------------------------------------\n// Data\n// -------------------------------------\n\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ViewData {\n  def: ViewDefinition;\n  root: RootData;\n  renderer: RendererV2;\n  // index of component provider / anchor.\n  parentNodeDef: NodeDef;\n  parent: ViewData;\n  component: any;\n  context: any;\n  // Attention: Never loop over this, as this will\n  // create a polymorphic usage site.\n  // Instead: Always loop over ViewDefinition.nodes,\n  // and call the right accessor (e.g. `elementData`) based on\n  // the NodeType.\n  nodes: {[key: number]: NodeData};\n  state: ViewState;\n  oldValues: any[];\n  disposables: DisposableFn[];\n}\nexport type ViewState = number;\nexport let ViewState: any = {};\nViewState.FirstCheck = 1;\nViewState.ChecksEnabled = 2;\nViewState.Errored = 4;\nViewState.Destroyed = 8;\nViewState[ViewState.FirstCheck] = \"FirstCheck\";\nViewState[ViewState.ChecksEnabled] = \"ChecksEnabled\";\nViewState[ViewState.Errored] = \"Errored\";\nViewState[ViewState.Destroyed] = \"Destroyed\";\n\n\nexport type DisposableFn = () => void;\n/**\n * Node instance data.\n * \n * We have a separate type per NodeType to save memory\n * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n * \n * To keep our code monomorphic,\n * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n * purposes.\n */\nexport class NodeData {\nprivate __brand: any; }\n\nfunction NodeData_tsickle_Closure_declarations() {\n/** @type {?} */\nNodeData.prototype.__brand;\n}\n\n\n/**\n * Data for an instantiated NodeType.Text.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface TextData { renderText: any; }\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asTextData(view: ViewData, index: number): TextData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n\n/**\n * Data for an instantiated NodeType.Element.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ElementData {\n  renderElement: any;\n  embeddedViews: ViewData[];\n  // views that have been created from the template\n  // of this element,\n  // but inserted into the embeddedViews of another element.\n  // By default, this is undefined.\n  projectedViews: ViewData[];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asElementData(view: ViewData, index: number): ElementData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n\n/**\n * Data for an instantiated NodeType.Provider.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ProviderData {\n  instance: any;\n  componentView: ViewData;\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asProviderData(view: ViewData, index: number): ProviderData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n\n/**\n * Data for an instantiated NodeType.PureExpression.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface PureExpressionData { value: any; }\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asPureExpressionData(view: ViewData, index: number): PureExpressionData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asQueryList(view: ViewData, index: number): QueryList<any> {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n\nexport interface RootData {\n  injector: Injector;\n  projectableNodes: any[][];\n  selectorOrNode: any;\n  renderer: RendererV2;\n  rendererFactory: RendererFactoryV2;\n  sanitizer: Sanitizer;\n}\n/**\n * @abstract\n */\nexport abstract class DebugContext {\n/**\n * @abstract\n * @return {?}\n */\nview() {}\n/**\n * @abstract\n * @return {?}\n */\nnodeIndex() {}\n/**\n * @abstract\n * @return {?}\n */\ninjector() {}\n/**\n * @abstract\n * @return {?}\n */\ncomponent() {}\n/**\n * @abstract\n * @return {?}\n */\nproviderTokens() {}\n/**\n * @abstract\n * @return {?}\n */\nreferences() {}\n/**\n * @abstract\n * @return {?}\n */\ncontext() {}\n/**\n * @abstract\n * @return {?}\n */\nsource() {}\n/**\n * @abstract\n * @return {?}\n */\ncomponentRenderElement() {}\n/**\n * @abstract\n * @return {?}\n */\nrenderNode() {}\n}\n\n// -------------------------------------\n// Other\n// -------------------------------------\n\nexport interface Services {\n  setCurrentNode(view: ViewData, nodeIndex: number): void;\n  createRootView(\n      injector: Injector, projectableNodes: any[][], rootSelectorOrNode: string|any,\n      def: ViewDefinition, context?: any): ViewData;\n  createEmbeddedView(parent: ViewData, anchorDef: NodeDef, context?: any): ViewData;\n  checkAndUpdateView(view: ViewData): void;\n  checkNoChangesView(view: ViewData): void;\n  attachEmbeddedView(elementData: ElementData, viewIndex: number, view: ViewData): void;\n  detachEmbeddedView(elementData: ElementData, viewIndex: number): ViewData;\n  moveEmbeddedView(elementData: ElementData, oldViewIndex: number, newViewIndex: number): ViewData;\n  destroyView(view: ViewData): void;\n  resolveDep(\n      view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, depDef: DepDef,\n      notFoundValue?: any): any;\n  createDebugContext(view: ViewData, nodeIndex: number): DebugContext;\n  handleEvent: ViewHandleEventFn;\n  updateDirectives: ViewUpdateFn;\n  updateRenderer: ViewUpdateFn;\n}\n\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nexport const /** @type {?} */ Services: Services = {\n  setCurrentNode: undefined,\n  createRootView: undefined,\n  createEmbeddedView: undefined,\n  checkAndUpdateView: undefined,\n  checkNoChangesView: undefined,\n  destroyView: undefined,\n  attachEmbeddedView: undefined,\n  detachEmbeddedView: undefined,\n  moveEmbeddedView: undefined,\n  resolveDep: undefined,\n  createDebugContext: undefined,\n  handleEvent: undefined,\n  updateDirectives: undefined,\n  updateRenderer: undefined,\n};\n"]}