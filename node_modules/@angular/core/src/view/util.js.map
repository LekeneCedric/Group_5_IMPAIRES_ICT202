{"version":3,"sources":["../../../../../modules/@angular/core/src/view/util.ts"],"names":[],"mappings":"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","file":"util.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isDevMode} from '../application_ref';\nimport {WrappedValue, devModeEqual} from '../change_detection/change_detection';\nimport {SimpleChange} from '../change_detection/change_detection_util';\nimport {Injector} from '../di';\nimport {looseIdentical, stringify} from '../facade/lang';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {ViewRef} from '../linker/view_ref';\nimport {ViewEncapsulation} from '../metadata/view';\nimport {Renderer, RendererTypeV2} from '../render/api';\n\nimport {expressionChangedAfterItHasBeenCheckedError, isViewDebugError, viewDestroyedError, viewWrappedDebugError} from './errors';\nimport {DebugContext, ElementData, NodeData, NodeDef, NodeFlags, NodeType, QueryValueType, Services, ViewData, ViewDefinition, ViewDefinitionFactory, ViewFlags, ViewState, asElementData, asProviderData, asTextData} from './types';\n\nconst /** @type {?} */ _tokenKeyCache = new Map<any, string>();\n/**\n * @param {?} token\n * @return {?}\n */\nexport function tokenKey(token: any): string {\n  let /** @type {?} */ key = _tokenKeyCache.get(token);\n  if (!key) {\n    key = stringify(token) + '_' + _tokenKeyCache.size;\n    _tokenKeyCache.set(token, key);\n  }\n  return key;\n}\n\nlet /** @type {?} */ unwrapCounter = 0;\n/**\n * @param {?} value\n * @return {?}\n */\nexport function unwrapValue(value: any): any {\n  if (value instanceof WrappedValue) {\n    value = value.wrapped;\n    unwrapCounter++;\n  }\n  return value;\n}\n\nlet /** @type {?} */ _renderCompCount = 0;\n/**\n * @param {?} values\n * @return {?}\n */\nexport function createRendererTypeV2(values: {\n  styles: (string | any[])[],\n  encapsulation: ViewEncapsulation,\n  data: {[kind: string]: any[]}\n}): RendererTypeV2 {\n  const /** @type {?} */ isFilled = values && (values.encapsulation !== ViewEncapsulation.None ||\n                              values.styles.length || Object.keys(values.data).length);\n  if (isFilled) {\n    const /** @type {?} */ id = `c${_renderCompCount++}`;\n    return {id: id, styles: values.styles, encapsulation: values.encapsulation, data: values.data};\n  } else {\n    return null;\n  }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function checkBinding(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any): boolean {\n  const /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n  return unwrapCounter > 0 || !!(view.state & ViewState.FirstCheck) ||\n      !devModeEqual(oldValue, value);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function checkBindingNoChanges(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any) {\n  const /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n  if (unwrapCounter || (view.state & ViewState.FirstCheck) || !devModeEqual(oldValue, value)) {\n    unwrapCounter = 0;\n    throw expressionChangedAfterItHasBeenCheckedError(\n        Services.createDebugContext(view, def.index), oldValue, value,\n        (view.state & ViewState.FirstCheck) !== 0);\n  }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function checkAndUpdateBinding(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any): boolean {\n  const /** @type {?} */ oldValues = view.oldValues;\n  if (unwrapCounter || (view.state & ViewState.FirstCheck) ||\n      !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n    unwrapCounter = 0;\n    oldValues[def.bindingIndex + bindingIdx] = value;\n    return true;\n  }\n  return false;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nexport function dispatchEvent(\n    view: ViewData, nodeIndex: number, eventName: string, event: any): boolean {\n  let /** @type {?} */ currView = view;\n  while (currView) {\n    if (currView.def.flags & ViewFlags.OnPush) {\n      currView.state |= ViewState.ChecksEnabled;\n    }\n    currView = currView.parent;\n  }\n  return Services.handleEvent(view, nodeIndex, eventName, event);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function declaredViewContainer(view: ViewData): ElementData {\n  if (view.parent) {\n    const /** @type {?} */ parentView = view.parent;\n    return asElementData(parentView, view.parentNodeDef.index);\n  }\n  return undefined;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n * @param {?} view\n * @return {?}\n */\nexport function viewParentEl(view: ViewData): NodeDef {\n  const /** @type {?} */ parentView = view.parent;\n  if (parentView) {\n    return view.parentNodeDef.parent;\n  } else {\n    return null;\n  }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function renderNode(view: ViewData, def: NodeDef): any {\n  switch (def.type) {\n    case NodeType.Element:\n      return asElementData(view, def.index).renderElement;\n    case NodeType.Text:\n      return asTextData(view, def.index).renderText;\n  }\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nexport function elementEventFullName(target: string, name: string): string {\n  return target ? `${target}:${name}` : name;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function isComponentView(view: ViewData): boolean {\n  return view.component === view.context && !!view.parent;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function isEmbeddedView(view: ViewData): boolean {\n  return view.component !== view.context && !!view.parent;\n}\n/**\n * @param {?} queryId\n * @return {?}\n */\nexport function filterQueryId(queryId: number): number {\n  return 1 << (queryId % 32);\n}\n/**\n * @param {?} matchedQueriesDsl\n * @return {?}\n */\nexport function splitMatchedQueriesDsl(matchedQueriesDsl: [string | number, QueryValueType][]): {\n  matchedQueries: {[queryId: string]: QueryValueType},\n  references: {[refId: string]: QueryValueType},\n  matchedQueryIds: number\n} {\n  const /** @type {?} */ matchedQueries: {[queryId: string]: QueryValueType} = {};\n  let /** @type {?} */ matchedQueryIds = 0;\n  const /** @type {?} */ references: {[refId: string]: QueryValueType} = {};\n  if (matchedQueriesDsl) {\n    matchedQueriesDsl.forEach(([queryId, valueType]) => {\n      if (typeof queryId === 'number') {\n        matchedQueries[queryId] = valueType;\n        matchedQueryIds |= filterQueryId(queryId);\n      } else {\n        references[queryId] = valueType;\n      }\n    });\n  }\n  return {matchedQueries, references, matchedQueryIds};\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function getParentRenderElement(view: ViewData, renderHost: any, def: NodeDef): any {\n  let /** @type {?} */ renderParent = def.renderParent;\n  if (renderParent) {\n    const /** @type {?} */ parent = def.parent;\n    if (parent && (parent.type !== NodeType.Element || !parent.element.component ||\n                   (parent.element.component.provider.rendererType &&\n                    parent.element.component.provider.rendererType.encapsulation ===\n                        ViewEncapsulation.Native))) {\n      // only children of non components, or children of components with native encapsulation should\n      // be attached.\n      return asElementData(view, def.renderParent.index).renderElement;\n    }\n  } else {\n    return renderHost;\n  }\n}\n\nconst /** @type {?} */ VIEW_DEFINITION_CACHE = new WeakMap<any, ViewDefinition>();\n/**\n * @param {?} factory\n * @return {?}\n */\nexport function resolveViewDefinition(factory: ViewDefinitionFactory): ViewDefinition {\n  let /** @type {?} */ value: ViewDefinition = VIEW_DEFINITION_CACHE.get(factory);\n  if (!value) {\n    value = factory();\n    VIEW_DEFINITION_CACHE.set(factory, value);\n  }\n  return value;\n}\n/**\n * @param {?} start\n * @param {?} end\n * @return {?}\n */\nexport function sliceErrorStack(start: number, end: number): string {\n  let /** @type {?} */ err: any;\n  try {\n    throw new Error();\n  } catch ( /** @type {?} */e) {\n    err = e;\n  }\n  const /** @type {?} */ stack = err.stack || '';\n  const /** @type {?} */ lines = stack.split('\\n');\n  if (lines[0].startsWith('Error')) {\n    // Chrome always adds the message to the stack as well...\n    start++;\n    end++;\n  }\n  return lines.slice(start, end).join('\\n');\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function rootRenderNodes(view: ViewData): any[] {\n  const /** @type {?} */ renderNodes: any[] = [];\n  visitRootRenderNodes(view, RenderNodeAction.Collect, undefined, undefined, renderNodes);\n  return renderNodes;\n}\nexport type RenderNodeAction = number;\nexport let RenderNodeAction: any = {};\nRenderNodeAction.Collect = 0;\nRenderNodeAction.AppendChild = 1;\nRenderNodeAction.InsertBefore = 2;\nRenderNodeAction.RemoveChild = 3;\nRenderNodeAction[RenderNodeAction.Collect] = \"Collect\";\nRenderNodeAction[RenderNodeAction.AppendChild] = \"AppendChild\";\nRenderNodeAction[RenderNodeAction.InsertBefore] = \"InsertBefore\";\nRenderNodeAction[RenderNodeAction.RemoveChild] = \"RemoveChild\";\n\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?} target\n * @return {?}\n */\nexport function visitRootRenderNodes(\n    view: ViewData, action: RenderNodeAction, parentNode: any, nextSibling: any, target: any[]) {\n  // We need to re-compute the parent node in case the nodes have been moved around manually\n  if (action === RenderNodeAction.RemoveChild) {\n    parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRootNode));\n  }\n  visitSiblingRenderNodes(\n      view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?} target\n * @return {?}\n */\nexport function visitSiblingRenderNodes(\n    view: ViewData, action: RenderNodeAction, startIndex: number, endIndex: number, parentNode: any,\n    nextSibling: any, target: any[]) {\n  for (let /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if (nodeDef.type === NodeType.Element || nodeDef.type === NodeType.Text ||\n        nodeDef.type === NodeType.NgContent) {\n      visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n    }\n    // jump to next sibling\n    i += nodeDef.childCount;\n  }\n}\n/**\n * @param {?} view\n * @param {?} ngContentIndex\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?} target\n * @return {?}\n */\nexport function visitProjectedRenderNodes(\n    view: ViewData, ngContentIndex: number, action: RenderNodeAction, parentNode: any,\n    nextSibling: any, target: any[]) {\n  let /** @type {?} */ compView = view;\n  while (compView && !isComponentView(compView)) {\n    compView = compView.parent;\n  }\n  const /** @type {?} */ hostView = compView.parent;\n  const /** @type {?} */ hostElDef = viewParentEl(compView);\n  const /** @type {?} */ startIndex = hostElDef.index + 1;\n  const /** @type {?} */ endIndex = hostElDef.index + hostElDef.childCount;\n  for (let /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n    const /** @type {?} */ nodeDef = hostView.def.nodes[i];\n    if (nodeDef.ngContentIndex === ngContentIndex) {\n      visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n    }\n    // jump to next sibling\n    i += nodeDef.childCount;\n  }\n  if (!hostView.parent) {\n    // a root view\n    const /** @type {?} */ projectedNodes = view.root.projectableNodes[ngContentIndex];\n    if (projectedNodes) {\n      for (let /** @type {?} */ i = 0; i < projectedNodes.length; i++) {\n        execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n      }\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?} target\n * @return {?}\n */\nfunction visitRenderNode(\n    view: ViewData, nodeDef: NodeDef, action: RenderNodeAction, parentNode: any, nextSibling: any,\n    target: any[]) {\n  if (nodeDef.type === NodeType.NgContent) {\n    visitProjectedRenderNodes(\n        view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n  } else {\n    const /** @type {?} */ rn = renderNode(view, nodeDef);\n    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n    if (nodeDef.flags & NodeFlags.HasEmbeddedViews) {\n      const /** @type {?} */ embeddedViews = asElementData(view, nodeDef.index).embeddedViews;\n      if (embeddedViews) {\n        for (let /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n          visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n        }\n      }\n    }\n    if (nodeDef.type === NodeType.Element && !nodeDef.element.name) {\n      visitSiblingRenderNodes(\n          view, action, nodeDef.index + 1, nodeDef.index + nodeDef.childCount, parentNode,\n          nextSibling, target);\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?} target\n * @return {?}\n */\nfunction execRenderNodeAction(\n    view: ViewData, renderNode: any, action: RenderNodeAction, parentNode: any, nextSibling: any,\n    target: any[]) {\n  const /** @type {?} */ renderer = view.renderer;\n  switch (action) {\n    case RenderNodeAction.AppendChild:\n      renderer.appendChild(parentNode, renderNode);\n      break;\n    case RenderNodeAction.InsertBefore:\n      renderer.insertBefore(parentNode, renderNode, nextSibling);\n      break;\n    case RenderNodeAction.RemoveChild:\n      renderer.removeChild(parentNode, renderNode);\n      break;\n    case RenderNodeAction.Collect:\n      target.push(renderNode);\n      break;\n  }\n}\n\nconst /** @type {?} */ NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nexport function splitNamespace(name: string): string[] {\n  if (name[0] === ':') {\n    const /** @type {?} */ match = name.match(NS_PREFIX_RE);\n    return [match[1], match[2]];\n  }\n  return ['', name];\n}\n"]}