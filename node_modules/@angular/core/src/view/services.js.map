{"version":3,"sources":["../../../../../modules/@angular/core/src/view/services.ts"],"names":[],"mappings":"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","file":"services.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isDevMode} from '../application_ref';\nimport {DebugElement, DebugNode, EventListener, getDebugNode, indexDebugNode, removeDebugNodeFromIndex} from '../debug/debug_node';\nimport {Injector} from '../di';\nimport {RendererFactoryV2, RendererTypeV2, RendererV2} from '../render/api';\nimport {Sanitizer, SecurityContext} from '../security';\n\nimport {isViewDebugError, viewDestroyedError, viewWrappedDebugError} from './errors';\nimport {resolveDep} from './provider';\nimport {getQueryValue} from './query';\nimport {createInjector} from './refs';\nimport {ArgumentType, BindingType, DebugContext, DepFlags, ElementData, NodeCheckFn, NodeData, NodeDef, NodeFlags, NodeType, RootData, Services, ViewData, ViewDefinition, ViewDefinitionFactory, ViewState, asElementData, asProviderData} from './types';\nimport {checkBinding, isComponentView, renderNode, viewParentEl} from './util';\nimport {checkAndUpdateView, checkNoChangesView, createEmbeddedView, createRootView, destroyView} from './view';\nimport {attachEmbeddedView, detachEmbeddedView, moveEmbeddedView} from './view_attach';\n\nlet /** @type {?} */ initialized = false;\n/**\n * @return {?}\n */\nexport function initServicesIfNeeded() {\n  if (initialized) {\n    return;\n  }\n  initialized = true;\n  const /** @type {?} */ services = isDevMode() ? createDebugServices() : createProdServices();\n  Services.setCurrentNode = services.setCurrentNode;\n  Services.createRootView = services.createRootView;\n  Services.createEmbeddedView = services.createEmbeddedView;\n  Services.checkAndUpdateView = services.checkAndUpdateView;\n  Services.checkNoChangesView = services.checkNoChangesView;\n  Services.destroyView = services.destroyView;\n  Services.attachEmbeddedView = services.attachEmbeddedView,\n  Services.detachEmbeddedView = services.detachEmbeddedView,\n  Services.moveEmbeddedView = services.moveEmbeddedView;\n  Services.resolveDep = services.resolveDep;\n  Services.createDebugContext = services.createDebugContext;\n  Services.handleEvent = services.handleEvent;\n  Services.updateDirectives = services.updateDirectives;\n  Services.updateRenderer = services.updateRenderer;\n}\n/**\n * @return {?}\n */\nfunction createProdServices() {\n  return {\n    setCurrentNode: () => {},\n    createRootView: createProdRootView,\n    createEmbeddedView: createEmbeddedView,\n    checkAndUpdateView: checkAndUpdateView,\n    checkNoChangesView: checkNoChangesView,\n    destroyView: destroyView,\n    attachEmbeddedView: attachEmbeddedView,\n    detachEmbeddedView: detachEmbeddedView,\n    moveEmbeddedView: moveEmbeddedView,\n    resolveDep: resolveDep,\n    createDebugContext: (view: ViewData, nodeIndex: number) => new DebugContext_(view, nodeIndex),\n    handleEvent: (view: ViewData, nodeIndex: number, eventName: string, event: any) =>\n                     view.def.handleEvent(view, nodeIndex, eventName, event),\n    updateDirectives: (check: NodeCheckFn, view: ViewData) =>\n                          view.def.updateDirectives(check, view),\n    updateRenderer: (check: NodeCheckFn, view: ViewData) => view.def.updateRenderer(check, view),\n  };\n}\n/**\n * @return {?}\n */\nfunction createDebugServices() {\n  return {\n    setCurrentNode: debugSetCurrentNode,\n    createRootView: debugCreateRootView,\n    createEmbeddedView: debugCreateEmbeddedView,\n    checkAndUpdateView: debugCheckAndUpdateView,\n    checkNoChangesView: debugCheckNoChangesView,\n    destroyView: debugDestroyView,\n    attachEmbeddedView: attachEmbeddedView,\n    detachEmbeddedView: detachEmbeddedView,\n    moveEmbeddedView: moveEmbeddedView,\n    resolveDep: resolveDep,\n    createDebugContext: (view: ViewData, nodeIndex: number) => new DebugContext_(view, nodeIndex),\n    handleEvent: debugHandleEvent,\n    updateDirectives: debugUpdateDirectives,\n    updateRenderer: debugUpdateRenderer\n  };\n}\n/**\n * @param {?} injector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nfunction createProdRootView(\n    injector: Injector, projectableNodes: any[][], rootSelectorOrNode: string | any,\n    def: ViewDefinition, context?: any): ViewData {\n  const /** @type {?} */ rendererFactory: RendererFactoryV2 = injector.get(RendererFactoryV2);\n  return createRootView(\n      createRootData(injector, rendererFactory, projectableNodes, rootSelectorOrNode), def,\n      context);\n}\n/**\n * @param {?} injector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateRootView(\n    injector: Injector, projectableNodes: any[][], rootSelectorOrNode: string | any,\n    def: ViewDefinition, context?: any): ViewData {\n  const /** @type {?} */ rendererFactory: RendererFactoryV2 = injector.get(RendererFactoryV2);\n  const /** @type {?} */ root = createRootData(\n      injector, new DebugRendererFactoryV2(rendererFactory), projectableNodes, rootSelectorOrNode);\n  return callWithDebugContext(DebugAction.create, createRootView, null, [root, def, context]);\n}\n/**\n * @param {?} injector\n * @param {?} rendererFactory\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\nfunction createRootData(\n    injector: Injector, rendererFactory: RendererFactoryV2, projectableNodes: any[][],\n    rootSelectorOrNode: any): RootData {\n  const /** @type {?} */ sanitizer = injector.get(Sanitizer);\n  const /** @type {?} */ renderer = rendererFactory.createRenderer(null, null);\n  return {\n    injector,\n    projectableNodes,\n    selectorOrNode: rootSelectorOrNode, sanitizer, rendererFactory, renderer\n  };\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateEmbeddedView(parent: ViewData, anchorDef: NodeDef, context?: any): ViewData {\n  return callWithDebugContext(\n      DebugAction.create, createEmbeddedView, null, [parent, anchorDef, context]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckAndUpdateView(view: ViewData) {\n  return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckNoChangesView(view: ViewData) {\n  return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugDestroyView(view: ViewData) {\n  return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\ntype DebugAction = number;\nlet DebugAction: any = {};\nDebugAction.create = 0;\nDebugAction.detectChanges = 1;\nDebugAction.checkNoChanges = 2;\nDebugAction.destroy = 3;\nDebugAction.handleEvent = 4;\nDebugAction[DebugAction.create] = \"create\";\nDebugAction[DebugAction.detectChanges] = \"detectChanges\";\nDebugAction[DebugAction.checkNoChanges] = \"checkNoChanges\";\nDebugAction[DebugAction.destroy] = \"destroy\";\nDebugAction[DebugAction.handleEvent] = \"handleEvent\";\n\n\nlet /** @type {?} */ _currentAction: DebugAction;\nlet /** @type {?} */ _currentView: ViewData;\nlet /** @type {?} */ _currentNodeIndex: number;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction debugSetCurrentNode(view: ViewData, nodeIndex: number) {\n  _currentView = view;\n  _currentNodeIndex = nodeIndex;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction debugHandleEvent(view: ViewData, nodeIndex: number, eventName: string, event: any) {\n  if (view.state & ViewState.Destroyed) {\n    throw viewDestroyedError(DebugAction[_currentAction]);\n  }\n  debugSetCurrentNode(view, nodeIndex);\n  return callWithDebugContext(\n      DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n/**\n * @param {?} check\n * @param {?} view\n * @return {?}\n */\nfunction debugUpdateDirectives(check: NodeCheckFn, view: ViewData) {\n  if (view.state & ViewState.Destroyed) {\n    throw viewDestroyedError(DebugAction[_currentAction]);\n  }\n  debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n  return view.def.updateDirectives(debugCheckDirectivesFn, view);\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {...?} values\n * @return {?}\n */\nfunction debugCheckDirectivesFn(\n      view: ViewData, nodeIndex: number, argStyle: ArgumentType, ...values: any[]) {\n    const /** @type {?} */ result = debugCheckFn(check, view, nodeIndex, argStyle, values);\n    if (view.def.nodes[nodeIndex].type === NodeType.Directive) {\n      debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n    }\n    return result;\n  };\n}\n/**\n * @param {?} check\n * @param {?} view\n * @return {?}\n */\nfunction debugUpdateRenderer(check: NodeCheckFn, view: ViewData) {\n  if (view.state & ViewState.Destroyed) {\n    throw viewDestroyedError(DebugAction[_currentAction]);\n  }\n  debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n  return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {...?} values\n * @return {?}\n */\nfunction debugCheckRenderNodeFn(\n      view: ViewData, nodeIndex: number, argStyle: ArgumentType, ...values: any[]) {\n    const /** @type {?} */ result = debugCheckFn(check, view, nodeIndex, argStyle, values);\n    const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n    if (nodeDef.type === NodeType.Element || nodeDef.type === NodeType.Text) {\n      debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n    }\n    return result;\n  }\n}\n/**\n * @param {?} delegate\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {?} givenValues\n * @return {?}\n */\nfunction debugCheckFn(\n    delegate: NodeCheckFn, view: ViewData, nodeIndex: number, argStyle: ArgumentType,\n    givenValues: any[]) {\n  if (_currentAction === DebugAction.detectChanges) {\n    const /** @type {?} */ values = argStyle === ArgumentType.Dynamic ? givenValues[0] : givenValues;\n    const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n    if (nodeDef.type === NodeType.Directive || nodeDef.type === NodeType.Element) {\n      const /** @type {?} */ bindingValues: {[key: string]: string} = {};\n      for (let /** @type {?} */ i = 0; i < nodeDef.bindings.length; i++) {\n        const /** @type {?} */ binding = nodeDef.bindings[i];\n        const /** @type {?} */ value = values[i];\n        if ((binding.type === BindingType.ElementProperty ||\n             binding.type === BindingType.DirectiveProperty) &&\n            checkBinding(view, nodeDef, i, value)) {\n          bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n              normalizeDebugBindingValue(value);\n        }\n      }\n      const /** @type {?} */ elDef = nodeDef.type === NodeType.Directive ? nodeDef.parent : nodeDef;\n      const /** @type {?} */ el = asElementData(view, elDef.index).renderElement;\n      if (!elDef.element.name) {\n        // a comment.\n        view.renderer.setValue(el, `bindings=${JSON.stringify(bindingValues, null, 2)}`);\n      } else {\n        // a regular element.\n        for (let /** @type {?} */ attr in bindingValues) {\n          view.renderer.setAttribute(el, attr, bindingValues[attr]);\n        }\n      }\n    }\n  }\n  return ( /** @type {?} */((<any>delegate)))(view, nodeIndex, argStyle, ...givenValues);\n};\n/**\n * @param {?} name\n * @return {?}\n */\nfunction normalizeDebugBindingName(name: string) {\n  // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n  name = camelCaseToDashCase(name.replace(/\\$/g, '_'));\n  return `ng-reflect-${name}`;\n}\n\nconst /** @type {?} */ CAMEL_CASE_REGEXP = /([A-Z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction camelCaseToDashCase(input: string): string {\n  return input.replace(CAMEL_CASE_REGEXP, (...m: any[]) => '-' + m[1].toLowerCase());\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeDebugBindingValue(value: any): string {\n  try {\n    // Limit the size of the value as otherwise the DOM just gets polluted.\n    return value ? value.toString().slice(0, 20) : value;\n  } catch ( /** @type {?} */e) {\n    return '[ERROR] Exception while trying to serialize the value';\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextDirectiveWithBinding(view: ViewData, nodeIndex: number): number {\n  for (let /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if (nodeDef.type === NodeType.Directive && nodeDef.bindings && nodeDef.bindings.length) {\n      return i;\n    }\n  }\n  return undefined;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextRenderNodeWithBinding(view: ViewData, nodeIndex: number): number {\n  for (let /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if ((nodeDef.type === NodeType.Element || nodeDef.type === NodeType.Text) && nodeDef.bindings &&\n        nodeDef.bindings.length) {\n      return i;\n    }\n  }\n  return undefined;\n}\nclass DebugContext_ implements DebugContext {\nprivate nodeDef: NodeDef;\nprivate elView: ViewData;\nprivate elDef: NodeDef;\nprivate compProviderDef: NodeDef;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n */\nconstructor(public view: ViewData,\npublic nodeIndex: number) {\n    if (nodeIndex == null) {\n      this.nodeIndex = nodeIndex = 0;\n    }\n    this.nodeDef = view.def.nodes[nodeIndex];\n    let elDef = this.nodeDef;\n    let elView = view;\n    while (elDef && elDef.type !== NodeType.Element) {\n      elDef = elDef.parent;\n    }\n    if (!elDef) {\n      while (!elDef && elView) {\n        elDef = viewParentEl(elView);\n        elView = elView.parent;\n      }\n    }\n    this.elDef = elDef;\n    this.elView = elView;\n    this.compProviderDef = elView ? this.elDef.element.component : null;\n  }\n/**\n * @return {?}\n */\nget injector(): Injector { return createInjector(this.elView, this.elDef); }\n/**\n * @return {?}\n */\nget component(): any {\n    if (this.compProviderDef) {\n      return asProviderData(this.elView, this.compProviderDef.index).instance;\n    }\n    return this.view.component;\n  }\n/**\n * @return {?}\n */\nget context(): any {\n    if (this.compProviderDef) {\n      return asProviderData(this.elView, this.compProviderDef.index).instance;\n    }\n    return this.view.context;\n  }\n/**\n * @return {?}\n */\nget providerTokens(): any[] {\n    const /** @type {?} */ tokens: any[] = [];\n    if (this.elDef) {\n      for (let /** @type {?} */ i = this.elDef.index + 1; i <= this.elDef.index + this.elDef.childCount; i++) {\n        const /** @type {?} */ childDef = this.elView.def.nodes[i];\n        if (childDef.type === NodeType.Provider || childDef.type === NodeType.Directive) {\n          tokens.push(childDef.provider.token);\n        }\n        i += childDef.childCount;\n      }\n    }\n    return tokens;\n  }\n/**\n * @return {?}\n */\nget references(): {[key: string]: any} {\n    const /** @type {?} */ references: {[key: string]: any} = {};\n    if (this.elDef) {\n      collectReferences(this.elView, this.elDef, references);\n\n      for (let /** @type {?} */ i = this.elDef.index + 1; i <= this.elDef.index + this.elDef.childCount; i++) {\n        const /** @type {?} */ childDef = this.elView.def.nodes[i];\n        if (childDef.type === NodeType.Provider || childDef.type === NodeType.Directive) {\n          collectReferences(this.elView, childDef, references);\n        }\n        i += childDef.childCount;\n      }\n    }\n    return references;\n  }\n/**\n * @return {?}\n */\nget source(): string {\n    if (this.nodeDef.type === NodeType.Text) {\n      return this.nodeDef.text.source;\n    } else {\n      return this.elDef.element.source;\n    }\n  }\n/**\n * @return {?}\n */\nget componentRenderElement() {\n    const /** @type {?} */ view = this.compProviderDef ?\n        asProviderData(this.elView, this.compProviderDef.index).componentView :\n        this.view;\n    const /** @type {?} */ elData = findHostElement(view);\n    return elData ? elData.renderElement : undefined;\n  }\n/**\n * @return {?}\n */\nget renderNode(): any {\n    return this.nodeDef.type === NodeType.Text ? renderNode(this.view, this.nodeDef) :\n                                                 renderNode(this.elView, this.elDef);\n  }\n}\n\nfunction DebugContext__tsickle_Closure_declarations() {\n/** @type {?} */\nDebugContext_.prototype.nodeDef;\n/** @type {?} */\nDebugContext_.prototype.elView;\n/** @type {?} */\nDebugContext_.prototype.elDef;\n/** @type {?} */\nDebugContext_.prototype.compProviderDef;\n/** @type {?} */\nDebugContext_.prototype.view;\n/** @type {?} */\nDebugContext_.prototype.nodeIndex;\n}\n\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view: ViewData): ElementData {\n  while (view && !isComponentView(view)) {\n    view = view.parent;\n  }\n  if (view.parent) {\n    return asElementData(view.parent, viewParentEl(view).index);\n  }\n  return undefined;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view: ViewData, nodeDef: NodeDef, references: {[key: string]: any}) {\n  for (let /** @type {?} */ refName in nodeDef.references) {\n    references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n  }\n}\n/**\n * @param {?} action\n * @param {?} fn\n * @param {?} self\n * @param {?} args\n * @return {?}\n */\nfunction callWithDebugContext(action: DebugAction, fn: any, self: any, args: any[]) {\n  const /** @type {?} */ oldAction = _currentAction;\n  const /** @type {?} */ oldView = _currentView;\n  const /** @type {?} */ oldNodeIndex = _currentNodeIndex;\n  try {\n    _currentAction = action;\n    const /** @type {?} */ result = fn.apply(self, args);\n    _currentView = oldView;\n    _currentNodeIndex = oldNodeIndex;\n    _currentAction = oldAction;\n    return result;\n  } catch ( /** @type {?} */e) {\n    if (isViewDebugError(e) || !_currentView) {\n      throw e;\n    }\n    _currentView.state |= ViewState.Errored;\n    throw viewWrappedDebugError(e, getCurrentDebugContext());\n  }\n}\n/**\n * @return {?}\n */\nexport function getCurrentDebugContext(): DebugContext {\n  return new DebugContext_(_currentView, _currentNodeIndex);\n}\nclass DebugRendererFactoryV2 implements RendererFactoryV2 {\n/**\n * @param {?} delegate\n */\nconstructor(private delegate: RendererFactoryV2) {}\n/**\n * @param {?} element\n * @param {?} renderData\n * @return {?}\n */\ncreateRenderer(element: any, renderData: RendererTypeV2): RendererV2 {\n    return new DebugRendererV2(this.delegate.createRenderer(element, renderData));\n  }\n}\n\nfunction DebugRendererFactoryV2_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugRendererFactoryV2.prototype.delegate;\n}\n\nclass DebugRendererV2 implements RendererV2 {\n/**\n * @param {?} delegate\n */\nconstructor(private delegate: RendererV2) {}\n/**\n * @param {?} node\n * @return {?}\n */\ndestroyNode(node: any) {\n    removeDebugNodeFromIndex(getDebugNode(node));\n    if (this.delegate.destroyNode) {\n      this.delegate.destroyNode(node);\n    }\n  }\n/**\n * @return {?}\n */\ndestroy() { this.delegate.destroy(); }\n/**\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\ncreateElement(name: string, namespace?: string): any {\n    const /** @type {?} */ el = this.delegate.createElement(name, namespace);\n    const /** @type {?} */ debugEl = new DebugElement(el, null, getCurrentDebugContext());\n    debugEl.name = name;\n    indexDebugNode(debugEl);\n    return el;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\ncreateComment(value: string): any {\n    const /** @type {?} */ comment = this.delegate.createComment(value);\n    const /** @type {?} */ debugEl = new DebugNode(comment, null, getCurrentDebugContext());\n    indexDebugNode(debugEl);\n    return comment;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\ncreateText(value: string): any {\n    const /** @type {?} */ text = this.delegate.createText(value);\n    const /** @type {?} */ debugEl = new DebugNode(text, null, getCurrentDebugContext());\n    indexDebugNode(debugEl);\n    return text;\n  }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @return {?}\n */\nappendChild(parent: any, newChild: any): void {\n    const /** @type {?} */ debugEl = getDebugNode(parent);\n    const /** @type {?} */ debugChildEl = getDebugNode(newChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.addChild(debugChildEl);\n    }\n    this.delegate.appendChild(parent, newChild);\n  }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @param {?} refChild\n * @return {?}\n */\ninsertBefore(parent: any, newChild: any, refChild: any): void {\n    const /** @type {?} */ debugEl = getDebugNode(parent);\n    const /** @type {?} */ debugChildEl = getDebugNode(newChild);\n    const /** @type {?} */ debugRefEl = getDebugNode(refChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.insertBefore(debugRefEl, debugChildEl);\n    }\n\n    this.delegate.insertBefore(parent, newChild, refChild);\n  }\n/**\n * @param {?} parent\n * @param {?} oldChild\n * @return {?}\n */\nremoveChild(parent: any, oldChild: any): void {\n    const /** @type {?} */ debugEl = getDebugNode(parent);\n    const /** @type {?} */ debugChildEl = getDebugNode(oldChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.removeChild(debugChildEl);\n    }\n    this.delegate.removeChild(parent, oldChild);\n  }\n/**\n * @param {?} selectorOrNode\n * @return {?}\n */\nselectRootElement(selectorOrNode: string|any): any {\n    const /** @type {?} */ el = this.delegate.selectRootElement(selectorOrNode);\n    const /** @type {?} */ debugEl = new DebugElement(el, null, getCurrentDebugContext());\n    indexDebugNode(debugEl);\n    return el;\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @param {?=} namespace\n * @return {?}\n */\nsetAttribute(el: any, name: string, value: string, namespace?: string): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      const /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n      debugEl.attributes[fullName] = value;\n    }\n    this.delegate.setAttribute(el, name, value, namespace);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\nremoveAttribute(el: any, name: string, namespace?: string): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      const /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n      debugEl.attributes[fullName] = null;\n    }\n    this.delegate.removeAttribute(el, name, namespace);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\naddClass(el: any, name: string): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.classes[name] = true;\n    }\n    this.delegate.addClass(el, name);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\nremoveClass(el: any, name: string): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.classes[name] = false;\n    }\n    this.delegate.removeClass(el, name);\n  }\n/**\n * @param {?} el\n * @param {?} style\n * @param {?} value\n * @param {?} hasVendorPrefix\n * @param {?} hasImportant\n * @return {?}\n */\nsetStyle(el: any, style: string, value: any, hasVendorPrefix: boolean, hasImportant: boolean):\n      void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.styles[style] = value;\n    }\n    this.delegate.setStyle(el, style, value, hasVendorPrefix, hasImportant);\n  }\n/**\n * @param {?} el\n * @param {?} style\n * @param {?} hasVendorPrefix\n * @return {?}\n */\nremoveStyle(el: any, style: string, hasVendorPrefix: boolean): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.styles[style] = null;\n    }\n    this.delegate.removeStyle(el, style, hasVendorPrefix);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetProperty(el: any, name: string, value: any): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.properties[name] = value;\n    }\n    this.delegate.setProperty(el, name, value);\n  }\n/**\n * @param {?} target\n * @param {?} eventName\n * @param {?} callback\n * @return {?}\n */\nlisten(\n      target: 'document'|'windows'|'body'|any, eventName: string,\n      callback: (event: any) => boolean): () => void {\n    if (typeof target !== 'string') {\n      const /** @type {?} */ debugEl = getDebugNode(target);\n      if (debugEl) {\n        debugEl.listeners.push(new EventListener(eventName, callback));\n      }\n    }\n\n    return this.delegate.listen(target, eventName, callback);\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nparentNode(node: any): any { return this.delegate.parentNode(node); }\n/**\n * @param {?} node\n * @return {?}\n */\nnextSibling(node: any): any { return this.delegate.nextSibling(node); }\n/**\n * @param {?} node\n * @param {?} value\n * @return {?}\n */\nsetValue(node: any, value: string): void { return this.delegate.setValue(node, value); }\n}\n\nfunction DebugRendererV2_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugRendererV2.prototype.delegate;\n}\n\n"]}