{"version":3,"sources":["../../../../../modules/@angular/core/src/view/view.ts"],"names":[],"mappings":"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","file":"view.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ViewEncapsulation} from '../metadata/view';\nimport {RendererTypeV2, RendererV2} from '../render/api';\n\nimport {checkAndUpdateElementDynamic, checkAndUpdateElementInline, createElement} from './element';\nimport {expressionChangedAfterItHasBeenCheckedError} from './errors';\nimport {appendNgContent} from './ng_content';\nimport {callLifecycleHooksChildrenFirst, checkAndUpdateDirectiveDynamic, checkAndUpdateDirectiveInline, createDirectiveInstance, createPipeInstance, createProviderInstance} from './provider';\nimport {checkAndUpdatePureExpressionDynamic, checkAndUpdatePureExpressionInline, createPureExpression} from './pure_expression';\nimport {checkAndUpdateQuery, createQuery, queryDef} from './query';\nimport {checkAndUpdateTextDynamic, checkAndUpdateTextInline, createText} from './text';\nimport {ArgumentType, ElementDef, NodeData, NodeDef, NodeFlags, NodeType, ProviderData, ProviderDef, RootData, Services, TextDef, ViewData, ViewDefinition, ViewDefinitionFactory, ViewFlags, ViewHandleEventFn, ViewState, ViewUpdateFn, asElementData, asProviderData, asPureExpressionData, asQueryList, asTextData} from './types';\nimport {checkBindingNoChanges, isComponentView, resolveViewDefinition, viewParentEl} from './util';\n\nconst /** @type {?} */ NOOP = (): any => undefined;\n/**\n * @param {?} flags\n * @param {?} nodes\n * @param {?=} updateDirectives\n * @param {?=} updateRenderer\n * @param {?=} handleEvent\n * @return {?}\n */\nexport function viewDef(\n    flags: ViewFlags, nodes: NodeDef[], updateDirectives?: ViewUpdateFn,\n    updateRenderer?: ViewUpdateFn, handleEvent?: ViewHandleEventFn): ViewDefinition {\n  // clone nodes and set auto calculated values\n  if (nodes.length === 0) {\n    throw new Error(`Illegal State: Views without nodes are not allowed!`);\n  }\n\n  const /** @type {?} */ reverseChildNodes: NodeDef[] = new Array(nodes.length);\n  let /** @type {?} */ viewBindingCount = 0;\n  let /** @type {?} */ viewDisposableCount = 0;\n  let /** @type {?} */ viewNodeFlags = 0;\n  let /** @type {?} */ viewMatchedQueries = 0;\n  let /** @type {?} */ currentParent: NodeDef = null;\n  let /** @type {?} */ currentElementHasPublicProviders = false;\n  let /** @type {?} */ currentElementHasPrivateProviders = false;\n  let /** @type {?} */ lastRootNode: NodeDef = null;\n  for (let /** @type {?} */ i = 0; i < nodes.length; i++) {\n    while (currentParent && i > currentParent.index + currentParent.childCount) {\n      const /** @type {?} */ newParent = currentParent.parent;\n      if (newParent) {\n        newParent.childFlags |= currentParent.childFlags;\n        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n      }\n      currentParent = newParent;\n    }\n    const /** @type {?} */ node = nodes[i];\n    node.index = i;\n    node.parent = currentParent;\n    node.bindingIndex = viewBindingCount;\n    node.disposableIndex = viewDisposableCount;\n    node.reverseChildIndex =\n        calculateReverseChildIndex(currentParent, i, node.childCount, nodes.length);\n\n    // renderParent needs to account for ng-container!\n    let /** @type {?} */ currentRenderParent: NodeDef;\n    if (currentParent && currentParent.type === NodeType.Element && !currentParent.element.name) {\n      currentRenderParent = currentParent.renderParent;\n    } else {\n      currentRenderParent = currentParent;\n    }\n    node.renderParent = currentRenderParent;\n\n    if (node.element) {\n      const /** @type {?} */ elDef = node.element;\n      elDef.publicProviders =\n          currentParent ? currentParent.element.publicProviders : Object.create(null);\n      elDef.allProviders = elDef.publicProviders;\n      // Note: We assume that all providers of an element are before any child element!\n      currentElementHasPublicProviders = false;\n      currentElementHasPrivateProviders = false;\n    }\n    reverseChildNodes[node.reverseChildIndex] = node;\n    validateNode(currentParent, node, nodes.length);\n\n    viewNodeFlags |= node.flags;\n    viewMatchedQueries |= node.matchedQueryIds;\n    if (node.element && node.element.template) {\n      viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n    }\n    if (currentParent) {\n      currentParent.childFlags |= node.flags;\n      currentParent.childMatchedQueries |= node.matchedQueryIds;\n      if (node.element && node.element.template) {\n        currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n      }\n    }\n\n    viewBindingCount += node.bindings.length;\n    viewDisposableCount += node.disposableCount;\n\n    if (!currentRenderParent) {\n      lastRootNode = node;\n    }\n    if (node.type === NodeType.Provider || node.type === NodeType.Directive) {\n      if (!currentElementHasPublicProviders) {\n        currentElementHasPublicProviders = true;\n        // Use protoypical inheritance to not get O(n^2) complexity...\n        currentParent.element.publicProviders =\n            Object.create(currentParent.element.publicProviders);\n        currentParent.element.allProviders = currentParent.element.publicProviders;\n      }\n      const /** @type {?} */ isPrivateService = (node.flags & NodeFlags.PrivateProvider) !== 0;\n      const /** @type {?} */ isComponent = (node.flags & NodeFlags.HasComponent) !== 0;\n      if (!isPrivateService || isComponent) {\n        currentParent.element.publicProviders[node.provider.tokenKey] = node;\n      } else {\n        if (!currentElementHasPrivateProviders) {\n          currentElementHasPrivateProviders = true;\n          // Use protoypical inheritance to not get O(n^2) complexity...\n          currentParent.element.allProviders = Object.create(currentParent.element.publicProviders);\n        }\n        currentParent.element.allProviders[node.provider.tokenKey] = node;\n      }\n      if (isComponent) {\n        currentParent.element.component = node;\n      }\n    }\n    if (node.childCount) {\n      currentParent = node;\n    }\n  }\n  while (currentParent) {\n    const /** @type {?} */ newParent = currentParent.parent;\n    if (newParent) {\n      newParent.childFlags |= currentParent.childFlags;\n      newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n    }\n    currentParent = newParent;\n  }\n  return {\n    nodeFlags: viewNodeFlags,\n    nodeMatchedQueries: viewMatchedQueries, flags,\n    nodes: nodes, reverseChildNodes,\n    updateDirectives: updateDirectives || NOOP,\n    updateRenderer: updateRenderer || NOOP,\n    handleEvent: handleEvent || NOOP,\n    bindingCount: viewBindingCount,\n    disposableCount: viewDisposableCount, lastRootNode\n  };\n}\n/**\n * @param {?} currentParent\n * @param {?} i\n * @param {?} childCount\n * @param {?} nodeCount\n * @return {?}\n */\nfunction calculateReverseChildIndex(\n    currentParent: NodeDef, i: number, childCount: number, nodeCount: number) {\n  // Notes about reverse child order:\n  // - Every node is directly before its children, in dfs and reverse child order.\n  // - node.childCount contains all children, in dfs and reverse child order.\n  // - In dfs order, every node is before its first child\n  // - In reverse child order, every node is before its last child\n\n  // Algorithm, main idea:\n  // - In reverse child order, the ranges for each child + its transitive children are mirrored\n  //   regarding their position inside of their parent\n\n  // Visualization:\n  // Given the following tree:\n  // Nodes: n0\n  //             n1         n2\n  //                n11 n12    n21 n22\n  // dfs:    0   1   2   3  4   5   6\n  // result: 0   4   6   5  1   3   2\n  //\n  // Example:\n  // Current node = 1\n  // 1) lastChildIndex = 3\n  // 2) lastChildOffsetRelativeToParentInDfsOrder = 2\n  // 3) parentEndIndexInReverseChildOrder = 6\n  // 4) result = 4\n  let /** @type {?} */ lastChildOffsetRelativeToParentInDfsOrder: number;\n  let /** @type {?} */ parentEndIndexInReverseChildOrder: number;\n  if (currentParent) {\n    const /** @type {?} */ lastChildIndex = i + childCount;\n    lastChildOffsetRelativeToParentInDfsOrder = lastChildIndex - currentParent.index - 1;\n    parentEndIndexInReverseChildOrder = currentParent.reverseChildIndex + currentParent.childCount;\n  } else {\n    lastChildOffsetRelativeToParentInDfsOrder = i + childCount;\n    parentEndIndexInReverseChildOrder = nodeCount - 1;\n  }\n  return parentEndIndexInReverseChildOrder - lastChildOffsetRelativeToParentInDfsOrder;\n}\n/**\n * @param {?} parent\n * @param {?} node\n * @param {?} nodeCount\n * @return {?}\n */\nfunction validateNode(parent: NodeDef, node: NodeDef, nodeCount: number) {\n  const /** @type {?} */ template = node.element && node.element.template;\n  if (template) {\n    if (template.lastRootNode && template.lastRootNode.flags & NodeFlags.HasEmbeddedViews) {\n      throw new Error(\n          `Illegal State: Last root node of a template can't have embedded views, at index ${node.index}!`);\n    }\n  }\n  if (node.type === NodeType.Provider || node.type === NodeType.Directive) {\n    const /** @type {?} */ parentType = parent ? parent.type : null;\n    if (parentType !== NodeType.Element) {\n      throw new Error(\n          `Illegal State: Provider/Directive nodes need to be children of elements or anchors, at index ${node.index}!`);\n    }\n  }\n  if (node.query) {\n    if (node.flags & NodeFlags.HasContentQuery && (!parent || parent.type !== NodeType.Directive)) {\n      throw new Error(\n          `Illegal State: Content Query nodes need to be children of directives, at index ${node.index}!`);\n    }\n    if (node.flags & NodeFlags.HasViewQuery && parent) {\n      throw new Error(\n          `Illegal State: View Query nodes have to be top level nodes, at index ${node.index}!`);\n    }\n  }\n  if (node.childCount) {\n    const /** @type {?} */ parentEnd = parent ? parent.index + parent.childCount : nodeCount - 1;\n    if (node.index <= parentEnd && node.index + node.childCount > parentEnd) {\n      throw new Error(\n          `Illegal State: childCount of node leads outside of parent, at index ${node.index}!`);\n    }\n  }\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?=} context\n * @return {?}\n */\nexport function createEmbeddedView(parent: ViewData, anchorDef: NodeDef, context?: any): ViewData {\n  // embedded views are seen as siblings to the anchor, so we need\n  // to get the parent of the anchor and use it as parentIndex.\n  const /** @type {?} */ view =\n      createView(parent.root, parent.renderer, parent, anchorDef, anchorDef.element.template);\n  initView(view, parent.component, context);\n  createViewNodes(view);\n  return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nexport function createRootView(root: RootData, def: ViewDefinition, context?: any): ViewData {\n  const /** @type {?} */ view = createView(root, root.renderer, null, null, def);\n  initView(view, context, context);\n  createViewNodes(view);\n  return view;\n}\n/**\n * @param {?} root\n * @param {?} renderer\n * @param {?} parent\n * @param {?} parentNodeDef\n * @param {?} def\n * @return {?}\n */\nfunction createView(\n    root: RootData, renderer: RendererV2, parent: ViewData, parentNodeDef: NodeDef,\n    def: ViewDefinition): ViewData {\n  const /** @type {?} */ nodes: NodeData[] = new Array(def.nodes.length);\n  const /** @type {?} */ disposables = def.disposableCount ? new Array(def.disposableCount) : undefined;\n  const /** @type {?} */ view: ViewData = {\n    def,\n    parent,\n    parentNodeDef,\n    context: undefined,\n    component: undefined, nodes,\n    state: ViewState.FirstCheck | ViewState.ChecksEnabled, root, renderer,\n    oldValues: new Array(def.bindingCount), disposables\n  };\n  return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view: ViewData, component: any, context: any) {\n  view.component = component;\n  view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view: ViewData) {\n  let /** @type {?} */ renderHost: any;\n  if (isComponentView(view)) {\n    const /** @type {?} */ hostDef = view.parentNodeDef;\n    renderHost = asElementData(view.parent, hostDef.parent.index).renderElement;\n  }\n  const /** @type {?} */ def = view.def;\n  const /** @type {?} */ nodes = view.nodes;\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    Services.setCurrentNode(view, i);\n    switch (nodeDef.type) {\n      case NodeType.Element:\n        nodes[i] = /** @type {?} */(( createElement(view, renderHost, nodeDef) as any));\n        break;\n      case NodeType.Text:\n        nodes[i] = /** @type {?} */(( createText(view, renderHost, nodeDef) as any));\n        break;\n      case NodeType.Provider: {\n        const /** @type {?} */ instance = createProviderInstance(view, nodeDef);\n        const /** @type {?} */ providerData = /** @type {?} */(( <ProviderData>{componentView: undefined, instance}));\n        nodes[i] = /** @type {?} */(( providerData as any));\n        break;\n      }\n      case NodeType.Pipe: {\n        const /** @type {?} */ instance = createPipeInstance(view, nodeDef);\n        const /** @type {?} */ providerData = /** @type {?} */(( <ProviderData>{componentView: undefined, instance}));\n        nodes[i] = /** @type {?} */(( providerData as any));\n        break;\n      }\n      case NodeType.Directive: {\n        if (nodeDef.flags & NodeFlags.HasComponent) {\n          // Components can inject a ChangeDetectorRef that needs a references to\n          // the component view. Therefore, we create the component view first\n          // and set the ProviderData in ViewData, and then instantiate the provider.\n          const /** @type {?} */ compViewDef = resolveViewDefinition(nodeDef.provider.component);\n          const /** @type {?} */ rendererType = nodeDef.provider.rendererType;\n          let /** @type {?} */ compRenderer: RendererV2;\n          if (!rendererType) {\n            compRenderer = view.root.renderer;\n          } else {\n            const /** @type {?} */ hostEl = asElementData(view, nodeDef.parent.index).renderElement;\n            compRenderer = view.root.rendererFactory.createRenderer(hostEl, rendererType);\n          }\n          const /** @type {?} */ componentView = createView(view.root, compRenderer, view, nodeDef, compViewDef);\n          const /** @type {?} */ providerData = /** @type {?} */(( <ProviderData>{componentView, instance: undefined}));\n          nodes[i] = /** @type {?} */(( providerData as any));\n          const /** @type {?} */ instance = providerData.instance = createDirectiveInstance(view, nodeDef);\n          initView(componentView, instance, instance);\n        } else {\n          const /** @type {?} */ instance = createDirectiveInstance(view, nodeDef);\n          const /** @type {?} */ providerData = /** @type {?} */(( <ProviderData>{componentView: undefined, instance}));\n          nodes[i] = /** @type {?} */(( providerData as any));\n        }\n        break;\n      }\n      case NodeType.PureExpression:\n        nodes[i] = /** @type {?} */(( createPureExpression(view, nodeDef) as any));\n        break;\n      case NodeType.Query:\n        nodes[i] = /** @type {?} */(( createQuery() as any));\n        break;\n      case NodeType.NgContent:\n        appendNgContent(view, renderHost, nodeDef);\n        // no runtime data needed for NgContent...\n        nodes[i] = undefined;\n        break;\n    }\n  }\n  // Create the ViewData.nodes of component views after we created everything else,\n  // so that e.g. ng-content works\n  execComponentViewsAction(view, ViewAction.CreateViewNodes);\n\n  // fill static content and view queries\n  execQueriesAction(\n      view, NodeFlags.HasContentQuery | NodeFlags.HasViewQuery, NodeFlags.HasStaticQuery,\n      QueryAction.CheckAndUpdate);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function checkNoChangesView(view: ViewData) {\n  Services.updateDirectives(checkNoChangesNode, view);\n  execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n  execQueriesAction(\n      view, NodeFlags.HasContentQuery, NodeFlags.HasDynamicQuery, QueryAction.CheckNoChanges);\n  Services.updateRenderer(checkNoChangesNode, view);\n  execComponentViewsAction(view, ViewAction.CheckNoChanges);\n  execQueriesAction(\n      view, NodeFlags.HasViewQuery, NodeFlags.HasDynamicQuery, QueryAction.CheckNoChanges);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function checkAndUpdateView(view: ViewData) {\n  Services.updateDirectives(checkAndUpdateNode, view);\n  execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(\n      view, NodeFlags.HasContentQuery, NodeFlags.HasDynamicQuery, QueryAction.CheckAndUpdate);\n\n  callLifecycleHooksChildrenFirst(\n      view, NodeFlags.AfterContentChecked |\n          (view.state & ViewState.FirstCheck ? NodeFlags.AfterContentInit : 0));\n\n  Services.updateRenderer(checkAndUpdateNode, view);\n\n  execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(\n      view, NodeFlags.HasViewQuery, NodeFlags.HasDynamicQuery, QueryAction.CheckAndUpdate);\n\n  callLifecycleHooksChildrenFirst(\n      view, NodeFlags.AfterViewChecked |\n          (view.state & ViewState.FirstCheck ? NodeFlags.AfterViewInit : 0));\n\n  if (view.def.flags & ViewFlags.OnPush) {\n    view.state &= ~ViewState.ChecksEnabled;\n  }\n  view.state &= ~ViewState.FirstCheck;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNode(\n    view: ViewData, nodeIndex: number, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  if (argStyle === ArgumentType.Inline) {\n    return checkAndUpdateNodeInline(view, nodeIndex, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  } else {\n    return checkAndUpdateNodeDynamic(view, nodeIndex, v0);\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(\n    view: ViewData, nodeIndex: number, v0?: any, v1?: any, v2?: any, v3?: any, v4?: any, v5?: any,\n    v6?: any, v7?: any, v8?: any, v9?: any): any {\n  const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n  switch (nodeDef.type) {\n    case NodeType.Element:\n      return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    case NodeType.Text:\n      return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    case NodeType.Directive:\n      return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    case NodeType.PureExpression:\n      return checkAndUpdatePureExpressionInline(\n          view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view: ViewData, nodeIndex: number, values: any[]): any {\n  const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n  switch (nodeDef.type) {\n    case NodeType.Element:\n      return checkAndUpdateElementDynamic(view, nodeDef, values);\n    case NodeType.Text:\n      return checkAndUpdateTextDynamic(view, nodeDef, values);\n    case NodeType.Directive:\n      return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n    case NodeType.PureExpression:\n      return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkNoChangesNode(\n    view: ViewData, nodeIndex: number, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  if (argStyle === ArgumentType.Inline) {\n    return checkNoChangesNodeInline(view, nodeIndex, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  } else {\n    return checkNoChangesNodeDynamic(view, nodeIndex, v0);\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(\n    view: ViewData, nodeIndex: number, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any,\n    v6: any, v7: any, v8: any, v9: any): void {\n  const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n  // Note: fallthrough is intended!\n  switch (nodeDef.bindings.length) {\n    case 10:\n      checkBindingNoChanges(view, nodeDef, 9, v9);\n    case 9:\n      checkBindingNoChanges(view, nodeDef, 8, v8);\n    case 8:\n      checkBindingNoChanges(view, nodeDef, 7, v7);\n    case 7:\n      checkBindingNoChanges(view, nodeDef, 6, v6);\n    case 6:\n      checkBindingNoChanges(view, nodeDef, 5, v5);\n    case 5:\n      checkBindingNoChanges(view, nodeDef, 4, v4);\n    case 4:\n      checkBindingNoChanges(view, nodeDef, 3, v3);\n    case 3:\n      checkBindingNoChanges(view, nodeDef, 2, v2);\n    case 2:\n      checkBindingNoChanges(view, nodeDef, 1, v1);\n    case 1:\n      checkBindingNoChanges(view, nodeDef, 0, v0);\n  }\n  return nodeDef.type === NodeType.PureExpression ? asPureExpressionData(view, nodeIndex).value :\n                                                    undefined;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view: ViewData, nodeIndex: number, values: any[]): void {\n  const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    checkBindingNoChanges(view, nodeDef, i, values[i]);\n  }\n  return nodeDef.type === NodeType.PureExpression ? asPureExpressionData(view, nodeIndex).value :\n                                                    undefined;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view: ViewData, nodeDef: NodeDef) {\n  const /** @type {?} */ queryList = asQueryList(view, nodeDef.index);\n  if (queryList.dirty) {\n    throw expressionChangedAfterItHasBeenCheckedError(\n        Services.createDebugContext(view, nodeDef.index), `Query ${nodeDef.query.id} not dirty`,\n        `Query ${nodeDef.query.id} dirty`, (view.state & ViewState.FirstCheck) !== 0);\n  }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function destroyView(view: ViewData) {\n  execEmbeddedViewsAction(view, ViewAction.Destroy);\n  execComponentViewsAction(view, ViewAction.Destroy);\n  callLifecycleHooksChildrenFirst(view, NodeFlags.OnDestroy);\n  if (view.disposables) {\n    for (let /** @type {?} */ i = 0; i < view.disposables.length; i++) {\n      view.disposables[i]();\n    }\n  }\n  if (view.renderer.destroyNode) {\n    destroyViewNodes(view);\n  }\n  if (view.parentNodeDef && view.parentNodeDef.flags & NodeFlags.HasComponent) {\n    view.renderer.destroy();\n  }\n  view.state |= ViewState.Destroyed;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyViewNodes(view: ViewData) {\n  const /** @type {?} */ len = view.def.nodes.length;\n  for (let /** @type {?} */ i = 0; i < len; i++) {\n    const /** @type {?} */ def = view.def.nodes[i];\n    if (def.type === NodeType.Element) {\n      view.renderer.destroyNode(asElementData(view, i).renderElement);\n    } else if (def.type === NodeType.Text) {\n      view.renderer.destroyNode(asTextData(view, i).renderText);\n    }\n  }\n}\ntype ViewAction = number;\nlet ViewAction: any = {};\nViewAction.CreateViewNodes = 0;\nViewAction.CheckNoChanges = 1;\nViewAction.CheckAndUpdate = 2;\nViewAction.Destroy = 3;\nViewAction[ViewAction.CreateViewNodes] = \"CreateViewNodes\";\nViewAction[ViewAction.CheckNoChanges] = \"CheckNoChanges\";\nViewAction[ViewAction.CheckAndUpdate] = \"CheckAndUpdate\";\nViewAction[ViewAction.Destroy] = \"Destroy\";\n\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view: ViewData, action: ViewAction) {\n  const /** @type {?} */ def = view.def;\n  if (!(def.nodeFlags & NodeFlags.HasComponent)) {\n    return;\n  }\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.HasComponent) {\n      // a leaf\n      const /** @type {?} */ providerData = asProviderData(view, i);\n      callViewAction(providerData.componentView, action);\n    } else if ((nodeDef.childFlags & NodeFlags.HasComponent) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view: ViewData, action: ViewAction) {\n  const /** @type {?} */ def = view.def;\n  if (!(def.nodeFlags & NodeFlags.HasEmbeddedViews)) {\n    return;\n  }\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.HasEmbeddedViews) {\n      // a leaf\n      const /** @type {?} */ embeddedViews = asElementData(view, i).embeddedViews;\n      if (embeddedViews) {\n        for (let /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n          callViewAction(embeddedViews[k], action);\n        }\n      }\n    } else if ((nodeDef.childFlags & NodeFlags.HasEmbeddedViews) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view: ViewData, action: ViewAction) {\n  const /** @type {?} */ viewState = view.state;\n  switch (action) {\n    case ViewAction.CheckNoChanges:\n      if ((viewState & ViewState.ChecksEnabled) &&\n          (viewState & (ViewState.Errored | ViewState.Destroyed)) === 0) {\n        checkNoChangesView(view);\n      }\n      break;\n    case ViewAction.CheckAndUpdate:\n      if ((viewState & ViewState.ChecksEnabled) &&\n          (viewState & (ViewState.Errored | ViewState.Destroyed)) === 0) {\n        checkAndUpdateView(view);\n      }\n      break;\n    case ViewAction.Destroy:\n      destroyView(view);\n      break;\n    case ViewAction.CreateViewNodes:\n      createViewNodes(view);\n      break;\n  }\n}\ntype QueryAction = number;\nlet QueryAction: any = {};\nQueryAction.CheckAndUpdate = 0;\nQueryAction.CheckNoChanges = 1;\nQueryAction[QueryAction.CheckAndUpdate] = \"CheckAndUpdate\";\nQueryAction[QueryAction.CheckNoChanges] = \"CheckNoChanges\";\n\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} staticDynamicQueryFlag\n * @param {?} action\n * @return {?}\n */\nfunction execQueriesAction(\n    view: ViewData, queryFlags: NodeFlags, staticDynamicQueryFlag: NodeFlags, action: QueryAction) {\n  if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n    return;\n  }\n  const /** @type {?} */ nodeCount = view.def.nodes.length;\n  for (let /** @type {?} */ i = 0; i < nodeCount; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n      Services.setCurrentNode(view, nodeDef.index);\n      switch (action) {\n        case QueryAction.CheckAndUpdate:\n          checkAndUpdateQuery(view, nodeDef);\n          break;\n        case QueryAction.CheckNoChanges:\n          checkNoChangesQuery(view, nodeDef);\n          break;\n      }\n    }\n    if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n      // no child has a matching query\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n"]}