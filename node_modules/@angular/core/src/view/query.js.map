{"version":3,"sources":["../../../../../modules/@angular/core/src/view/query.ts"],"names":[],"mappings":"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","file":"query.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementRef} from '../linker/element_ref';\nimport {QueryList} from '../linker/query_list';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\n\nimport {createTemplateRef, createViewContainerRef} from './refs';\nimport {NodeDef, NodeFlags, NodeType, QueryBindingDef, QueryBindingType, QueryDef, QueryValueType, Services, ViewData, asElementData, asProviderData, asQueryList} from './types';\nimport {declaredViewContainer, filterQueryId, isEmbeddedView, viewParentEl} from './util';\n/**\n * @param {?} flags\n * @param {?} id\n * @param {?} bindings\n * @return {?}\n */\nexport function queryDef(\n    flags: NodeFlags, id: number, bindings: {[propName: string]: QueryBindingType}): NodeDef {\n  let /** @type {?} */ bindingDefs: QueryBindingDef[] = [];\n  for (let /** @type {?} */ propName in bindings) {\n    const /** @type {?} */ bindingType = bindings[propName];\n    bindingDefs.push({propName, bindingType});\n  }\n\n  return {\n    type: NodeType.Query,\n    // will bet set by the view definition\n    index: undefined,\n    reverseChildIndex: undefined,\n    parent: undefined,\n    renderParent: undefined,\n    bindingIndex: undefined,\n    disposableIndex: undefined,\n    // regular values\n    flags,\n    childFlags: 0,\n    childMatchedQueries: 0,\n    ngContentIndex: undefined,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {},\n    childCount: 0,\n    bindings: [],\n    disposableCount: 0,\n    element: undefined,\n    provider: undefined,\n    text: undefined,\n    pureExpression: undefined,\n    query: {id, filterId: filterQueryId(id), bindings: bindingDefs},\n    ngContent: undefined\n  };\n}\n/**\n * @return {?}\n */\nexport function createQuery(): QueryList<any> {\n  return new QueryList();\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function dirtyParentQueries(view: ViewData) {\n  const /** @type {?} */ queryIds = view.def.nodeMatchedQueries;\n  while (view.parent && isEmbeddedView(view)) {\n    let /** @type {?} */ tplDef = view.parentNodeDef;\n    view = view.parent;\n    // content queries\n    const /** @type {?} */ end = tplDef.index + tplDef.childCount;\n    for (let /** @type {?} */ i = 0; i <= end; i++) {\n      const /** @type {?} */ nodeDef = view.def.nodes[i];\n      if ((nodeDef.flags & NodeFlags.HasContentQuery) &&\n          (nodeDef.flags & NodeFlags.HasDynamicQuery) &&\n          (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n        asQueryList(view, i).setDirty();\n      }\n      if ((nodeDef.type === NodeType.Element && i + nodeDef.childCount < tplDef.index) ||\n          !(nodeDef.childFlags & NodeFlags.HasContentQuery) ||\n          !(nodeDef.childFlags & NodeFlags.HasDynamicQuery)) {\n        // skip elements that don't contain the template element or no query.\n        i += nodeDef.childCount;\n      }\n    }\n  }\n\n  // view queries\n  if (view.def.nodeFlags & NodeFlags.HasViewQuery) {\n    for (let /** @type {?} */ i = 0; i < view.def.nodes.length; i++) {\n      const /** @type {?} */ nodeDef = view.def.nodes[i];\n      if ((nodeDef.flags & NodeFlags.HasViewQuery) && (nodeDef.flags & NodeFlags.HasDynamicQuery)) {\n        asQueryList(view, i).setDirty();\n      }\n      // only visit the root nodes\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nexport function checkAndUpdateQuery(view: ViewData, nodeDef: NodeDef) {\n  const /** @type {?} */ queryList = asQueryList(view, nodeDef.index);\n  if (!queryList.dirty) {\n    return;\n  }\n  let /** @type {?} */ directiveInstance: any;\n  let /** @type {?} */ newValues: any[];\n  if (nodeDef.flags & NodeFlags.HasContentQuery) {\n    const /** @type {?} */ elementDef = nodeDef.parent.parent;\n    newValues = calcQueryValues(\n        view, elementDef.index, elementDef.index + elementDef.childCount, nodeDef.query, []);\n    directiveInstance = asProviderData(view, nodeDef.parent.index).instance;\n  } else if (nodeDef.flags & NodeFlags.HasViewQuery) {\n    newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n    directiveInstance = view.component;\n  }\n  queryList.reset(newValues);\n  const /** @type {?} */ bindings = nodeDef.query.bindings;\n  let /** @type {?} */ notify = false;\n  for (let /** @type {?} */ i = 0; i < bindings.length; i++) {\n    const /** @type {?} */ binding = bindings[i];\n    let /** @type {?} */ boundValue: any;\n    switch (binding.bindingType) {\n      case QueryBindingType.First:\n        boundValue = queryList.first;\n        break;\n      case QueryBindingType.All:\n        boundValue = queryList;\n        notify = true;\n        break;\n    }\n    directiveInstance[binding.propName] = boundValue;\n  }\n  if (notify) {\n    queryList.notifyOnChanges();\n  }\n}\n/**\n * @param {?} view\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} queryDef\n * @param {?} values\n * @return {?}\n */\nfunction calcQueryValues(\n    view: ViewData, startIndex: number, endIndex: number, queryDef: QueryDef,\n    values: any[]): any[] {\n  for (let /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    const /** @type {?} */ valueType = nodeDef.matchedQueries[queryDef.id];\n    if (valueType != null) {\n      values.push(getQueryValue(view, nodeDef, valueType));\n    }\n    if (nodeDef.type === NodeType.Element && nodeDef.element.template &&\n        (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n      // check embedded views that were attached at the place of their template.\n      const /** @type {?} */ elementData = asElementData(view, i);\n      const /** @type {?} */ embeddedViews = elementData.embeddedViews;\n      if (embeddedViews) {\n        for (let /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n          const /** @type {?} */ embeddedView = embeddedViews[k];\n          const /** @type {?} */ dvc = declaredViewContainer(embeddedView);\n          if (dvc && dvc === elementData) {\n            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n          }\n        }\n      }\n      const /** @type {?} */ projectedViews = elementData.projectedViews;\n      if (projectedViews) {\n        for (let /** @type {?} */ k = 0; k < projectedViews.length; k++) {\n          const /** @type {?} */ projectedView = projectedViews[k];\n          calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n        }\n      }\n    }\n    if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n      // if no child matches the query, skip the children.\n      i += nodeDef.childCount;\n    }\n  }\n  return values;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} queryValueType\n * @return {?}\n */\nexport function getQueryValue(\n    view: ViewData, nodeDef: NodeDef, queryValueType: QueryValueType): any {\n  if (queryValueType != null) {\n    // a match\n    let /** @type {?} */ value: any;\n    switch (queryValueType) {\n      case QueryValueType.RenderElement:\n        value = asElementData(view, nodeDef.index).renderElement;\n        break;\n      case QueryValueType.ElementRef:\n        value = new ElementRef(asElementData(view, nodeDef.index).renderElement);\n        break;\n      case QueryValueType.TemplateRef:\n        value = createTemplateRef(view, nodeDef);\n        break;\n      case QueryValueType.ViewContainerRef:\n        value = createViewContainerRef(view, nodeDef);\n        break;\n      case QueryValueType.Provider:\n        value = asProviderData(view, nodeDef.index).instance;\n        break;\n    }\n    return value;\n  }\n}"]}