{"version":3,"sources":["../../../../../modules/@angular/core/src/util/decorators.ts"],"names":[],"mappings":"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","file":"decorators.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {global, stringify} from '../facade/lang';\nimport {Type} from '../type';\n\nlet /** @type {?} */ _nextClassId = 0;\nconst /** @type {?} */ Reflect = global.Reflect;\n\n/**\n * Declares the interface to be used with {@link Class}.\n *\n * @stable\n */\nexport type ClassDefinition = {\n  /**\n   * Optional argument for specifying the superclass.\n   */\n  extends?: Type<any>;\n\n  /**\n   * Required constructor function for a class.\n   *\n   * The function may be optionally wrapped in an `Array`, in which case additional parameter\n   * annotations may be specified.\n   * The number of arguments and the number of parameter annotations must match.\n   *\n   * See {@link Class} for example of usage.\n   */\n  constructor: Function | any[];\n} &\n{\n  /**\n   * Other methods on the class. Note that values should have type 'Function' but TS requires\n   * all properties to have a narrower type than the index signature.\n   */\n  [x: string]: Type<any>|Function|any[];\n};\n\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * DSL syntax:\n *\n * ```\n * var MyClass = ng\n *   .Component({...})\n *   .Class({...});\n * ```\n *\n * ES7 syntax:\n *\n * ```\n * @ng.Component({...})\n * class MyClass {...}\n * ```\n * @stable\n */\nexport interface TypeDecorator {\n  /**\n   * Invoke as ES7 decorator.\n   */\n  <T extends Type<any>>(type: T): T;\n\n  // Make TypeDecorator assignable to built-in ParameterDecorator type.\n  // ParameterDecorator is declared in lib.d.ts as a `declare type`\n  // so we cannot declare this interface as a subtype.\n  // see https://github.com/angular/angular/issues/3379#issuecomment-126169417\n  (target: Object, propertyKey?: string|symbol, parameterIndex?: number): void;\n\n  /**\n   * Storage for the accumulated annotations so far used by the DSL syntax.\n   *\n   * Used by {@link Class} to annotate the generated class.\n   */\n  annotations: any[];\n\n  /**\n   * Generate a class from the definition and annotate it with {@link TypeDecorator#annotations}.\n   */\n  Class(obj: ClassDefinition): Type<any>;\n}\n/**\n * @param {?} annotation\n * @return {?}\n */\nfunction extractAnnotation(annotation: any): any {\n  if (typeof annotation === 'function' && annotation.hasOwnProperty('annotation')) {\n    // it is a decorator, extract annotation\n    annotation = annotation.annotation;\n  }\n  return annotation;\n}\n/**\n * @param {?} fnOrArray\n * @param {?} key\n * @return {?}\n */\nfunction applyParams(fnOrArray: (Function | any[]), key: string): Function {\n  if (fnOrArray === Object || fnOrArray === String || fnOrArray === Function ||\n      fnOrArray === Number || fnOrArray === Array) {\n    throw new Error(`Can not use native ${stringify(fnOrArray)} as constructor`);\n  }\n\n  if (typeof fnOrArray === 'function') {\n    return fnOrArray;\n  }\n\n  if (Array.isArray(fnOrArray)) {\n    const /** @type {?} */ annotations: any[] = fnOrArray;\n    const /** @type {?} */ annoLength = annotations.length - 1;\n    const /** @type {?} */ fn: Function = fnOrArray[annoLength];\n    if (typeof fn !== 'function') {\n      throw new Error(\n          `Last position of Class method array must be Function in key ${key} was '${stringify(fn)}'`);\n    }\n    if (annoLength != fn.length) {\n      throw new Error(\n          `Number of annotations (${annoLength}) does not match number of arguments (${fn.length}) in the function: ${stringify(fn)}`);\n    }\n    const /** @type {?} */ paramsAnnotations: any[][] = [];\n    for (let /** @type {?} */ i = 0, /** @type {?} */ ii = annotations.length - 1; i < ii; i++) {\n      const /** @type {?} */ paramAnnotations: any[] = [];\n      paramsAnnotations.push(paramAnnotations);\n      const /** @type {?} */ annotation = annotations[i];\n      if (Array.isArray(annotation)) {\n        for (let /** @type {?} */ j = 0; j < annotation.length; j++) {\n          paramAnnotations.push(extractAnnotation(annotation[j]));\n        }\n      } else if (typeof annotation === 'function') {\n        paramAnnotations.push(extractAnnotation(annotation));\n      } else {\n        paramAnnotations.push(annotation);\n      }\n    }\n    Reflect.defineMetadata('parameters', paramsAnnotations, fn);\n    return fn;\n  }\n\n  throw new Error(\n      `Only Function or Array is supported in Class definition for key '${key}' is '${stringify(fnOrArray)}'`);\n}\n/**\n * Provides a way for expressing ES6 classes with parameter annotations in ES5.\n * \n * ## Basic Example\n * \n * ```\n * var Greeter = ng.Class({\n *   constructor: function(name) {\n *     this.name = name;\n *   },\n * \n *   greet: function() {\n *     alert('Hello ' + this.name + '!');\n *   }\n * });\n * ```\n * \n * is equivalent to ES6:\n * \n * ```\n * class Greeter {\n *   constructor(name) {\n *     this.name = name;\n *   }\n * \n *   greet() {\n *     alert('Hello ' + this.name + '!');\n *   }\n * }\n * ```\n * \n * or equivalent to ES5:\n * \n * ```\n * var Greeter = function (name) {\n *   this.name = name;\n * }\n * \n * Greeter.prototype.greet = function () {\n *   alert('Hello ' + this.name + '!');\n * }\n * ```\n * \n * ### Example with parameter annotations\n * \n * ```\n * var MyService = ng.Class({\n *   constructor: [String, [new Optional(), Service], function(name, myService) {\n *     ...\n *   }]\n * });\n * ```\n * \n * is equivalent to ES6:\n * \n * ```\n * class MyService {\n *   constructor(name: string, \\@Optional() myService: Service) {\n *     ...\n *   }\n * }\n * ```\n * \n * ### Example with inheritance\n * \n * ```\n * var Shape = ng.Class({\n *   constructor: (color) {\n *     this.color = color;\n *   }\n * });\n * \n * var Square = ng.Class({\n *   extends: Shape,\n *   constructor: function(color, size) {\n *     Shape.call(this, color);\n *     this.size = size;\n *   }\n * });\n * ```\n * @suppress {globalThis}\n * \\@stable\n * @param {?} clsDef\n * @return {?}\n */\nexport function Class(clsDef: ClassDefinition): Type<any> {\n  const /** @type {?} */ constructor = applyParams(\n      clsDef.hasOwnProperty('constructor') ? clsDef.constructor : undefined, 'constructor');\n\n  let /** @type {?} */ proto = constructor.prototype;\n\n  if (clsDef.hasOwnProperty('extends')) {\n    if (typeof clsDef.extends === 'function') {\n      ( /** @type {?} */((<Function>constructor))).prototype = proto =\n          Object.create(( /** @type {?} */((<Function>clsDef.extends))).prototype);\n    } else {\n      throw new Error(\n          `Class definition 'extends' property must be a constructor function was: ${stringify(clsDef.extends)}`);\n    }\n  }\n\n  for (const /** @type {?} */ key in clsDef) {\n    if (key !== 'extends' && key !== 'prototype' && clsDef.hasOwnProperty(key)) {\n      proto[key] = applyParams(clsDef[key], key);\n    }\n  }\n\n  if (this && this.annotations instanceof Array) {\n    Reflect.defineMetadata('annotations', this.annotations, constructor);\n  }\n\n  const /** @type {?} */ constructorName = constructor['name'];\n  if (!constructorName || constructorName === 'constructor') {\n    ( /** @type {?} */((constructor as any)))['overriddenName'] = `class${_nextClassId++}`;\n  }\n\n  return /** @type {?} */(( <Type<any>>constructor));\n}\n/**\n * @suppress {globalThis}\n * @param {?} name\n * @param {?} props\n * @param {?=} parentClass\n * @param {?=} chainFn\n * @return {?}\n */\nexport function makeDecorator(\n    name: string, props: {[name: string]: any}, parentClass?: any,\n    chainFn: (fn: Function) => void = null): (...args: any[]) => (cls: any) => any {\n  const /** @type {?} */ metaCtor = makeMetadataCtor([props]);\n/**\n * @param {?} objOrType\n * @return {?}\n */\nfunction DecoratorFactory(objOrType: any): (cls: any) => any {\n    if (!(Reflect && Reflect.getOwnMetadata)) {\n      throw 'reflect-metadata shim is required when using class decorators';\n    }\n\n    if (this instanceof DecoratorFactory) {\n      metaCtor.call(this, objOrType);\n      return this;\n    }\n\n    const /** @type {?} */ annotationInstance = new ( /** @type {?} */((<any>DecoratorFactory)))(objOrType);\n    const /** @type {?} */ chainAnnotation =\n        typeof this === 'function' && Array.isArray(this.annotations) ? this.annotations : [];\n    chainAnnotation.push(annotationInstance);\n    const /** @type {?} */ TypeDecorator: TypeDecorator = /** @type {?} */(( <TypeDecorator>function TypeDecorator(cls: Type<any>) {\n      const /** @type {?} */ annotations = Reflect.getOwnMetadata('annotations', cls) || [];\n      annotations.push(annotationInstance);\n      Reflect.defineMetadata('annotations', annotations, cls);\n      return cls;\n    }));\n    TypeDecorator.annotations = chainAnnotation;\n    TypeDecorator.Class = Class;\n    if (chainFn) chainFn(TypeDecorator);\n    return TypeDecorator;\n  }\n\n  if (parentClass) {\n    DecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n\n  DecoratorFactory.prototype.toString = () => `@${name}`;\n  ( /** @type {?} */((<any>DecoratorFactory))).annotationCls = DecoratorFactory;\n  return DecoratorFactory;\n}\n/**\n * @param {?} props\n * @return {?}\n */\nfunction makeMetadataCtor(props: ([string, any] | {[key: string]: any})[]): any {\n  return function ctor(...args: any[]) {\n    props.forEach((prop, i) => {\n      const /** @type {?} */ argVal = args[i];\n      if (Array.isArray(prop)) {\n        // plain parameter\n        this[prop[0]] = argVal === undefined ? prop[1] : argVal;\n      } else {\n        for (const /** @type {?} */ propName in prop) {\n          this[propName] =\n              argVal && argVal.hasOwnProperty(propName) ? argVal[propName] : prop[propName];\n        }\n      }\n    });\n  };\n}\n/**\n * @param {?} name\n * @param {?} props\n * @param {?=} parentClass\n * @return {?}\n */\nexport function makeParamDecorator(\n    name: string, props: ([string, any] | {[name: string]: any})[], parentClass?: any): any {\n  const /** @type {?} */ metaCtor = makeMetadataCtor(props);\n/**\n * @param {...?} args\n * @return {?}\n */\nfunction ParamDecoratorFactory(...args: any[]): any {\n    if (this instanceof ParamDecoratorFactory) {\n      metaCtor.apply(this, args);\n      return this;\n    }\n    const /** @type {?} */ annotationInstance = new ( /** @type {?} */((<any>ParamDecoratorFactory)))(...args);\n\n    ( /** @type {?} */((<any>ParamDecorator))).annotation = annotationInstance;\n    return ParamDecorator;\n/**\n * @param {?} cls\n * @param {?} unusedKey\n * @param {?} index\n * @return {?}\n */\nfunction ParamDecorator(cls: any, unusedKey: any, index: number): any {\n      const /** @type {?} */ parameters: any[][] = Reflect.getOwnMetadata('parameters', cls) || [];\n\n      // there might be gaps if some in between parameters do not have annotations.\n      // we pad with nulls.\n      while (parameters.length <= index) {\n        parameters.push(null);\n      }\n\n      parameters[index] = parameters[index] || [];\n      parameters[index].push(annotationInstance);\n\n      Reflect.defineMetadata('parameters', parameters, cls);\n      return cls;\n    }\n  }\n  if (parentClass) {\n    ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n  ParamDecoratorFactory.prototype.toString = () => `@${name}`;\n  ( /** @type {?} */((<any>ParamDecoratorFactory))).annotationCls = ParamDecoratorFactory;\n  return ParamDecoratorFactory;\n}\n/**\n * @param {?} name\n * @param {?} props\n * @param {?=} parentClass\n * @return {?}\n */\nexport function makePropDecorator(\n    name: string, props: ([string, any] | {[key: string]: any})[], parentClass?: any): any {\n  const /** @type {?} */ metaCtor = makeMetadataCtor(props);\n/**\n * @param {...?} args\n * @return {?}\n */\nfunction PropDecoratorFactory(...args: any[]): any {\n    if (this instanceof PropDecoratorFactory) {\n      metaCtor.apply(this, args);\n      return this;\n    }\n\n    const /** @type {?} */ decoratorInstance = new ( /** @type {?} */((<any>PropDecoratorFactory)))(...args);\n\n    return function PropDecorator(target: any, name: string) {\n      const /** @type {?} */ meta = Reflect.getOwnMetadata('propMetadata', target.constructor) || {};\n      meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n      meta[name].unshift(decoratorInstance);\n      Reflect.defineMetadata('propMetadata', meta, target.constructor);\n    };\n  }\n\n  if (parentClass) {\n    PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n\n  PropDecoratorFactory.prototype.toString = () => `@${name}`;\n  ( /** @type {?} */((<any>PropDecoratorFactory))).annotationCls = PropDecoratorFactory;\n  return PropDecoratorFactory;\n}\n"]}