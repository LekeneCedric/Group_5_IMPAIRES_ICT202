{"version":3,"sources":["../../../../../modules/@angular/core/src/reflection/reflection_capabilities.ts"],"names":[],"mappings":"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","file":"reflection_capabilities.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {global, isPresent, stringify} from '../facade/lang';\nimport {Type, isType} from '../type';\n\nimport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nimport {GetterFn, MethodFn, SetterFn} from './types';\n\n/**\n * Attention: This regex has to hold even if the code is minified!\n */\nexport const /** @type {?} */ DELEGATE_CTOR =\n    /^function\\s+\\S+\\(\\)\\s*{\\s*(\"use strict\";)?\\s*(return\\s+)?(\\S+\\s+!==\\s+null\\s+&&\\s+)?\\S+\\.apply\\(this,\\s*arguments\\)/;\nexport class ReflectionCapabilities implements PlatformReflectionCapabilities {\nprivate _reflect: any;\n/**\n * @param {?=} reflect\n */\nconstructor(reflect?: any) { this._reflect = reflect || global.Reflect; }\n/**\n * @return {?}\n */\nisReflectionEnabled(): boolean { return true; }\n/**\n * @param {?} t\n * @return {?}\n */\nfactory<T>(t: Type<T>): (args: any[]) => T { return (...args: any[]) => new t(...args); }\n/**\n * \\@internal\n * @param {?} paramTypes\n * @param {?} paramAnnotations\n * @return {?}\n */\n_zipTypesAndAnnotations(paramTypes: any[], paramAnnotations: any[]): any[][] {\n    let /** @type {?} */ result: any[][];\n\n    if (typeof paramTypes === 'undefined') {\n      result = new Array(paramAnnotations.length);\n    } else {\n      result = new Array(paramTypes.length);\n    }\n\n    for (let /** @type {?} */ i = 0; i < result.length; i++) {\n      // TS outputs Object for parameters without types, while Traceur omits\n      // the annotations. For now we preserve the Traceur behavior to aid\n      // migration, but this can be revisited.\n      if (typeof paramTypes === 'undefined') {\n        result[i] = [];\n      } else if (paramTypes[i] != Object) {\n        result[i] = [paramTypes[i]];\n      } else {\n        result[i] = [];\n      }\n      if (paramAnnotations && isPresent(paramAnnotations[i])) {\n        result[i] = result[i].concat(paramAnnotations[i]);\n      }\n    }\n    return result;\n  }\n/**\n * @param {?} type\n * @param {?} parentCtor\n * @return {?}\n */\nprivate _ownParameters(type: Type<any>, parentCtor: any): any[][] {\n    // If we have no decorators, we only have function.length as metadata.\n    // In that case, to detect whether a child class declared an own constructor or not,\n    // we need to look inside of that constructor to check whether it is\n    // just calling the parent.\n    // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n    // that sets 'design:paramtypes' to []\n    // if a class inherits from another class but has no ctor declared itself.\n    if (DELEGATE_CTOR.exec(type.toString())) {\n      return null;\n    }\n\n    // Prefer the direct API.\n    if (( /** @type {?} */((<any>type))).parameters && ( /** @type {?} */((<any>type))).parameters !== parentCtor.parameters) {\n      return ( /** @type {?} */((<any>type))).parameters;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    const /** @type {?} */ tsickleCtorParams = ( /** @type {?} */((<any>type))).ctorParameters;\n    if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n      // Newer tsickle uses a function closure\n      // Retain the non-function case for compatibility with older tsickle\n      const /** @type {?} */ ctorParameters =\n          typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n      const /** @type {?} */ paramTypes = ctorParameters.map((ctorParam: any) => ctorParam && ctorParam.type);\n      const /** @type {?} */ paramAnnotations = ctorParameters.map(\n          (ctorParam: any) =>\n              ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators));\n      return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (isPresent(this._reflect) && isPresent(this._reflect.getOwnMetadata)) {\n      const /** @type {?} */ paramAnnotations = this._reflect.getOwnMetadata('parameters', type);\n      const /** @type {?} */ paramTypes = this._reflect.getOwnMetadata('design:paramtypes', type);\n      if (paramTypes || paramAnnotations) {\n        return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n      }\n    }\n\n    // If a class has no decorators, at least create metadata\n    // based on function.length.\n    // Note: We know that this is a real constructor as we checked\n    // the content of the constructor above.\n    return new Array(( /** @type {?} */((<any>type.length)))).fill(undefined);\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nparameters(type: Type<any>): any[][] {\n    // Note: only report metadata if we have at least one class decorator\n    // to stay in sync with the static reflector.\n    if (!isType(type)) {\n      return [];\n    }\n    const /** @type {?} */ parentCtor = getParentCtor(type);\n    let /** @type {?} */ parameters = this._ownParameters(type, parentCtor);\n    if (!parameters && parentCtor !== Object) {\n      parameters = this.parameters(parentCtor);\n    }\n    return parameters || [];\n  }\n/**\n * @param {?} typeOrFunc\n * @param {?} parentCtor\n * @return {?}\n */\nprivate _ownAnnotations(typeOrFunc: Type<any>, parentCtor: any): any[] {\n    // Prefer the direct API.\n    if (( /** @type {?} */((<any>typeOrFunc))).annotations && ( /** @type {?} */((<any>typeOrFunc))).annotations !== parentCtor.annotations) {\n      let /** @type {?} */ annotations = ( /** @type {?} */((<any>typeOrFunc))).annotations;\n      if (typeof annotations === 'function' && annotations.annotations) {\n        annotations = annotations.annotations;\n      }\n      return annotations;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if (( /** @type {?} */((<any>typeOrFunc))).decorators && ( /** @type {?} */((<any>typeOrFunc))).decorators !== parentCtor.decorators) {\n      return convertTsickleDecoratorIntoMetadata(( /** @type {?} */((<any>typeOrFunc))).decorators);\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (this._reflect && this._reflect.getOwnMetadata) {\n      return this._reflect.getOwnMetadata('annotations', typeOrFunc);\n    }\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nannotations(typeOrFunc: Type<any>): any[] {\n    if (!isType(typeOrFunc)) {\n      return [];\n    }\n    const /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n    const /** @type {?} */ ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n    const /** @type {?} */ parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n    return parentAnnotations.concat(ownAnnotations);\n  }\n/**\n * @param {?} typeOrFunc\n * @param {?} parentCtor\n * @return {?}\n */\nprivate _ownPropMetadata(typeOrFunc: any, parentCtor: any): {[key: string]: any[]} {\n    // Prefer the direct API.\n    if (( /** @type {?} */((<any>typeOrFunc))).propMetadata &&\n        ( /** @type {?} */((<any>typeOrFunc))).propMetadata !== parentCtor.propMetadata) {\n      let /** @type {?} */ propMetadata = ( /** @type {?} */((<any>typeOrFunc))).propMetadata;\n      if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n        propMetadata = propMetadata.propMetadata;\n      }\n      return propMetadata;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if (( /** @type {?} */((<any>typeOrFunc))).propDecorators &&\n        ( /** @type {?} */((<any>typeOrFunc))).propDecorators !== parentCtor.propDecorators) {\n      const /** @type {?} */ propDecorators = ( /** @type {?} */((<any>typeOrFunc))).propDecorators;\n      const /** @type {?} */ propMetadata = /** @type {?} */(( <{[key: string]: any[]}>{}));\n      Object.keys(propDecorators).forEach(prop => {\n        propMetadata[prop] = convertTsickleDecoratorIntoMetadata(propDecorators[prop]);\n      });\n      return propMetadata;\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (this._reflect && this._reflect.getOwnMetadata) {\n      return this._reflect.getOwnMetadata('propMetadata', typeOrFunc);\n    }\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\npropMetadata(typeOrFunc: any): {[key: string]: any[]} {\n    if (!isType(typeOrFunc)) {\n      return {};\n    }\n    const /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n    const /** @type {?} */ propMetadata: {[key: string]: any[]} = {};\n    if (parentCtor !== Object) {\n      const /** @type {?} */ parentPropMetadata = this.propMetadata(parentCtor);\n      Object.keys(parentPropMetadata).forEach((propName) => {\n        propMetadata[propName] = parentPropMetadata[propName];\n      });\n    }\n    const /** @type {?} */ ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n    if (ownPropMetadata) {\n      Object.keys(ownPropMetadata).forEach((propName) => {\n        const /** @type {?} */ decorators: any[] = [];\n        if (propMetadata.hasOwnProperty(propName)) {\n          decorators.push(...propMetadata[propName]);\n        }\n        decorators.push(...ownPropMetadata[propName]);\n        propMetadata[propName] = decorators;\n      });\n    }\n    return propMetadata;\n  }\n/**\n * @param {?} type\n * @param {?} lcProperty\n * @return {?}\n */\nhasLifecycleHook(type: any, lcProperty: string): boolean {\n    return type instanceof Type && lcProperty in type.prototype;\n  }\n/**\n * @param {?} name\n * @return {?}\n */\ngetter(name: string): GetterFn { return /** @type {?} */(( <GetterFn>new Function('o', 'return o.' + name + ';'))); }\n/**\n * @param {?} name\n * @return {?}\n */\nsetter(name: string): SetterFn {\n    return /** @type {?} */(( <SetterFn>new Function('o', 'v', 'return o.' + name + ' = v;')));\n  }\n/**\n * @param {?} name\n * @return {?}\n */\nmethod(name: string): MethodFn {\n    const /** @type {?} */ functionBody = `if (!o.${name}) throw new Error('\"${name}\" is undefined');\n        return o.${name}.apply(o, args);`;\n    return /** @type {?} */(( <MethodFn>new Function('o', 'args', functionBody)));\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nimportUri(type: any): string {\n    // StaticSymbol\n    if (typeof type === 'object' && type['filePath']) {\n      return type['filePath'];\n    }\n    // Runtime type\n    return `./${stringify(type)}`;\n  }\n/**\n * @param {?} name\n * @param {?} moduleUrl\n * @param {?} members\n * @param {?} runtime\n * @return {?}\n */\nresolveIdentifier(name: string, moduleUrl: string, members: string[], runtime: any): any {\n    return runtime;\n  }\n/**\n * @param {?} enumIdentifier\n * @param {?} name\n * @return {?}\n */\nresolveEnum(enumIdentifier: any, name: string): any { return enumIdentifier[name]; }\n}\n\nfunction ReflectionCapabilities_tsickle_Closure_declarations() {\n/** @type {?} */\nReflectionCapabilities.prototype._reflect;\n}\n\n/**\n * @param {?} decoratorInvocations\n * @return {?}\n */\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations: any[]): any[] {\n  if (!decoratorInvocations) {\n    return [];\n  }\n  return decoratorInvocations.map(decoratorInvocation => {\n    const /** @type {?} */ decoratorType = decoratorInvocation.type;\n    const /** @type {?} */ annotationCls = decoratorType.annotationCls;\n    const /** @type {?} */ annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n    return new annotationCls(...annotationArgs);\n  });\n}\n/**\n * @param {?} ctor\n * @return {?}\n */\nfunction getParentCtor(ctor: Function): Type<any> {\n  const /** @type {?} */ parentProto = Object.getPrototypeOf(ctor.prototype);\n  const /** @type {?} */ parentCtor = parentProto ? parentProto.constructor : null;\n  // Note: We always use `Object` as the null value\n  // to simplify checking later on.\n  return parentCtor || Object;\n}\n"]}