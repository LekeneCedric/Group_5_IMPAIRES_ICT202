{"version":3,"sources":["../../../../modules/@angular/core/src/application_init.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAA,SAAE,EAAS,MAAA,kBAAA,CAAA;AAElB,OAAO,EAAA,MAAE,EAAO,UAAA,EAAY,cAAA,EAAgB,QAAA,EAAS,MAAA,MAAA,CAAA;AAGrD;;;GAGG;AACH,MAAM,CAAC,IAAA,gBAAA,CAAM,eAAA,GAAkB,IAAI,cAAA,CAAiC,yBAAE,CAAyB,CAAC;AAChG;;;;GAIG;AACH;IAGA;;OAEG;IACH,+BAAe,QAAuB;QAAtC,iBAcG;QAhBO,UAAA,GAAQ,KAAA,CAAM;QAGpB,IAAM,iBAAiB,GAAmB,EAAE,CAAC;QAC7C,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACb,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACzC,IAAM,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;gBACjC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBAC1B,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACrC,CAAC;YACH,CAAC;QACH,CAAC;QACD,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,cAAQ,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACtF,EAAE,CAAC,CAAC,iBAAiB,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC;IACH,CAAC;IAIH,sBAFG,uCAAA;QADH;;WAEG;aACH,cAFwB,MAAA,CAAO,IAAA,CAAK,KAAC,CAAK,CAAC,CAAA;;;OAAA;IAM3C,sBAJG,8CAAA;QACH;;WAEG;aACH,cAJoC,MAAA,CAAO,IAAA,CAAK,YAAC,CAAY,CAAC,CAAA;;;OAAA;IAY9D,4BAAC;AAAD,CApCA,AAoCC;;AAXM,gCAAA,GAAoC;IAK3C,EAJE,IAAA,EAAM,UAAA,EAAW;CAKlB,CAJC;AAKF,kBAPE;AAIK,oCAAA,GAAiF,cAAM,OAAA;IAK9F,EAAC,IAJC,EAAK,KAAA,EAAO,UAAA,EAAY,CAAA,EAAG,IAAA,EAAM,MAAA,EAAQ,IAAA,EAAM,CAAA,eAAE,EAAe,EAAG,EAAG,EAAE,IAAA,EAAM,QAAA,EAAS,EAAE,EAAG;CAK7F,EAN6F,CAM7F,CAJC;AAOF;IACA,gBAAgB;IAChB,qBAAqB,CAAC,UAAU,CAAC;IACjC;;;OAGG;IACH,qBAAqB,CAAC,cAAc,CAAC;IACrC,gBAAgB;IAChB,qBAAqB,CAAC,SAAS,CAAC,YAAY,CAAC;IAC7C,gBAAgB;IAChB,qBAAqB,CAAC,SAAS,CAAC,KAAK,CAAC;AACtC,CAAC","file":"application_init.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isPromise} from '../src/util/lang';\n\nimport {Inject, Injectable, InjectionToken, Optional} from './di';\n\n\n/**\n * A function that will be executed when an application is initialized.\n * @experimental\n */\nexport const /** @type {?} */ APP_INITIALIZER = new InjectionToken<Array<() => void>>('Application Initializer');\n/**\n * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n * \n * \\@experimental\n */\nexport class ApplicationInitStatus {\nprivate _donePromise: Promise<any>;\nprivate _done = false;\n/**\n * @param {?} appInits\n */\nconstructor(  appInits: (() => any)[]) {\n    const asyncInitPromises: Promise<any>[] = [];\n    if (appInits) {\n      for (let i = 0; i < appInits.length; i++) {\n        const initResult = appInits[i]();\n        if (isPromise(initResult)) {\n          asyncInitPromises.push(initResult);\n        }\n      }\n    }\n    this._donePromise = Promise.all(asyncInitPromises).then(() => { this._done = true; });\n    if (asyncInitPromises.length === 0) {\n      this._done = true;\n    }\n  }\n/**\n * @return {?}\n */\nget done(): boolean { return this._done; }\n/**\n * @return {?}\n */\nget donePromise(): Promise<any> { return this._donePromise; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER, ] }, { type: Optional }, ]},\n];\n}\n\nfunction ApplicationInitStatus_tsickle_Closure_declarations() {\n/** @type {?} */\nApplicationInitStatus.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nApplicationInitStatus.ctorParameters;\n/** @type {?} */\nApplicationInitStatus.prototype._donePromise;\n/** @type {?} */\nApplicationInitStatus.prototype._done;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}