{"version":3,"sources":["../../../../../modules/@angular/core/src/debug/debug_node.ts"],"names":[],"mappings":"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","file":"debug_node.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di';\nimport {Predicate} from '../facade/collection';\nimport {RenderDebugInfo} from '../render/api';\nexport class EventListener {\n/**\n * @param {?} name\n * @param {?} callback\n */\nconstructor(public name: string,\npublic callback: Function){}; }\n\nfunction EventListener_tsickle_Closure_declarations() {\n/** @type {?} */\nEventListener.prototype.name;\n/** @type {?} */\nEventListener.prototype.callback;\n}\n\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nexport class DebugNode {\n  nativeNode: any;\n  listeners: EventListener[];\n  parent: DebugElement;\n/**\n * @param {?} nativeNode\n * @param {?} parent\n * @param {?} _debugInfo\n */\nconstructor(nativeNode: any, parent: DebugNode,\nprivate _debugInfo: RenderDebugInfo) {\n    this.nativeNode = nativeNode;\n    if (parent && parent instanceof DebugElement) {\n      parent.addChild(this);\n    } else {\n      this.parent = null;\n    }\n    this.listeners = [];\n  }\n/**\n * @return {?}\n */\nget injector(): Injector { return this._debugInfo ? this._debugInfo.injector : null; }\n/**\n * @return {?}\n */\nget componentInstance(): any { return this._debugInfo ? this._debugInfo.component : null; }\n/**\n * @return {?}\n */\nget context(): any { return this._debugInfo ? this._debugInfo.context : null; }\n/**\n * @return {?}\n */\nget references(): {[key: string]: any} {\n    return this._debugInfo ? this._debugInfo.references : null;\n  }\n/**\n * @return {?}\n */\nget providerTokens(): any[] { return this._debugInfo ? this._debugInfo.providerTokens : null; }\n/**\n * @return {?}\n */\nget source(): string { return this._debugInfo ? this._debugInfo.source : null; }\n}\n\nfunction DebugNode_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugNode.prototype.nativeNode;\n/** @type {?} */\nDebugNode.prototype.listeners;\n/** @type {?} */\nDebugNode.prototype.parent;\n/** @type {?} */\nDebugNode.prototype._debugInfo;\n}\n\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nexport class DebugElement extends DebugNode {\n  name: string;\n  properties: {[key: string]: any};\n  attributes: {[key: string]: string};\n  classes: {[key: string]: boolean};\n  styles: {[key: string]: string};\n  childNodes: DebugNode[];\n  nativeElement: any;\n/**\n * @param {?} nativeNode\n * @param {?} parent\n * @param {?} _debugInfo\n */\nconstructor(nativeNode: any, parent: any, _debugInfo: RenderDebugInfo) {\n    super(nativeNode, parent, _debugInfo);\n    this.properties = {};\n    this.attributes = {};\n    this.classes = {};\n    this.styles = {};\n    this.childNodes = [];\n    this.nativeElement = nativeNode;\n  }\n/**\n * @param {?} child\n * @return {?}\n */\naddChild(child: DebugNode) {\n    if (child) {\n      this.childNodes.push(child);\n      child.parent = this;\n    }\n  }\n/**\n * @param {?} child\n * @return {?}\n */\nremoveChild(child: DebugNode) {\n    const /** @type {?} */ childIndex = this.childNodes.indexOf(child);\n    if (childIndex !== -1) {\n      child.parent = null;\n      this.childNodes.splice(childIndex, 1);\n    }\n  }\n/**\n * @param {?} child\n * @param {?} newChildren\n * @return {?}\n */\ninsertChildrenAfter(child: DebugNode, newChildren: DebugNode[]) {\n    const /** @type {?} */ siblingIndex = this.childNodes.indexOf(child);\n    if (siblingIndex !== -1) {\n      this.childNodes.splice(siblingIndex + 1, 0, ...newChildren);\n      newChildren.forEach(c => {\n        if (c.parent) {\n          c.parent.removeChild(c);\n        }\n        c.parent = this;\n      });\n    }\n  }\n/**\n * @param {?} refChild\n * @param {?} newChild\n * @return {?}\n */\ninsertBefore(refChild: DebugNode, newChild: DebugNode): void {\n    const /** @type {?} */ refIndex = this.childNodes.indexOf(refChild);\n    if (refIndex === -1) {\n      this.addChild(newChild);\n    } else {\n      if (newChild.parent) {\n        newChild.parent.removeChild(newChild);\n      }\n      newChild.parent = this;\n      this.childNodes.splice(refIndex, 0, newChild);\n    }\n  }\n/**\n * @param {?} predicate\n * @return {?}\n */\nquery(predicate: Predicate<DebugElement>): DebugElement {\n    const /** @type {?} */ results = this.queryAll(predicate);\n    return results[0] || null;\n  }\n/**\n * @param {?} predicate\n * @return {?}\n */\nqueryAll(predicate: Predicate<DebugElement>): DebugElement[] {\n    const /** @type {?} */ matches: DebugElement[] = [];\n    _queryElementChildren(this, predicate, matches);\n    return matches;\n  }\n/**\n * @param {?} predicate\n * @return {?}\n */\nqueryAllNodes(predicate: Predicate<DebugNode>): DebugNode[] {\n    const /** @type {?} */ matches: DebugNode[] = [];\n    _queryNodeChildren(this, predicate, matches);\n    return matches;\n  }\n/**\n * @return {?}\n */\nget children(): DebugElement[] {\n    return /** @type {?} */(( this.childNodes.filter((node) => node instanceof DebugElement) as DebugElement[]));\n  }\n/**\n * @param {?} eventName\n * @param {?} eventObj\n * @return {?}\n */\ntriggerEventHandler(eventName: string, eventObj: any) {\n    this.listeners.forEach((listener) => {\n      if (listener.name == eventName) {\n        listener.callback(eventObj);\n      }\n    });\n  }\n}\n\nfunction DebugElement_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugElement.prototype.name;\n/** @type {?} */\nDebugElement.prototype.properties;\n/** @type {?} */\nDebugElement.prototype.attributes;\n/** @type {?} */\nDebugElement.prototype.classes;\n/** @type {?} */\nDebugElement.prototype.styles;\n/** @type {?} */\nDebugElement.prototype.childNodes;\n/** @type {?} */\nDebugElement.prototype.nativeElement;\n}\n\n/**\n * \\@experimental\n * @param {?} debugEls\n * @return {?}\n */\nexport function asNativeElements(debugEls: DebugElement[]): any {\n  return debugEls.map((el) => el.nativeElement);\n}\n/**\n * @param {?} element\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryElementChildren(\n    element: DebugElement, predicate: Predicate<DebugElement>, matches: DebugElement[]) {\n  element.childNodes.forEach(node => {\n    if (node instanceof DebugElement) {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      _queryElementChildren(node, predicate, matches);\n    }\n  });\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryNodeChildren(\n    parentNode: DebugNode, predicate: Predicate<DebugNode>, matches: DebugNode[]) {\n  if (parentNode instanceof DebugElement) {\n    parentNode.childNodes.forEach(node => {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      if (node instanceof DebugElement) {\n        _queryNodeChildren(node, predicate, matches);\n      }\n    });\n  }\n}\n\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nconst /** @type {?} */ _nativeNodeToDebugNode = new Map<any, DebugNode>();\n/**\n * \\@experimental\n * @param {?} nativeNode\n * @return {?}\n */\nexport function getDebugNode(nativeNode: any): DebugNode {\n  return _nativeNodeToDebugNode.get(nativeNode);\n}\n/**\n * @return {?}\n */\nexport function getAllDebugNodes(): DebugNode[] {\n  return Array.from(_nativeNodeToDebugNode.values());\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function indexDebugNode(node: DebugNode) {\n  _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function removeDebugNodeFromIndex(node: DebugNode) {\n  _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n"]}