{"version":3,"sources":["../../../../../modules/@angular/core/src/linker/debug_context.ts"],"names":[],"mappings":"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","file":"debug_context.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di';\nimport {isBlank, isPresent} from '../facade/lang';\nimport {RenderDebugInfo} from '../render/api';\n\nimport {DebugAppView} from './view';\nimport {ViewType} from './view_type';\nexport class StaticNodeDebugInfo {\n/**\n * @param {?} providerTokens\n * @param {?} componentToken\n * @param {?} refTokens\n */\nconstructor(\npublic providerTokens: any[],\npublic componentToken: any,\npublic refTokens: {[key: string]: any}) {}\n}\n\nfunction StaticNodeDebugInfo_tsickle_Closure_declarations() {\n/** @type {?} */\nStaticNodeDebugInfo.prototype.providerTokens;\n/** @type {?} */\nStaticNodeDebugInfo.prototype.componentToken;\n/** @type {?} */\nStaticNodeDebugInfo.prototype.refTokens;\n}\n\nexport class DebugContext implements RenderDebugInfo {\n/**\n * @param {?} _view\n * @param {?} _nodeIndex\n * @param {?} _tplRow\n * @param {?} _tplCol\n */\nconstructor(\nprivate _view: DebugAppView<any>,\nprivate _nodeIndex: number,\nprivate _tplRow: number,\nprivate _tplCol: number) {}\n/**\n * @return {?}\n */\nprivate get _staticNodeInfo(): StaticNodeDebugInfo {\n    return isPresent(this._nodeIndex) ? this._view.staticNodeDebugInfos[this._nodeIndex] : null;\n  }\n/**\n * @return {?}\n */\nget context() { return this._view.context; }\n/**\n * @return {?}\n */\nget component() {\n    const /** @type {?} */ staticNodeInfo = this._staticNodeInfo;\n    if (isPresent(staticNodeInfo) && isPresent(staticNodeInfo.componentToken)) {\n      return this.injector.get(staticNodeInfo.componentToken);\n    }\n    return null;\n  }\n/**\n * @return {?}\n */\nget componentRenderElement() {\n    let /** @type {?} */ componentView = this._view;\n    while (isPresent(componentView.parentView) && componentView.type !== ViewType.COMPONENT) {\n      componentView = /** @type {?} */(( <DebugAppView<any>>componentView.parentView));\n    }\n    return componentView.parentElement;\n  }\n/**\n * @return {?}\n */\nget injector(): Injector { return this._view.injector(this._nodeIndex); }\n/**\n * @return {?}\n */\nget renderNode(): any {\n    if (isPresent(this._nodeIndex) && this._view.allNodes) {\n      return this._view.allNodes[this._nodeIndex];\n    } else {\n      return null;\n    }\n  }\n/**\n * @return {?}\n */\nget providerTokens(): any[] {\n    const /** @type {?} */ staticNodeInfo = this._staticNodeInfo;\n    return isPresent(staticNodeInfo) ? staticNodeInfo.providerTokens : null;\n  }\n/**\n * @return {?}\n */\nget source(): string {\n    return `${this._view.componentType.templateUrl}:${this._tplRow}:${this._tplCol}`;\n  }\n/**\n * @return {?}\n */\nget references(): {[key: string]: any} {\n    const /** @type {?} */ varValues: {[key: string]: string} = {};\n    const /** @type {?} */ staticNodeInfo = this._staticNodeInfo;\n    if (isPresent(staticNodeInfo)) {\n      const /** @type {?} */ refs = staticNodeInfo.refTokens;\n      Object.keys(refs).forEach(refName => {\n        const /** @type {?} */ refToken = refs[refName];\n        let /** @type {?} */ varValue: any;\n        if (isBlank(refToken)) {\n          varValue = this._view.allNodes ? this._view.allNodes[this._nodeIndex] : null;\n        } else {\n          varValue = this._view.injectorGet(refToken, this._nodeIndex, null);\n        }\n        varValues[refName] = varValue;\n      });\n    }\n    return varValues;\n  }\n}\n\nfunction DebugContext_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugContext.prototype._view;\n/** @type {?} */\nDebugContext.prototype._nodeIndex;\n/** @type {?} */\nDebugContext.prototype._tplRow;\n/** @type {?} */\nDebugContext.prototype._tplCol;\n}\n\n"]}