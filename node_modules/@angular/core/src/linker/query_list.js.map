{"version":3,"sources":["../../../../../modules/@angular/core/src/linker/query_list.ts"],"names":[],"mappings":"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","file":"query_list.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {EventEmitter, Observable} from '../facade/async';\nimport {ListWrapper} from '../facade/collection';\nimport {getSymbolIterator} from '../facade/lang';\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n * \n * The type of object that {\\@link Query} and {\\@link ViewQueryMetadata} provide.\n * \n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n * \n * Changes can be observed by subscribing to the changes `Observable`.\n * \n * NOTE: In the future this class will implement an `Observable` interface.\n * \n * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n * ```typescript\n * \\@Component({...}) \n * class Container {\n *   \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * \\@stable\n */\nexport class QueryList<T>/* implements Iterable<T> */ {\nprivate _dirty = true;\nprivate _results: Array<T> = [];\nprivate _emitter = new EventEmitter();\n/**\n * @return {?}\n */\nget changes(): Observable<any> { return this._emitter; }\n/**\n * @return {?}\n */\nget length(): number { return this._results.length; }\n/**\n * @return {?}\n */\nget first(): T { return this._results[0]; }\n/**\n * @return {?}\n */\nget last(): T { return this._results[this.length - 1]; }\n/**\n * See\n * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n * @param {?} fn\n * @return {?}\n */\nmap<U>(fn: (item: T, index: number, array: T[]) => U): U[] { return this._results.map(fn); }\n/**\n * See\n * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n * @param {?} fn\n * @return {?}\n */\nfilter(fn: (item: T, index: number, array: T[]) => boolean): T[] {\n    return this._results.filter(fn);\n  }\n/**\n * See\n * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n * @param {?} fn\n * @return {?}\n */\nfind(fn: (item: T, index: number, array: T[]) => boolean): T { return this._results.find(fn); }\n/**\n * See\n * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n * @param {?} fn\n * @param {?} init\n * @return {?}\n */\nreduce<U>(fn: (prevValue: U, curValue: T, curIndex: number, array: T[]) => U, init: U): U {\n    return this._results.reduce(fn, init);\n  }\n/**\n * See\n * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n * @param {?} fn\n * @return {?}\n */\nforEach(fn: (item: T, index: number, array: T[]) => void): void { this._results.forEach(fn); }\n/**\n * See\n * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n * @param {?} fn\n * @return {?}\n */\nsome(fn: (value: T, index: number, array: T[]) => boolean): boolean {\n    return this._results.some(fn);\n  }\n/**\n * @return {?}\n */\ntoArray(): T[] { return this._results.slice(); }\n/**\n * @return {?}\n */\n[getSymbolIterator()](): Iterator<T> { return ( /** @type {?} */((this._results as any)))[getSymbolIterator()](); }\n/**\n * @return {?}\n */\ntoString(): string { return this._results.toString(); }\n/**\n * @param {?} res\n * @return {?}\n */\nreset(res: Array<T|any[]>): void {\n    this._results = ListWrapper.flatten(res);\n    this._dirty = false;\n  }\n/**\n * @return {?}\n */\nnotifyOnChanges(): void { this._emitter.emit(this); }\n/**\n * internal\n * @return {?}\n */\nsetDirty() { this._dirty = true; }\n/**\n * internal\n * @return {?}\n */\nget dirty() { return this._dirty; }\n}\n\nfunction QueryList_tsickle_Closure_declarations() {\n/** @type {?} */\nQueryList.prototype._dirty;\n/** @type {?} */\nQueryList.prototype._results;\n/** @type {?} */\nQueryList.prototype._emitter;\n}\n\n"]}