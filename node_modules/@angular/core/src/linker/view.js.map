{"version":3,"sources":["../../../../../modules/@angular/core/src/linker/view.ts"],"names":[],"mappings":"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","file":"view.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ApplicationRef} from '../application_ref';\nimport {ChangeDetectorRef, ChangeDetectorStatus} from '../change_detection/change_detection';\nimport {Injector, THROW_IF_NOT_FOUND} from '../di/injector';\nimport {getType} from '../errors';\nimport {isPresent} from '../facade/lang';\nimport {WtfScopeFn, wtfCreateScope, wtfLeave} from '../profile/profile';\nimport {DirectRenderer, RenderComponentType, Renderer} from '../render/api';\n\nimport {AnimationViewContext} from './animation_view_context';\nimport {ComponentRef} from './component_factory';\nimport {DebugContext, StaticNodeDebugInfo} from './debug_context';\nimport {ElementInjector} from './element_injector';\nimport {expressionChangedAfterItHasBeenCheckedError, viewDestroyedError, viewWrappedError} from './errors';\nimport {ViewContainer} from './view_container';\nimport {ViewRef_} from './view_ref';\nimport {ViewType} from './view_type';\nimport {ViewUtils, addToArray} from './view_utils';\n\nconst /** @type {?} */ _scope_check: WtfScopeFn = wtfCreateScope(`AppView#check(ascii id)`);\n\n/**\n * @experimental\n */\nconst /** @type {?} */ EMPTY_CONTEXT = new Object();\n\nconst /** @type {?} */ UNDEFINED = new Object();\n/**\n * Cost of making objects: http://jsperf.com/instantiate-size-of-object\n * \n * @abstract\n */\nexport abstract class AppView<T> {\n  ref: ViewRef_<T>;\n  lastRootNode: any;\n  allNodes: any[];\n  disposables: Function[];\n  viewContainer: ViewContainer;\n  // This will be set if a view is directly attached to an ApplicationRef\n  // and not to a view container.\n  appRef: ApplicationRef;\n\n  numberOfChecks: number = 0;\n  throwOnChange: boolean = false;\n\n  renderer: Renderer;\nprivate _hasExternalHostElement: boolean;\nprivate _hostInjector: Injector;\nprivate _hostProjectableNodes: any[][];\nprivate _animationContext: AnimationViewContext;\nprivate _directRenderer: DirectRenderer;\npublic context: T;\n/**\n * @param {?} clazz\n * @param {?} componentType\n * @param {?} type\n * @param {?} viewUtils\n * @param {?} parentView\n * @param {?} parentIndex\n * @param {?} parentElement\n * @param {?} cdMode\n * @param {?=} declaredViewContainer\n */\nconstructor(\npublic clazz: any,\npublic componentType: RenderComponentType,\npublic type: ViewType,\npublic viewUtils: ViewUtils,\npublic parentView: AppView<any>,\npublic parentIndex: number,\npublic parentElement: any,\npublic cdMode: ChangeDetectorStatus,\npublic declaredViewContainer: ViewContainer = null) {\n    this.ref = new ViewRef_(this, viewUtils.animationQueue);\n    if (type === ViewType.COMPONENT || type === ViewType.HOST) {\n      this.renderer = viewUtils.renderComponent(componentType);\n    } else {\n      this.renderer = parentView.renderer;\n    }\n    this._directRenderer = (this.renderer as any).directRenderer;\n  }\n/**\n * @return {?}\n */\nget animationContext(): AnimationViewContext {\n    if (!this._animationContext) {\n      this._animationContext = new AnimationViewContext(this.viewUtils.animationQueue);\n    }\n    return this._animationContext;\n  }\n/**\n * @return {?}\n */\nget destroyed(): boolean { return this.cdMode === ChangeDetectorStatus.Destroyed; }\n/**\n * @param {?} context\n * @return {?}\n */\ncreate(context: T) {\n    this.context = context;\n    return this.createInternal(null);\n  }\n/**\n * @param {?} rootSelectorOrNode\n * @param {?} hostInjector\n * @param {?} projectableNodes\n * @return {?}\n */\ncreateHostView(rootSelectorOrNode: string|any, hostInjector: Injector, projectableNodes: any[][]):\n      ComponentRef<any> {\n    this.context = /** @type {?} */(( <any>EMPTY_CONTEXT));\n    this._hasExternalHostElement = isPresent(rootSelectorOrNode);\n    this._hostInjector = hostInjector;\n    this._hostProjectableNodes = projectableNodes;\n    return this.createInternal(rootSelectorOrNode);\n  }\n/**\n * Overwritten by implementations.\n * Returns the ComponentRef for the host element for ViewType.HOST.\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\ncreateInternal(rootSelectorOrNode: string|any): ComponentRef<any> { return null; }\n/**\n * Overwritten by implementations.\n * @param {?} templateNodeIndex\n * @return {?}\n */\ncreateEmbeddedViewInternal(templateNodeIndex: number): AppView<any> { return null; }\n/**\n * @param {?} lastRootNode\n * @param {?} allNodes\n * @param {?} disposables\n * @return {?}\n */\ninit(lastRootNode: any, allNodes: any[], disposables: Function[]) {\n    this.lastRootNode = lastRootNode;\n    this.allNodes = allNodes;\n    this.disposables = disposables;\n    if (this.type === ViewType.COMPONENT) {\n      this.dirtyParentQueriesInternal();\n    }\n  }\n/**\n * @param {?} token\n * @param {?} nodeIndex\n * @param {?=} notFoundValue\n * @return {?}\n */\ninjectorGet(token: any, nodeIndex: number, notFoundValue: any = THROW_IF_NOT_FOUND): any {\n    let /** @type {?} */ result = UNDEFINED;\n    let /** @type {?} */ view: AppView<any> = this;\n    while (result === UNDEFINED) {\n      if (isPresent(nodeIndex)) {\n        result = view.injectorGetInternal(token, nodeIndex, UNDEFINED);\n      }\n      if (result === UNDEFINED && view.type === ViewType.HOST) {\n        result = view._hostInjector.get(token, notFoundValue);\n      }\n      nodeIndex = view.parentIndex;\n      view = view.parentView;\n    }\n    return result;\n  }\n/**\n * Overwritten by implementations\n * @param {?} token\n * @param {?} nodeIndex\n * @param {?} notFoundResult\n * @return {?}\n */\ninjectorGetInternal(token: any, nodeIndex: number, notFoundResult: any): any {\n    return notFoundResult;\n  }\n/**\n * @param {?} nodeIndex\n * @return {?}\n */\ninjector(nodeIndex: number): Injector { return new ElementInjector(this, nodeIndex); }\n/**\n * @return {?}\n */\ndetachAndDestroy() {\n    if (this.viewContainer) {\n      this.viewContainer.detachView(this.viewContainer.nestedViews.indexOf(this));\n    } else if (this.appRef) {\n      this.appRef.detachView(this.ref);\n    } else if (this._hasExternalHostElement) {\n      this.detach();\n    }\n    this.destroy();\n  }\n/**\n * @return {?}\n */\ndestroy() {\n    if (this.cdMode === ChangeDetectorStatus.Destroyed) {\n      return;\n    }\n    const /** @type {?} */ hostElement = this.type === ViewType.COMPONENT ? this.parentElement : null;\n    if (this.disposables) {\n      for (let /** @type {?} */ i = 0; i < this.disposables.length; i++) {\n        this.disposables[i]();\n      }\n    }\n    this.destroyInternal();\n    this.dirtyParentQueriesInternal();\n\n    if (this._animationContext) {\n      this._animationContext.onAllActiveAnimationsDone(\n          () => this.renderer.destroyView(hostElement, this.allNodes));\n    } else {\n      this.renderer.destroyView(hostElement, this.allNodes);\n    }\n\n    this.cdMode = ChangeDetectorStatus.Destroyed;\n  }\n/**\n * Overwritten by implementations\n * @return {?}\n */\ndestroyInternal(): void {}\n/**\n * Overwritten by implementations\n * @return {?}\n */\ndetachInternal(): void {}\n/**\n * @return {?}\n */\ndetach(): void {\n    this.detachInternal();\n    if (this._animationContext) {\n      this._animationContext.onAllActiveAnimationsDone(() => this._renderDetach());\n    } else {\n      this._renderDetach();\n    }\n    if (this.declaredViewContainer && this.declaredViewContainer !== this.viewContainer &&\n        this.declaredViewContainer.projectedViews) {\n      const /** @type {?} */ projectedViews = this.declaredViewContainer.projectedViews;\n      const /** @type {?} */ index = projectedViews.indexOf(this);\n      // perf: pop is faster than splice!\n      if (index >= projectedViews.length - 1) {\n        projectedViews.pop();\n      } else {\n        projectedViews.splice(index, 1);\n      }\n    }\n    this.appRef = null;\n    this.viewContainer = null;\n    this.dirtyParentQueriesInternal();\n  }\n/**\n * @return {?}\n */\nprivate _renderDetach() {\n    if (this._directRenderer) {\n      this.visitRootNodesInternal(this._directRenderer.remove, null);\n    } else {\n      this.renderer.detachView(this.flatRootNodes);\n    }\n  }\n/**\n * @param {?} appRef\n * @return {?}\n */\nattachToAppRef(appRef: ApplicationRef) {\n    if (this.viewContainer) {\n      throw new Error('This view is already attached to a ViewContainer!');\n    }\n    this.appRef = appRef;\n    this.dirtyParentQueriesInternal();\n  }\n/**\n * @param {?} viewContainer\n * @param {?} prevView\n * @return {?}\n */\nattachAfter(viewContainer: ViewContainer, prevView: AppView<any>) {\n    if (this.appRef) {\n      throw new Error('This view is already attached directly to the ApplicationRef!');\n    }\n    this._renderAttach(viewContainer, prevView);\n    this.viewContainer = viewContainer;\n    if (this.declaredViewContainer && this.declaredViewContainer !== viewContainer) {\n      if (!this.declaredViewContainer.projectedViews) {\n        this.declaredViewContainer.projectedViews = [];\n      }\n      this.declaredViewContainer.projectedViews.push(this);\n    }\n    this.dirtyParentQueriesInternal();\n  }\n/**\n * @param {?} viewContainer\n * @param {?} prevView\n * @return {?}\n */\nmoveAfter(viewContainer: ViewContainer, prevView: AppView<any>) {\n    this._renderAttach(viewContainer, prevView);\n    this.dirtyParentQueriesInternal();\n  }\n/**\n * @param {?} viewContainer\n * @param {?} prevView\n * @return {?}\n */\nprivate _renderAttach(viewContainer: ViewContainer, prevView: AppView<any>) {\n    const /** @type {?} */ prevNode = prevView ? prevView.lastRootNode : viewContainer.nativeElement;\n    if (this._directRenderer) {\n      const /** @type {?} */ nextSibling = this._directRenderer.nextSibling(prevNode);\n      if (nextSibling) {\n        this.visitRootNodesInternal(this._directRenderer.insertBefore, nextSibling);\n      } else {\n        const /** @type {?} */ parentElement = this._directRenderer.parentElement(prevNode);\n        if (parentElement) {\n          this.visitRootNodesInternal(this._directRenderer.appendChild, parentElement);\n        }\n      }\n    } else {\n      this.renderer.attachViewAfter(prevNode, this.flatRootNodes);\n    }\n  }\n/**\n * @return {?}\n */\nget changeDetectorRef(): ChangeDetectorRef { return this.ref; }\n/**\n * @return {?}\n */\nget flatRootNodes(): any[] {\n    const /** @type {?} */ nodes: any[] = [];\n    this.visitRootNodesInternal(addToArray, nodes);\n    return nodes;\n  }\n/**\n * @param {?} parentElement\n * @param {?} ngContentIndex\n * @return {?}\n */\nprojectNodes(parentElement: any, ngContentIndex: number) {\n    if (this._directRenderer) {\n      this.visitProjectedNodes(ngContentIndex, this._directRenderer.appendChild, parentElement);\n    } else {\n      const /** @type {?} */ nodes: any[] = [];\n      this.visitProjectedNodes(ngContentIndex, addToArray, nodes);\n      this.renderer.projectNodes(parentElement, nodes);\n    }\n  }\n/**\n * @param {?} ngContentIndex\n * @param {?} cb\n * @param {?} c\n * @return {?}\n */\nvisitProjectedNodes<C>(ngContentIndex: number, cb: (node: any, ctx: C) => void, c: C): void {\n    switch (this.type) {\n      case ViewType.EMBEDDED:\n        this.parentView.visitProjectedNodes(ngContentIndex, cb, c);\n        break;\n      case ViewType.COMPONENT:\n        if (this.parentView.type === ViewType.HOST) {\n          const /** @type {?} */ nodes = this.parentView._hostProjectableNodes[ngContentIndex] || [];\n          for (let /** @type {?} */ i = 0; i < nodes.length; i++) {\n            cb(nodes[i], c);\n          }\n        } else {\n          this.parentView.visitProjectableNodesInternal(this.parentIndex, ngContentIndex, cb, c);\n        }\n        break;\n    }\n  }\n/**\n * Overwritten by implementations\n * @param {?} cb\n * @param {?} c\n * @return {?}\n */\nvisitRootNodesInternal<C>(cb: (node: any, ctx: C) => void, c: C): void {}\n/**\n * Overwritten by implementations\n * @param {?} nodeIndex\n * @param {?} ngContentIndex\n * @param {?} cb\n * @param {?} c\n * @return {?}\n */\nvisitProjectableNodesInternal<C>(\n      nodeIndex: number, ngContentIndex: number, cb: (node: any, ctx: C) => void, c: C): void {}\n/**\n * Overwritten by implementations\n * @return {?}\n */\ndirtyParentQueriesInternal(): void {}\n/**\n * @param {?} throwOnChange\n * @return {?}\n */\ninternalDetectChanges(throwOnChange: boolean): void {\n    if (this.cdMode !== ChangeDetectorStatus.Detached) {\n      this.detectChanges(throwOnChange);\n    }\n  }\n/**\n * @param {?} throwOnChange\n * @return {?}\n */\ndetectChanges(throwOnChange: boolean): void {\n    const /** @type {?} */ s = _scope_check(this.clazz);\n    if (this.cdMode === ChangeDetectorStatus.Checked ||\n        this.cdMode === ChangeDetectorStatus.Errored)\n      return;\n    if (this.cdMode === ChangeDetectorStatus.Destroyed) {\n      this.throwDestroyedError('detectChanges');\n    }\n    this.throwOnChange = throwOnChange;\n    this.detectChangesInternal();\n    if (this.cdMode === ChangeDetectorStatus.CheckOnce) this.cdMode = ChangeDetectorStatus.Checked;\n\n    this.numberOfChecks++;\n    wtfLeave(s);\n  }\n/**\n * Overwritten by implementations\n * @return {?}\n */\ndetectChangesInternal(): void {}\n/**\n * @return {?}\n */\nmarkAsCheckOnce(): void { this.cdMode = ChangeDetectorStatus.CheckOnce; }\n/**\n * @return {?}\n */\nmarkPathToRootAsCheckOnce(): void {\n    let /** @type {?} */ c: AppView<any> = this;\n    while (isPresent(c) && c.cdMode !== ChangeDetectorStatus.Detached) {\n      if (c.cdMode === ChangeDetectorStatus.Checked) {\n        c.cdMode = ChangeDetectorStatus.CheckOnce;\n      }\n      if (c.type === ViewType.COMPONENT) {\n        c = c.parentView;\n      } else {\n        c = c.viewContainer ? c.viewContainer.parentView : null;\n      }\n    }\n  }\n/**\n * @param {?} cb\n * @return {?}\n */\neventHandler<E, R>(cb: (eventName: string, event?: E) => R): (eventName: string, event?: E) => R {\n    return cb;\n  }\n/**\n * @param {?} details\n * @return {?}\n */\nthrowDestroyedError(details: string): void { throw viewDestroyedError(details); }\n}\n\nfunction AppView_tsickle_Closure_declarations() {\n/** @type {?} */\nAppView.prototype.ref;\n/** @type {?} */\nAppView.prototype.lastRootNode;\n/** @type {?} */\nAppView.prototype.allNodes;\n/** @type {?} */\nAppView.prototype.disposables;\n/** @type {?} */\nAppView.prototype.viewContainer;\n/** @type {?} */\nAppView.prototype.appRef;\n/** @type {?} */\nAppView.prototype.numberOfChecks;\n/** @type {?} */\nAppView.prototype.throwOnChange;\n/** @type {?} */\nAppView.prototype.renderer;\n/** @type {?} */\nAppView.prototype._hasExternalHostElement;\n/** @type {?} */\nAppView.prototype._hostInjector;\n/** @type {?} */\nAppView.prototype._hostProjectableNodes;\n/** @type {?} */\nAppView.prototype._animationContext;\n/** @type {?} */\nAppView.prototype._directRenderer;\n/** @type {?} */\nAppView.prototype.context;\n/** @type {?} */\nAppView.prototype.clazz;\n/** @type {?} */\nAppView.prototype.componentType;\n/** @type {?} */\nAppView.prototype.type;\n/** @type {?} */\nAppView.prototype.viewUtils;\n/** @type {?} */\nAppView.prototype.parentView;\n/** @type {?} */\nAppView.prototype.parentIndex;\n/** @type {?} */\nAppView.prototype.parentElement;\n/** @type {?} */\nAppView.prototype.cdMode;\n/** @type {?} */\nAppView.prototype.declaredViewContainer;\n}\n\nexport class DebugAppView<T> extends AppView<T> {\nprivate _currentDebugContext: DebugContext = null;\n/**\n * @param {?} clazz\n * @param {?} componentType\n * @param {?} type\n * @param {?} viewUtils\n * @param {?} parentView\n * @param {?} parentIndex\n * @param {?} parentNode\n * @param {?} cdMode\n * @param {?} staticNodeDebugInfos\n * @param {?=} declaredViewContainer\n */\nconstructor(\n      clazz: any, componentType: RenderComponentType, type: ViewType, viewUtils: ViewUtils,\n      parentView: AppView<any>, parentIndex: number, parentNode: any, cdMode: ChangeDetectorStatus,\npublic staticNodeDebugInfos: StaticNodeDebugInfo[],\n      declaredViewContainer: ViewContainer = null) {\n    super(\n        clazz, componentType, type, viewUtils, parentView, parentIndex, parentNode, cdMode,\n        declaredViewContainer);\n  }\n/**\n * @param {?} context\n * @return {?}\n */\ncreate(context: T) {\n    this._resetDebug();\n    try {\n      return super.create(context);\n    } catch ( /** @type {?} */e) {\n      this._rethrowWithContext(e);\n      throw e;\n    }\n  }\n/**\n * @param {?} rootSelectorOrNode\n * @param {?} injector\n * @param {?=} projectableNodes\n * @return {?}\n */\ncreateHostView(\n      rootSelectorOrNode: string|any, injector: Injector,\n      projectableNodes: any[][] = null): ComponentRef<any> {\n    this._resetDebug();\n    try {\n      return super.createHostView(rootSelectorOrNode, injector, projectableNodes);\n    } catch ( /** @type {?} */e) {\n      this._rethrowWithContext(e);\n      throw e;\n    }\n  }\n/**\n * @param {?} token\n * @param {?} nodeIndex\n * @param {?=} notFoundResult\n * @return {?}\n */\ninjectorGet(token: any, nodeIndex: number, notFoundResult?: any): any {\n    this._resetDebug();\n    try {\n      return super.injectorGet(token, nodeIndex, notFoundResult);\n    } catch ( /** @type {?} */e) {\n      this._rethrowWithContext(e);\n      throw e;\n    }\n  }\n/**\n * @return {?}\n */\ndetach(): void {\n    this._resetDebug();\n    try {\n      super.detach();\n    } catch ( /** @type {?} */e) {\n      this._rethrowWithContext(e);\n      throw e;\n    }\n  }\n/**\n * @return {?}\n */\ndestroy() {\n    this._resetDebug();\n    try {\n      super.destroy();\n    } catch ( /** @type {?} */e) {\n      this._rethrowWithContext(e);\n      throw e;\n    }\n  }\n/**\n * @param {?} throwOnChange\n * @return {?}\n */\ndetectChanges(throwOnChange: boolean): void {\n    this._resetDebug();\n    try {\n      super.detectChanges(throwOnChange);\n    } catch ( /** @type {?} */e) {\n      this._rethrowWithContext(e);\n      throw e;\n    }\n  }\n/**\n * @return {?}\n */\nprivate _resetDebug() { this._currentDebugContext = null; }\n/**\n * @param {?} nodeIndex\n * @param {?} rowNum\n * @param {?} colNum\n * @return {?}\n */\ndebug(nodeIndex: number, rowNum: number, colNum: number): DebugContext {\n    return this._currentDebugContext = new DebugContext(this, nodeIndex, rowNum, colNum);\n  }\n/**\n * @param {?} e\n * @return {?}\n */\nprivate _rethrowWithContext(e: any) {\n    if (!(getType(e) == viewWrappedError)) {\n      if (!(getType(e) == expressionChangedAfterItHasBeenCheckedError)) {\n        this.cdMode = ChangeDetectorStatus.Errored;\n      }\n      if (isPresent(this._currentDebugContext)) {\n        throw viewWrappedError(e, this._currentDebugContext);\n      }\n    }\n  }\n/**\n * @param {?} cb\n * @return {?}\n */\neventHandler<E, R>(cb: (eventName: string, event?: E) => R): (eventName: string, event?: E) => R {\n    const /** @type {?} */ superHandler = super.eventHandler(cb);\n    return (eventName: string, event?: any) => {\n      this._resetDebug();\n      try {\n        return superHandler.call(this, eventName, event);\n      } catch ( /** @type {?} */e) {\n        this._rethrowWithContext(e);\n        throw e;\n      }\n    };\n  }\n}\n\nfunction DebugAppView_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugAppView.prototype._currentDebugContext;\n/** @type {?} */\nDebugAppView.prototype.staticNodeDebugInfos;\n}\n\n"]}