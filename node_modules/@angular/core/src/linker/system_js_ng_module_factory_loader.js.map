{"version":3,"sources":["../../../../../modules/@angular/core/src/linker/system_js_ng_module_factory_loader.ts"],"names":[],"mappings":"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","file":"system_js_ng_module_factory_loader.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable, Optional} from '../di';\n\nimport {Compiler} from './compiler';\nimport {NgModuleFactory} from './ng_module_factory';\nimport {NgModuleFactoryLoader} from './ng_module_factory_loader';\n\nconst /** @type {?} */ _SEPARATOR = '#';\n\nconst /** @type {?} */ FACTORY_CLASS_SUFFIX = 'NgFactory';\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class SystemJsNgModuleLoaderConfig {\n  /**\n   * Prefix to add when computing the name of the factory module for a given module name.\n   */\n  factoryPathPrefix: string;\n\n  /**\n   * Suffix to add when computing the name of the factory module for a given module name.\n   */\n  factoryPathSuffix: string;\n}\n\nfunction SystemJsNgModuleLoaderConfig_tsickle_Closure_declarations() {\n/**\n * Prefix to add when computing the name of the factory module for a given module name.\n * @type {?}\n */\nSystemJsNgModuleLoaderConfig.prototype.factoryPathPrefix;\n/**\n * Suffix to add when computing the name of the factory module for a given module name.\n * @type {?}\n */\nSystemJsNgModuleLoaderConfig.prototype.factoryPathSuffix;\n}\n\n\nconst /** @type {?} */ DEFAULT_CONFIG: SystemJsNgModuleLoaderConfig = {\n  factoryPathPrefix: '',\n  factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * \\@experimental\n */\nexport class SystemJsNgModuleLoader implements NgModuleFactoryLoader {\nprivate _config: SystemJsNgModuleLoaderConfig;\n/**\n * @param {?} _compiler\n * @param {?=} config\n */\nconstructor(private _compiler: Compiler,  config?: SystemJsNgModuleLoaderConfig) {\n    this._config = config || DEFAULT_CONFIG;\n  }\n/**\n * @param {?} path\n * @return {?}\n */\nload(path: string): Promise<NgModuleFactory<any>> {\n    const /** @type {?} */ offlineMode = this._compiler instanceof Compiler;\n    return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n  }\n/**\n * @param {?} path\n * @return {?}\n */\nprivate loadAndCompile(path: string): Promise<NgModuleFactory<any>> {\n    let [module, exportName] = path.split(_SEPARATOR);\n    if (exportName === undefined) {\n      exportName = 'default';\n    }\n\n    return System.import(module)\n        .then((module: any) => module[exportName])\n        .then((type: any) => checkNotEmpty(type, module, exportName))\n        .then((type: any) => this._compiler.compileModuleAsync(type));\n  }\n/**\n * @param {?} path\n * @return {?}\n */\nprivate loadFactory(path: string): Promise<NgModuleFactory<any>> {\n    let [module, exportName] = path.split(_SEPARATOR);\n    let /** @type {?} */ factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n    if (exportName === undefined) {\n      exportName = 'default';\n      factoryClassSuffix = '';\n    }\n\n    return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n        .then((module: any) => module[exportName + factoryClassSuffix])\n        .then((factory: any) => checkNotEmpty(factory, module, exportName));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Compiler, },\n{type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional }, ]},\n];\n}\n\nfunction SystemJsNgModuleLoader_tsickle_Closure_declarations() {\n/** @type {?} */\nSystemJsNgModuleLoader.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSystemJsNgModuleLoader.ctorParameters;\n/** @type {?} */\nSystemJsNgModuleLoader.prototype._config;\n/** @type {?} */\nSystemJsNgModuleLoader.prototype._compiler;\n}\n\n/**\n * @param {?} value\n * @param {?} modulePath\n * @param {?} exportName\n * @return {?}\n */\nfunction checkNotEmpty(value: any, modulePath: string, exportName: string): any {\n  if (!value) {\n    throw new Error(`Cannot find '${exportName}' in '${modulePath}'`);\n  }\n  return value;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}