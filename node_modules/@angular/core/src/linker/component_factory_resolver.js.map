{"version":3,"sources":["../../../../../modules/@angular/core/src/linker/component_factory_resolver.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAA,SAAE,EAAS,MAAA,gBAAA,CAAA;AAIlB;;;GAGG;AACH,MADC,kCAAA,SAAA;IAEC,IAAM,gBAAgB,CADhB,KAAA,GAAQ,KAAA,CAEV,oCAAkC,SADC,CAAS,SAAC,CAAS,mDAAC,CAAgD,CAAC;IAE5G,CAAkB,CAAE,KADV,CAAA,CAAI,CAAC,eAAC,CAAe,GAAG,SAAA,CAAU;IAE5C,MAAM,CADC,KAAA,CAAM;AAEf,CAAC;AAED,IAAM,gBAAgB,CADhB,eAAA,GAAkB,aAAA,CAAc;AAEtC;;;GAGG;AACH,MAJC,uBAAA,KAAA;IAKC,MAAM,CAJC,CAAA,CAAA,KAAU,CAAA,CAAI,CAAC,eAAC,CAAe,CAAC;AAKzC,CAAC;AACD;IAAA;IAQA,CAAC;IAPD;;;OAGG;IACH,+DANG,GAMH,UANG,SAAA;QAOC,MANM,uBAAA,CAAwB,SAAC,CAAS,CAAC;IAO3C,CAAC;IACH,oCAAC;AAAD,CARA,AAQC,IAAA;AACD;;;GAGG;AACH;IAAA;IAQA,CAAC;IAND;;;;OAIG;IACH,0DAXY,GAWZ,UAXY,SAAA,IAAA,CAAA;IAYZ,+BAAC;AAAD,CARA,AAQC;;AAbQ,6BAAA,GAAiC,IAAI,6BAAA,EAA8B,CAAE;AAe9E;IACA,gBAAgB;IAChB,wBAAwB,CAAC,IAAI,CAAC;AAC9B,CAAC;AAED;IAEA;;;OAGG;IACH,yCAnBG,SAA4C,EAAW,OAAS;QAAT,YAAA,GAAA,OAAA,CAAS;QAFzD,eAAA,GAAa,IAAI,GAAA,EAA+B,CAAG;QAuBzD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC1C,IAAM,OAAO,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;QACtD,CAAC;IACH,CAAC;IACH;;;OAGG;IACH,iEAvBG,GAuBH,UAvBG,SAAA;QAwBC,IAAI,gBAAgB,CAvBhB,MAAA,GAAS,IAAA,CAAK,UAAC,CAAU,GAAC,CAAG,SAAC,CAAS,CAAC;QAwB5C,EAAE,CAAC,CAAC,CAvBC,MAAC,CAAM,CAAC,CAAA;YAwBX,MAAM,GAvBG,IAAA,CAAK,OAAC,CAAO,uBAAC,CAAuB,SAAC,CAAS,CAAC;QAwB3D,CAAC;QACD,MAAM,CAvBC,MAAA,CAAO;IAwBhB,CAAC;IACH,sCAAC;AAAD,CAxBA,AAwBC,IAAA;;AAED;IACA,gBAAgB;IAChB,+BAA+B,CAAC,SAAS,CAAC,UAAU,CAAC;IACrD,gBAAgB;IAChB,+BAA+B,CAAC,SAAS,CAAC,OAAO,CAAC;AAClD,CAAC","file":"component_factory_resolver.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {stringify} from '../facade/lang';\nimport {Type} from '../type';\n\nimport {ComponentFactory} from './component_factory';\n/**\n * @param {?} component\n * @return {?}\n */\nexport function noComponentFactoryError(component: Function) {\n  const /** @type {?} */ error = Error(\n      `No component factory found for ${stringify(component)}. Did you add it to @NgModule.entryComponents?`);\n  ( /** @type {?} */((error as any)))[ERROR_COMPONENT] = component;\n  return error;\n}\n\nconst /** @type {?} */ ERROR_COMPONENT = 'ngComponent';\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getComponent(error: Error): Type<any> {\n  return ( /** @type {?} */((error as any)))[ERROR_COMPONENT];\n}\nclass _NullComponentFactoryResolver implements ComponentFactoryResolver {\n/**\n * @param {?} component\n * @return {?}\n */\nresolveComponentFactory<T>(component: {new (...args: any[]): T}): ComponentFactory<T> {\n    throw noComponentFactoryError(component);\n  }\n}\n/**\n * \\@stable\n * @abstract\n */\nexport abstract class ComponentFactoryResolver {\n  static NULL: ComponentFactoryResolver = new _NullComponentFactoryResolver();\n/**\n * @abstract\n * @param {?} component\n * @return {?}\n */\nresolveComponentFactory<T>(component: Type<T>) {}\n}\n\nfunction ComponentFactoryResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nComponentFactoryResolver.NULL;\n}\n\nexport class CodegenComponentFactoryResolver implements ComponentFactoryResolver {\nprivate _factories = new Map<any, ComponentFactory<any>>();\n/**\n * @param {?} factories\n * @param {?} _parent\n */\nconstructor(factories: ComponentFactory<any>[],\nprivate _parent: ComponentFactoryResolver) {\n    for (let i = 0; i < factories.length; i++) {\n      const factory = factories[i];\n      this._factories.set(factory.componentType, factory);\n    }\n  }\n/**\n * @param {?} component\n * @return {?}\n */\nresolveComponentFactory<T>(component: {new (...args: any[]): T}): ComponentFactory<T> {\n    let /** @type {?} */ result = this._factories.get(component);\n    if (!result) {\n      result = this._parent.resolveComponentFactory(component);\n    }\n    return result;\n  }\n}\n\nfunction CodegenComponentFactoryResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nCodegenComponentFactoryResolver.prototype._factories;\n/** @type {?} */\nCodegenComponentFactoryResolver.prototype._parent;\n}\n\n"]}