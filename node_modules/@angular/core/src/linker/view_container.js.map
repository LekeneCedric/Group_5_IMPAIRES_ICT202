{"version":3,"sources":["../../../../../modules/@angular/core/src/linker/view_container.ts"],"names":[],"mappings":"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","file":"view_container.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\n\nimport {ElementRef} from './element_ref';\nimport {AppView} from './view';\nimport {ViewContainerRef_} from './view_container_ref';\nimport {ViewType} from './view_type';\n/**\n * A ViewContainer is created for elements that have a ViewContainerRef\n * to keep track of the nested views.\n */\nexport class ViewContainer {\npublic nestedViews: AppView<any>[];\npublic projectedViews: AppView<any>[];\n/**\n * @param {?} index\n * @param {?} parentIndex\n * @param {?} parentView\n * @param {?} nativeElement\n */\nconstructor(\npublic index: number,\npublic parentIndex: number,\npublic parentView: AppView<any>,\npublic nativeElement: any) {}\n/**\n * @return {?}\n */\nget elementRef(): ElementRef { return new ElementRef(this.nativeElement); }\n/**\n * @return {?}\n */\nget vcRef(): ViewContainerRef_ { return new ViewContainerRef_(this); }\n/**\n * @return {?}\n */\nget parentInjector(): Injector { return this.parentView.injector(this.parentIndex); }\n/**\n * @return {?}\n */\nget injector(): Injector { return this.parentView.injector(this.index); }\n/**\n * @param {?} throwOnChange\n * @return {?}\n */\ndetectChangesInNestedViews(throwOnChange: boolean): void {\n    if (this.nestedViews) {\n      for (let /** @type {?} */ i = 0; i < this.nestedViews.length; i++) {\n        this.nestedViews[i].detectChanges(throwOnChange);\n      }\n    }\n  }\n/**\n * @return {?}\n */\ndestroyNestedViews(): void {\n    if (this.nestedViews) {\n      for (let /** @type {?} */ i = 0; i < this.nestedViews.length; i++) {\n        this.nestedViews[i].destroy();\n      }\n    }\n  }\n/**\n * @param {?} cb\n * @param {?} c\n * @return {?}\n */\nvisitNestedViewRootNodes<C>(cb: (node: any, ctx: C) => void, c: C): void {\n    if (this.nestedViews) {\n      for (let /** @type {?} */ i = 0; i < this.nestedViews.length; i++) {\n        this.nestedViews[i].visitRootNodesInternal(cb, c);\n      }\n    }\n  }\n/**\n * @param {?} nestedViewClass\n * @param {?} callback\n * @return {?}\n */\nmapNestedViews(nestedViewClass: any, callback: Function): any[] {\n    const /** @type {?} */ result: any[] = [];\n    if (this.nestedViews) {\n      for (let /** @type {?} */ i = 0; i < this.nestedViews.length; i++) {\n        const /** @type {?} */ nestedView = this.nestedViews[i];\n        if (nestedView.clazz === nestedViewClass) {\n          result.push(callback(nestedView));\n        }\n      }\n    }\n    if (this.projectedViews) {\n      for (let /** @type {?} */ i = 0; i < this.projectedViews.length; i++) {\n        const /** @type {?} */ projectedView = this.projectedViews[i];\n        if (projectedView.clazz === nestedViewClass) {\n          result.push(callback(projectedView));\n        }\n      }\n    }\n    return result;\n  }\n/**\n * @param {?} view\n * @param {?} toIndex\n * @return {?}\n */\nmoveView(view: AppView<any>, toIndex: number) {\n    const /** @type {?} */ fromIndex = this.nestedViews.indexOf(view);\n    if (view.type === ViewType.COMPONENT) {\n      throw new Error(`Component views can't be moved!`);\n    }\n    let /** @type {?} */ nestedViews = this.nestedViews;\n    if (nestedViews == null) {\n      nestedViews = [];\n      this.nestedViews = nestedViews;\n    }\n    nestedViews.splice(fromIndex, 1);\n    nestedViews.splice(toIndex, 0, view);\n    const /** @type {?} */ prevView = toIndex > 0 ? nestedViews[toIndex - 1] : null;\n    view.moveAfter(this, prevView);\n  }\n/**\n * @param {?} view\n * @param {?} viewIndex\n * @return {?}\n */\nattachView(view: AppView<any>, viewIndex: number) {\n    if (view.type === ViewType.COMPONENT) {\n      throw new Error(`Component views can't be moved!`);\n    }\n    let /** @type {?} */ nestedViews = this.nestedViews;\n    if (nestedViews == null) {\n      nestedViews = [];\n      this.nestedViews = nestedViews;\n    }\n    // perf: array.push is faster than array.splice!\n    if (viewIndex >= nestedViews.length) {\n      nestedViews.push(view);\n    } else {\n      nestedViews.splice(viewIndex, 0, view);\n    }\n    const /** @type {?} */ prevView = viewIndex > 0 ? nestedViews[viewIndex - 1] : null;\n    view.attachAfter(this, prevView);\n  }\n/**\n * @param {?} viewIndex\n * @return {?}\n */\ndetachView(viewIndex: number): AppView<any> {\n    const /** @type {?} */ view = this.nestedViews[viewIndex];\n    // perf: array.pop is faster than array.splice!\n    if (viewIndex >= this.nestedViews.length - 1) {\n      this.nestedViews.pop();\n    } else {\n      this.nestedViews.splice(viewIndex, 1);\n    }\n    if (view.type === ViewType.COMPONENT) {\n      throw new Error(`Component views can't be moved!`);\n    }\n    view.detach();\n    return view;\n  }\n}\n\nfunction ViewContainer_tsickle_Closure_declarations() {\n/** @type {?} */\nViewContainer.prototype.nestedViews;\n/** @type {?} */\nViewContainer.prototype.projectedViews;\n/** @type {?} */\nViewContainer.prototype.index;\n/** @type {?} */\nViewContainer.prototype.parentIndex;\n/** @type {?} */\nViewContainer.prototype.parentView;\n/** @type {?} */\nViewContainer.prototype.nativeElement;\n}\n\n"]}