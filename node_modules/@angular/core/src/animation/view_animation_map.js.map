{"version":3,"sources":["../../../../../modules/@angular/core/src/animation/view_animation_map.ts"],"names":[],"mappings":"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","file":"view_animation_map.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {isPresent} from '../facade/lang';\n\nimport {AnimationPlayer} from './animation_player';\nexport class ViewAnimationMap {\nprivate _map = new Map<any, {[key: string]: AnimationPlayer}>();\nprivate _allPlayers: AnimationPlayer[] = [];\n/**\n * @param {?} element\n * @param {?} animationName\n * @return {?}\n */\nfind(element: any, animationName: string): AnimationPlayer {\n    const /** @type {?} */ playersByAnimation = this._map.get(element);\n    if (isPresent(playersByAnimation)) {\n      return playersByAnimation[animationName];\n    }\n  }\n/**\n * @param {?} element\n * @return {?}\n */\nfindAllPlayersByElement(element: any): AnimationPlayer[] {\n    const /** @type {?} */ el = this._map.get(element);\n\n    return el ? Object.keys(el).map(k => el[k]) : [];\n  }\n/**\n * @param {?} element\n * @param {?} animationName\n * @param {?} player\n * @return {?}\n */\nset(element: any, animationName: string, player: AnimationPlayer): void {\n    let /** @type {?} */ playersByAnimation = this._map.get(element);\n    if (!isPresent(playersByAnimation)) {\n      playersByAnimation = {};\n    }\n    const /** @type {?} */ existingEntry = playersByAnimation[animationName];\n    if (isPresent(existingEntry)) {\n      this.remove(element, animationName);\n    }\n    playersByAnimation[animationName] = player;\n    this._allPlayers.push(player);\n    this._map.set(element, playersByAnimation);\n  }\n/**\n * @return {?}\n */\ngetAllPlayers(): AnimationPlayer[] { return this._allPlayers; }\n/**\n * @param {?} element\n * @param {?} animationName\n * @param {?=} targetPlayer\n * @return {?}\n */\nremove(element: any, animationName: string, targetPlayer: AnimationPlayer = null): void {\n    const /** @type {?} */ playersByAnimation = this._map.get(element);\n    if (playersByAnimation) {\n      const /** @type {?} */ player = playersByAnimation[animationName];\n      if (!targetPlayer || player === targetPlayer) {\n        delete playersByAnimation[animationName];\n        const /** @type {?} */ index = this._allPlayers.indexOf(player);\n        this._allPlayers.splice(index, 1);\n\n        if (Object.keys(playersByAnimation).length === 0) {\n          this._map.delete(element);\n        }\n      }\n    }\n  }\n}\n\nfunction ViewAnimationMap_tsickle_Closure_declarations() {\n/** @type {?} */\nViewAnimationMap.prototype._map;\n/** @type {?} */\nViewAnimationMap.prototype._allPlayers;\n}\n\n"]}