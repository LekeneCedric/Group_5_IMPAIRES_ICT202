{"version":3,"sources":["../../../../../../modules/@angular/core/src/change_detection/differs/default_keyvalue_differ.ts"],"names":[],"mappings":"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","file":"default_keyvalue_differ.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {StringMapWrapper} from '../../facade/collection';\nimport {isJsObject, looseIdentical, stringify} from '../../facade/lang';\nimport {ChangeDetectorRef} from '../change_detector_ref';\n\nimport {KeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDifferFactory} from './keyvalue_differs';\nexport class DefaultKeyValueDifferFactory<K, V> implements KeyValueDifferFactory {\nconstructor() {}\n/**\n * @param {?} obj\n * @return {?}\n */\nsupports(obj: any): boolean { return obj instanceof Map || isJsObject(obj); }\n\n  create<K, V>(): DefaultKeyValueDiffer<K, V>;\n/**\n * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n * @param {?=} cd\n * @return {?}\n */\ncreate<K, V>(cd?: ChangeDetectorRef): KeyValueDiffer<K, V> {\n    return new DefaultKeyValueDiffer<K, V>();\n  }\n}\nexport class DefaultKeyValueDiffer<K, V> implements KeyValueDiffer<K, V>, KeyValueChanges<K, V> {\nprivate _records: Map<K, V> = new Map<K, V>();\nprivate _mapHead: KeyValueChangeRecord_<K, V> = null;\nprivate _previousMapHead: KeyValueChangeRecord_<K, V> = null;\nprivate _changesHead: KeyValueChangeRecord_<K, V> = null;\nprivate _changesTail: KeyValueChangeRecord_<K, V> = null;\nprivate _additionsHead: KeyValueChangeRecord_<K, V> = null;\nprivate _additionsTail: KeyValueChangeRecord_<K, V> = null;\nprivate _removalsHead: KeyValueChangeRecord_<K, V> = null;\nprivate _removalsTail: KeyValueChangeRecord_<K, V> = null;\n/**\n * @return {?}\n */\nget isDirty(): boolean {\n    return this._additionsHead !== null || this._changesHead !== null ||\n        this._removalsHead !== null;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>;\n    for (record = this._mapHead; record !== null; record = record._next) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachPreviousItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>;\n    for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachChangedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>;\n    for (record = this._changesHead; record !== null; record = record._nextChanged) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachAddedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>;\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachRemovedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>;\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} map\n * @return {?}\n */\ndiff(map: Map<any, any>|{[k: string]: any}): any {\n    if (!map) {\n      map = new Map();\n    } else if (!(map instanceof Map || isJsObject(map))) {\n      throw new Error(`Error trying to diff '${map}'`);\n    }\n\n    return this.check(map) ? this : null;\n  }\n/**\n * @return {?}\n */\nonDestroy() {}\n/**\n * @param {?} map\n * @return {?}\n */\ncheck(map: Map<any, any>|{[k: string]: any}): boolean {\n    this._reset();\n    const /** @type {?} */ records = this._records;\n    let /** @type {?} */ oldSeqRecord: KeyValueChangeRecord_<K, V> = this._mapHead;\n    let /** @type {?} */ lastOldSeqRecord: KeyValueChangeRecord_<K, V> = null;\n    let /** @type {?} */ lastNewSeqRecord: KeyValueChangeRecord_<K, V> = null;\n    let /** @type {?} */ seqChanged: boolean = false;\n\n    this._forEach(map, (value: any, key: any) => {\n      let /** @type {?} */ newSeqRecord: any;\n      if (oldSeqRecord && key === oldSeqRecord.key) {\n        newSeqRecord = oldSeqRecord;\n        this._maybeAddToChanges(newSeqRecord, value);\n      } else {\n        seqChanged = true;\n        if (oldSeqRecord !== null) {\n          this._removeFromSeq(lastOldSeqRecord, oldSeqRecord);\n          this._addToRemovals(oldSeqRecord);\n        }\n        if (records.has(key)) {\n          newSeqRecord = records.get(key);\n          this._maybeAddToChanges(newSeqRecord, value);\n        } else {\n          newSeqRecord = new KeyValueChangeRecord_<K, V>(key);\n          records.set(key, newSeqRecord);\n          newSeqRecord.currentValue = value;\n          this._addToAdditions(newSeqRecord);\n        }\n      }\n\n      if (seqChanged) {\n        if (this._isInRemovals(newSeqRecord)) {\n          this._removeFromRemovals(newSeqRecord);\n        }\n        if (lastNewSeqRecord == null) {\n          this._mapHead = newSeqRecord;\n        } else {\n          lastNewSeqRecord._next = newSeqRecord;\n        }\n      }\n      lastOldSeqRecord = oldSeqRecord;\n      lastNewSeqRecord = newSeqRecord;\n      oldSeqRecord = oldSeqRecord && oldSeqRecord._next;\n    });\n    this._truncate(lastOldSeqRecord, oldSeqRecord);\n    return this.isDirty;\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_reset() {\n    if (this.isDirty) {\n      let /** @type {?} */ record: KeyValueChangeRecord_<K, V>;\n      // Record the state of the mapping\n      for (record = this._previousMapHead = this._mapHead; record !== null; record = record._next) {\n        record._nextPrevious = record._next;\n      }\n\n      for (record = this._changesHead; record !== null; record = record._nextChanged) {\n        record.previousValue = record.currentValue;\n      }\n\n      for (record = this._additionsHead; record != null; record = record._nextAdded) {\n        record.previousValue = record.currentValue;\n      }\n\n      this._changesHead = this._changesTail = null;\n      this._additionsHead = this._additionsTail = null;\n      this._removalsHead = this._removalsTail = null;\n    }\n  }\n/**\n * @param {?} lastRecord\n * @param {?} record\n * @return {?}\n */\nprivate _truncate(lastRecord: KeyValueChangeRecord_<K, V>, record: KeyValueChangeRecord_<K, V>) {\n    while (record !== null) {\n      if (lastRecord === null) {\n        this._mapHead = null;\n      } else {\n        lastRecord._next = null;\n      }\n      const /** @type {?} */ nextRecord = record._next;\n      this._addToRemovals(record);\n      lastRecord = record;\n      record = nextRecord;\n    }\n\n    for (let /** @type {?} */ rec: KeyValueChangeRecord_<K, V> = this._removalsHead; rec !== null;\n         rec = rec._nextRemoved) {\n      rec.previousValue = rec.currentValue;\n      rec.currentValue = null;\n      this._records.delete(rec.key);\n    }\n  }\n/**\n * @param {?} record\n * @param {?} newValue\n * @return {?}\n */\nprivate _maybeAddToChanges(record: KeyValueChangeRecord_<K, V>, newValue: any): void {\n    if (!looseIdentical(newValue, record.currentValue)) {\n      record.previousValue = record.currentValue;\n      record.currentValue = newValue;\n      this._addToChanges(record);\n    }\n  }\n/**\n * @param {?} record\n * @return {?}\n */\nprivate _isInRemovals(record: KeyValueChangeRecord_<K, V>) {\n    return record === this._removalsHead || record._nextRemoved !== null ||\n        record._prevRemoved !== null;\n  }\n/**\n * @param {?} record\n * @return {?}\n */\nprivate _addToRemovals(record: KeyValueChangeRecord_<K, V>) {\n    if (this._removalsHead === null) {\n      this._removalsHead = this._removalsTail = record;\n    } else {\n      this._removalsTail._nextRemoved = record;\n      record._prevRemoved = this._removalsTail;\n      this._removalsTail = record;\n    }\n  }\n/**\n * @param {?} prev\n * @param {?} record\n * @return {?}\n */\nprivate _removeFromSeq(prev: KeyValueChangeRecord_<K, V>, record: KeyValueChangeRecord_<K, V>) {\n    const /** @type {?} */ next = record._next;\n    if (prev === null) {\n      this._mapHead = next;\n    } else {\n      prev._next = next;\n    }\n    record._next = null;\n  }\n/**\n * @param {?} record\n * @return {?}\n */\nprivate _removeFromRemovals(record: KeyValueChangeRecord_<K, V>) {\n    const /** @type {?} */ prev = record._prevRemoved;\n    const /** @type {?} */ next = record._nextRemoved;\n    if (prev === null) {\n      this._removalsHead = next;\n    } else {\n      prev._nextRemoved = next;\n    }\n    if (next === null) {\n      this._removalsTail = prev;\n    } else {\n      next._prevRemoved = prev;\n    }\n    record._prevRemoved = record._nextRemoved = null;\n  }\n/**\n * @param {?} record\n * @return {?}\n */\nprivate _addToAdditions(record: KeyValueChangeRecord_<K, V>) {\n    if (this._additionsHead === null) {\n      this._additionsHead = this._additionsTail = record;\n    } else {\n      this._additionsTail._nextAdded = record;\n      this._additionsTail = record;\n    }\n  }\n/**\n * @param {?} record\n * @return {?}\n */\nprivate _addToChanges(record: KeyValueChangeRecord_<K, V>) {\n    if (this._changesHead === null) {\n      this._changesHead = this._changesTail = record;\n    } else {\n      this._changesTail._nextChanged = record;\n      this._changesTail = record;\n    }\n  }\n/**\n * @return {?}\n */\ntoString(): string {\n    const /** @type {?} */ items: any[] = [];\n    const /** @type {?} */ previous: any[] = [];\n    const /** @type {?} */ changes: any[] = [];\n    const /** @type {?} */ additions: any[] = [];\n    const /** @type {?} */ removals: any[] = [];\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>;\n\n    for (record = this._mapHead; record !== null; record = record._next) {\n      items.push(stringify(record));\n    }\n    for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n      previous.push(stringify(record));\n    }\n    for (record = this._changesHead; record !== null; record = record._nextChanged) {\n      changes.push(stringify(record));\n    }\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      additions.push(stringify(record));\n    }\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      removals.push(stringify(record));\n    }\n\n    return 'map: ' + items.join(', ') + '\\n' +\n        'previous: ' + previous.join(', ') + '\\n' +\n        'additions: ' + additions.join(', ') + '\\n' +\n        'changes: ' + changes.join(', ') + '\\n' +\n        'removals: ' + removals.join(', ') + '\\n';\n  }\n/**\n * \\@internal\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nprivate _forEach<K, V>(obj: Map<K, V>|{[k: string]: V}, fn: (v: V, k: any) => void) {\n    if (obj instanceof Map) {\n      obj.forEach(fn);\n    } else {\n      Object.keys(obj).forEach(k => fn(obj[k], k));\n    }\n  }\n}\n\nfunction DefaultKeyValueDiffer_tsickle_Closure_declarations() {\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._records;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._mapHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._previousMapHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._changesHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._changesTail;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._additionsHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._additionsTail;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._removalsHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._removalsTail;\n}\n\n/**\n * \\@stable\n */\nclass KeyValueChangeRecord_<K, V> implements KeyValueChangeRecord<K, V> {\n  previousValue: V = null;\n  currentValue: V = null;\n\n  /** @internal */\n  _nextPrevious: KeyValueChangeRecord_<K, V> = null;\n  /** @internal */\n  _next: KeyValueChangeRecord_<K, V> = null;\n  /** @internal */\n  _nextAdded: KeyValueChangeRecord_<K, V> = null;\n  /** @internal */\n  _nextRemoved: KeyValueChangeRecord_<K, V> = null;\n  /** @internal */\n  _prevRemoved: KeyValueChangeRecord_<K, V> = null;\n  /** @internal */\n  _nextChanged: KeyValueChangeRecord_<K, V> = null;\n/**\n * @param {?} key\n */\nconstructor(public key: K) {}\n/**\n * @return {?}\n */\ntoString(): string {\n    return looseIdentical(this.previousValue, this.currentValue) ?\n        stringify(this.key) :\n        (stringify(this.key) + '[' + stringify(this.previousValue) + '->' +\n         stringify(this.currentValue) + ']');\n  }\n}\n\nfunction KeyValueChangeRecord__tsickle_Closure_declarations() {\n/** @type {?} */\nKeyValueChangeRecord_.prototype.previousValue;\n/** @type {?} */\nKeyValueChangeRecord_.prototype.currentValue;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._nextPrevious;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._next;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._nextAdded;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._nextRemoved;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._prevRemoved;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._nextChanged;\n/** @type {?} */\nKeyValueChangeRecord_.prototype.key;\n}\n\n"]}